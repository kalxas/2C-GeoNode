diff --git a/geonode/base/migrations/0027_auto_20170801_1228.py b/geonode/base/migrations/0027_auto_20170801_1228.py
deleted file mode 100644
index e37735868..000000000
--- a/geonode/base/migrations/0027_auto_20170801_1228.py
+++ /dev/null
@@ -1,34 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('base', '26_to_27'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='abstract',
-            field=models.TextField(help_text='brief narrative summary of the content of the resource(s)', max_length=2000, verbose_name='abstract', blank=True),
-        ),
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='data_quality_statement',
-            field=models.TextField(help_text="general explanation of the data producer's knowledge about the lineage of a dataset", max_length=2000, null=True, verbose_name='data quality statement', blank=True),
-        ),
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='purpose',
-            field=models.TextField(help_text='summary of the intentions with which the resource(s) was developed', max_length=500, null=True, verbose_name='purpose', blank=True),
-        ),
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='supplemental_information',
-            field=models.TextField(default='No information provided', help_text='any other descriptive information about the dataset', max_length=2000, verbose_name='supplemental information'),
-        ),
-    ]
diff --git a/geonode/base/migrations/0028_resourcebase_is_approved.py b/geonode/base/migrations/0028_resourcebase_is_approved.py
deleted file mode 100644
index 3013e7386..000000000
--- a/geonode/base/migrations/0028_resourcebase_is_approved.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('base', '0027_auto_20170801_1228'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='resourcebase',
-            name='is_approved',
-            field=models.BooleanField(default=False, help_text='Is this resource validated from a publisher or editor?', verbose_name='Approved'),
-        ),
-    ]
diff --git a/geonode/base/migrations/0029_auto_20171114_0341.py b/geonode/base/migrations/0029_auto_20171114_0341.py
deleted file mode 100644
index af63bc622..000000000
--- a/geonode/base/migrations/0029_auto_20171114_0341.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('base', '0028_resourcebase_is_approved'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='language',
-            field=models.CharField(default=b'eng', help_text='language used within the dataset', max_length=3, verbose_name='language', choices=[(b'abk', b'Abkhazian'), (b'aar', b'Afar'), (b'afr', b'Afrikaans'), (b'amh', b'Amharic'), (b'ara', b'Arabic'), (b'asm', b'Assamese'), (b'aym', b'Aymara'), (b'aze', b'Azerbaijani'), (b'bak', b'Bashkir'), (b'ben', b'Bengali'), (b'bih', b'Bihari'), (b'bis', b'Bislama'), (b'bre', b'Breton'), (b'bul', b'Bulgarian'), (b'bel', b'Byelorussian'), (b'cat', b'Catalan'), (b'cos', b'Corsican'), (b'dan', b'Danish'), (b'dzo', b'Dzongkha'), (b'eng', b'English'), (b'fra', b'French'), (b'epo', b'Esperanto'), (b'est', b'Estonian'), (b'fao', b'Faroese'), (b'fij', b'Fijian'), (b'fin', b'Finnish'), (b'fry', b'Frisian'), (b'glg', b'Gallegan'), (b'ger', b'German'), (b'gre', b'Greek'), (b'kal', b'Greenlandic'), (b'grn', b'Guarani'), (b'guj', b'Gujarati'), (b'hau', b'Hausa'), (b'heb', b'Hebrew'), (b'hin', b'Hindi'), (b'hun', b'Hungarian'), (b'ind', b'Indonesian'), (b'ina', b'Interlingua (International Auxiliary language Association)'), (b'iku', b'Inuktitut'), (b'ipk', b'Inupiak'), (b'ita', b'Italian'), (b'jpn', b'Japanese'), (b'kan', b'Kannada'), (b'kas', b'Kashmiri'), (b'kaz', b'Kazakh'), (b'khm', b'Khmer'), (b'kin', b'Kinyarwanda'), (b'kir', b'Kirghiz'), (b'kor', b'Korean'), (b'kur', b'Kurdish'), (b'oci', b"Langue d 'Oc (post 1500)"), (b'lao', b'Lao'), (b'lat', b'Latin'), (b'lav', b'Latvian'), (b'lin', b'Lingala'), (b'lit', b'Lithuanian'), (b'mlg', b'Malagasy'), (b'mlt', b'Maltese'), (b'mar', b'Marathi'), (b'mol', b'Moldavian'), (b'mon', b'Mongolian'), (b'nau', b'Nauru'), (b'nep', b'Nepali'), (b'nor', b'Norwegian'), (b'ori', b'Oriya'), (b'orm', b'Oromo'), (b'pan', b'Panjabi'), (b'pol', b'Polish'), (b'por', b'Portuguese'), (b'pus', b'Pushto'), (b'que', b'Quechua'), (b'roh', b'Rhaeto-Romance'), (b'run', b'Rundi'), (b'rus', b'Russian'), (b'smo', b'Samoan'), (b'sag', b'Sango'), (b'san', b'Sanskrit'), (b'scr', b'Serbo-Croatian'), (b'sna', b'Shona'), (b'snd', b'Sindhi'), (b'sin', b'Singhalese'), (b'ssw', b'Siswant'), (b'slv', b'Slovenian'), (b'som', b'Somali'), (b'sot', b'Sotho'), (b'spa', b'Spanish'), (b'sun', b'Sudanese'), (b'swa', b'Swahili'), (b'tgl', b'Tagalog'), (b'tgk', b'Tajik'), (b'tam', b'Tamil'), (b'tat', b'Tatar'), (b'tel', b'Telugu'), (b'tha', b'Thai'), (b'tir', b'Tigrinya'), (b'tog', b'Tonga (Nyasa)'), (b'tso', b'Tsonga'), (b'tsn', b'Tswana'), (b'tur', b'Turkish'), (b'tuk', b'Turkmen'), (b'twi', b'Twi'), (b'uig', b'Uighur'), (b'ukr', b'Ukrainian'), (b'urd', b'Urdu'), (b'uzb', b'Uzbek'), (b'vie', b'Vietnamese'), (b'vol', b'Volap\xc3\xbck'), (b'wol', b'Wolof'), (b'xho', b'Xhosa'), (b'yid', b'Yiddish'), (b'yor', b'Yoruba'), (b'zha', b'Zhuang'), (b'zul', b'Zulu')]),
-        ),
-    ]
diff --git a/geonode/base/migrations/0030_auto_20180309_0833.py b/geonode/base/migrations/0030_auto_20180309_0833.py
deleted file mode 100644
index bc6fb9da9..000000000
--- a/geonode/base/migrations/0030_auto_20180309_0833.py
+++ /dev/null
@@ -1,35 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.9.13 on 2018-03-09 08:33
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('base', '0029_auto_20171114_0341'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='region',
-            name='bbox_x0',
-            field=models.DecimalField(blank=True, decimal_places=10, max_digits=30, null=True),
-        ),
-        migrations.AlterField(
-            model_name='region',
-            name='bbox_x1',
-            field=models.DecimalField(blank=True, decimal_places=10, max_digits=30, null=True),
-        ),
-        migrations.AlterField(
-            model_name='region',
-            name='bbox_y0',
-            field=models.DecimalField(blank=True, decimal_places=10, max_digits=30, null=True),
-        ),
-        migrations.AlterField(
-            model_name='region',
-            name='bbox_y1',
-            field=models.DecimalField(blank=True, decimal_places=10, max_digits=30, null=True),
-        ),
-    ]
diff --git a/geonode/base/migrations/0031_auto_20180309_0837.py b/geonode/base/migrations/0031_auto_20180309_0837.py
deleted file mode 100644
index f133349cc..000000000
--- a/geonode/base/migrations/0031_auto_20180309_0837.py
+++ /dev/null
@@ -1,55 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.9.13 on 2018-03-09 08:37
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('base', '0030_auto_20180309_0833'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='region',
-            name='bbox_x0',
-            field=models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True),
-        ),
-        migrations.AlterField(
-            model_name='region',
-            name='bbox_x1',
-            field=models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True),
-        ),
-        migrations.AlterField(
-            model_name='region',
-            name='bbox_y0',
-            field=models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True),
-        ),
-        migrations.AlterField(
-            model_name='region',
-            name='bbox_y1',
-            field=models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True),
-        ),
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='bbox_x0',
-            field=models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True),
-        ),
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='bbox_x1',
-            field=models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True),
-        ),
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='bbox_y0',
-            field=models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True),
-        ),
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='bbox_y1',
-            field=models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True),
-        ),
-    ]
diff --git a/geonode/base/migrations/0032_auto_20180329_1844.py b/geonode/base/migrations/0032_auto_20180329_1844.py
deleted file mode 100644
index e069f2f71..000000000
--- a/geonode/base/migrations/0032_auto_20180329_1844.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('base', '0031_auto_20180309_0837'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='is_approved',
-            field=models.BooleanField(default=True, help_text='Is this resource validated from a publisher or editor?', verbose_name='Approved'),
-        ),
-    ]
diff --git a/geonode/base/migrations/0033_auto_20180330_0951.py b/geonode/base/migrations/0033_auto_20180330_0951.py
deleted file mode 100644
index 806c5d979..000000000
--- a/geonode/base/migrations/0033_auto_20180330_0951.py
+++ /dev/null
@@ -1,24 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('base', '0032_auto_20180329_1844'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='region',
-            name='srid',
-            field=models.CharField(default=b'EPSG:4326', max_length=30),
-        ),
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='srid',
-            field=models.CharField(default=b'EPSG:4326', max_length=30),
-        ),
-    ]
diff --git a/geonode/base/migrations/0034_auto_20180606_1543.py b/geonode/base/migrations/0034_auto_20180606_1543.py
deleted file mode 100644
index 02fd6f2ec..000000000
--- a/geonode/base/migrations/0034_auto_20180606_1543.py
+++ /dev/null
@@ -1,30 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-06-06 15:43
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('base', '0033_auto_20180330_0951'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='metadata_uploaded_preserve',
-            field=models.BooleanField(default=False, verbose_name='Metadata uploaded preserve'),
-        ),
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='thumbnail_url',
-            field=models.TextField(blank=True, null=True, verbose_name='Thumbnail url'),
-        ),
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='tkeywords',
-            field=models.ManyToManyField(blank=True, help_text='formalised word(s) or phrase(s) from a fixed thesaurus used to describe the subject (space or comma-separated', to='base.ThesaurusKeyword', verbose_name='keywords'),
-        ),
-    ]
diff --git a/geonode/base/migrations/0035_resourcebase_dirty_state.py b/geonode/base/migrations/0035_resourcebase_dirty_state.py
deleted file mode 100644
index 1e4884ce0..000000000
--- a/geonode/base/migrations/0035_resourcebase_dirty_state.py
+++ /dev/null
@@ -1,20 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-10-02 15:42
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('base', '0034_auto_20180606_1543'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='resourcebase',
-            name='dirty_state',
-            field=models.BooleanField(default=False, help_text='Security Rules Are Not Synched with GeoServer!', verbose_name='Dirty State'),
-        ),
-    ]
diff --git a/geonode/base/migrations/0036_auto_20190129_1433.py b/geonode/base/migrations/0036_auto_20190129_1433.py
deleted file mode 100644
index 2a58bcaa8..000000000
--- a/geonode/base/migrations/0036_auto_20190129_1433.py
+++ /dev/null
@@ -1,61 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.16 on 2019-01-29 14:33
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import django.db.models.deletion
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('base', '0035_resourcebase_dirty_state'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Menu',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('title', models.CharField(max_length=255)),
-                ('order', models.IntegerField()),
-            ],
-            options={
-                'ordering': ['order'],
-            },
-        ),
-        migrations.CreateModel(
-            name='MenuItem',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('title', models.CharField(max_length=255)),
-                ('order', models.IntegerField()),
-                ('blank_target', models.BooleanField()),
-                ('url', models.CharField(max_length=2000)),
-                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Menu')),
-            ],
-            options={
-                'ordering': ['order'],
-            },
-        ),
-        migrations.CreateModel(
-            name='MenuPlaceholder',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('name', models.CharField(max_length=255, unique=True)),
-            ],
-        ),
-        migrations.AddField(
-            model_name='menu',
-            name='placeholder',
-            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.MenuPlaceholder'),
-        ),
-        migrations.AlterUniqueTogether(
-            name='menuitem',
-            unique_together=set([('menu', 'order'), ('menu', 'title')]),
-        ),
-        migrations.AlterUniqueTogether(
-            name='menu',
-            unique_together=set([('placeholder', 'order'), ('placeholder', 'title')]),
-        ),
-    ]
diff --git a/geonode/base/migrations/0037_auto_20190222_1347.py b/geonode/base/migrations/0037_auto_20190222_1347.py
deleted file mode 100644
index 50d650a31..000000000
--- a/geonode/base/migrations/0037_auto_20190222_1347.py
+++ /dev/null
@@ -1,20 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.20 on 2019-02-22 13:47
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('base', '0036_auto_20190129_1433'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='language',
-            field=models.CharField(choices=[(b'abk', b'Abkhazian'), (b'aar', b'Afar'), (b'afr', b'Afrikaans'), (b'amh', b'Amharic'), (b'ara', b'Arabic'), (b'asm', b'Assamese'), (b'aym', b'Aymara'), (b'aze', b'Azerbaijani'), (b'bak', b'Bashkir'), (b'ben', b'Bengali'), (b'bih', b'Bihari'), (b'bis', b'Bislama'), (b'bre', b'Breton'), (b'bul', b'Bulgarian'), (b'bel', b'Byelorussian'), (b'cat', b'Catalan'), (b'chi', b'Chinese'), (b'cos', b'Corsican'), (b'dan', b'Danish'), (b'dzo', b'Dzongkha'), (b'eng', b'English'), (b'fra', b'French'), (b'epo', b'Esperanto'), (b'est', b'Estonian'), (b'fao', b'Faroese'), (b'fij', b'Fijian'), (b'fin', b'Finnish'), (b'fry', b'Frisian'), (b'glg', b'Gallegan'), (b'ger', b'German'), (b'gre', b'Greek'), (b'kal', b'Greenlandic'), (b'grn', b'Guarani'), (b'guj', b'Gujarati'), (b'hau', b'Hausa'), (b'heb', b'Hebrew'), (b'hin', b'Hindi'), (b'hun', b'Hungarian'), (b'ind', b'Indonesian'), (b'ina', b'Interlingua (International Auxiliary language Association)'), (b'iku', b'Inuktitut'), (b'ipk', b'Inupiak'), (b'ita', b'Italian'), (b'jpn', b'Japanese'), (b'kan', b'Kannada'), (b'kas', b'Kashmiri'), (b'kaz', b'Kazakh'), (b'khm', b'Khmer'), (b'kin', b'Kinyarwanda'), (b'kir', b'Kirghiz'), (b'kor', b'Korean'), (b'kur', b'Kurdish'), (b'oci', b"Langue d 'Oc (post 1500)"), (b'lao', b'Lao'), (b'lat', b'Latin'), (b'lav', b'Latvian'), (b'lin', b'Lingala'), (b'lit', b'Lithuanian'), (b'mlg', b'Malagasy'), (b'mlt', b'Maltese'), (b'mar', b'Marathi'), (b'mol', b'Moldavian'), (b'mon', b'Mongolian'), (b'nau', b'Nauru'), (b'nep', b'Nepali'), (b'nor', b'Norwegian'), (b'ori', b'Oriya'), (b'orm', b'Oromo'), (b'pan', b'Panjabi'), (b'pol', b'Polish'), (b'por', b'Portuguese'), (b'pus', b'Pushto'), (b'que', b'Quechua'), (b'roh', b'Rhaeto-Romance'), (b'run', b'Rundi'), (b'rus', b'Russian'), (b'smo', b'Samoan'), (b'sag', b'Sango'), (b'san', b'Sanskrit'), (b'scr', b'Serbo-Croatian'), (b'sna', b'Shona'), (b'snd', b'Sindhi'), (b'sin', b'Singhalese'), (b'ssw', b'Siswant'), (b'slv', b'Slovenian'), (b'som', b'Somali'), (b'sot', b'Sotho'), (b'spa', b'Spanish'), (b'sun', b'Sudanese'), (b'swa', b'Swahili'), (b'tgl', b'Tagalog'), (b'tgk', b'Tajik'), (b'tam', b'Tamil'), (b'tat', b'Tatar'), (b'tel', b'Telugu'), (b'tha', b'Thai'), (b'tir', b'Tigrinya'), (b'tog', b'Tonga (Nyasa)'), (b'tso', b'Tsonga'), (b'tsn', b'Tswana'), (b'tur', b'Turkish'), (b'tuk', b'Turkmen'), (b'twi', b'Twi'), (b'uig', b'Uighur'), (b'ukr', b'Ukrainian'), (b'urd', b'Urdu'), (b'uzb', b'Uzbek'), (b'vie', b'Vietnamese'), (b'vol', b'Volap\xc3\xbck'), (b'wol', b'Wolof'), (b'xho', b'Xhosa'), (b'yid', b'Yiddish'), (b'yor', b'Yoruba'), (b'zha', b'Zhuang'), (b'zul', b'Zulu')], default=b'eng', help_text='language used within the dataset', max_length=3, verbose_name='language'),
-        ),
-    ]
diff --git a/geonode/base/migrations/24_initial.py b/geonode/base/migrations/24_initial.py
deleted file mode 100644
index 4781a4c86..000000000
--- a/geonode/base/migrations/24_initial.py
+++ /dev/null
@@ -1,224 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import mptt.fields
-import geonode.security.models
-import datetime
-from django.conf import settings
-import taggit.managers
-from django.utils.timezone import now
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('contenttypes', '0002_remove_content_type_name'),
-        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='ContactRole',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('role', models.CharField(help_text='function performed by the responsible party', max_length=255, choices=[(b'author', 'party who authored the resource'), (b'processor', 'party who has processed the data in a manner such that the resource has been modified'), (b'publisher', 'party who published the resource'), (b'custodian', 'party that accepts accountability and responsibility for the data and ensures         appropriate care and maintenance of the resource'), (b'pointOfContact', 'party who can be contacted for acquiring knowledge about or acquisition of the resource'), (b'distributor', 'party who distributes the resource'), (b'user', 'party who uses the resource'), (b'resourceProvider', 'party that supplies the resource'), (b'originator', 'party who created the resource'), (b'owner', 'party that owns the resource'), (b'principalInvestigator', 'key party responsible for gathering information and conducting research')])),
-                ('contact', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
-            ],
-        ),
-        migrations.CreateModel(
-            name='License',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('identifier', models.CharField(max_length=255, editable=False)),
-                ('name', models.CharField(max_length=100)),
-                ('name_en', models.CharField(max_length=100, null=True)),
-                ('abbreviation', models.CharField(max_length=20, null=True, blank=True)),
-                ('description', models.TextField(null=True, blank=True)),
-                ('description_en', models.TextField(null=True, blank=True)),
-                ('url', models.URLField(max_length=2000, null=True, blank=True)),
-                ('license_text', models.TextField(null=True, blank=True)),
-                ('license_text_en', models.TextField(null=True, blank=True)),
-            ],
-            options={
-                'ordering': ('name',),
-                'verbose_name_plural': 'Licenses',
-            },
-        ),
-        migrations.CreateModel(
-            name='Link',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('extension', models.CharField(help_text='For example "kml"', max_length=255)),
-                ('link_type', models.CharField(max_length=255, choices=[(b'original', b'original'), (b'data', b'data'), (b'image', b'image'), (b'metadata', b'metadata'), (b'html', b'html'), (b'OGC:WMS', b'OGC:WMS'), (b'OGC:WFS', b'OGC:WFS'), (b'OGC:WCS', b'OGC:WCS')])),
-                ('name', models.CharField(help_text='For example "View in Google Earth"', max_length=255)),
-                ('mime', models.CharField(help_text='For example "text/xml"', max_length=255)),
-                ('url', models.TextField(max_length=1000)),
-            ],
-        ),
-        migrations.CreateModel(
-            name='Region',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('code', models.CharField(unique=True, max_length=50)),
-                ('name', models.CharField(max_length=255)),
-                ('name_en', models.CharField(max_length=255, null=True)),
-                ('lft', models.PositiveIntegerField(editable=False, db_index=True)),
-                ('rght', models.PositiveIntegerField(editable=False, db_index=True)),
-                ('tree_id', models.PositiveIntegerField(editable=False, db_index=True)),
-                ('level', models.PositiveIntegerField(editable=False, db_index=True)),
-                ('parent', mptt.fields.TreeForeignKey(related_name='children', blank=True, to='base.Region', null=True)),
-            ],
-            options={
-                'ordering': ('name',),
-                'verbose_name_plural': 'Metadata Regions',
-            },
-        ),
-        migrations.CreateModel(
-            name='ResourceBase',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('uuid', models.CharField(max_length=36)),
-                ('title', models.CharField(help_text='name by which the cited resource is known', max_length=255, verbose_name='title')),
-                ('date', models.DateTimeField(default=now, help_text='reference date for the cited resource', verbose_name='date')),
-                ('date_type', models.CharField(default=b'publication', help_text='identification of when a given event occurred', max_length=255, verbose_name='date type', choices=[(b'creation', 'Creation'), (b'publication', 'Publication'), (b'revision', 'Revision')])),
-                ('edition', models.CharField(help_text='version of the cited resource', max_length=255, null=True, verbose_name='edition', blank=True)),
-                ('abstract', models.TextField(help_text='brief narrative summary of the content of the resource(s)', verbose_name='abstract', blank=True)),
-                ('purpose', models.TextField(help_text='summary of the intentions with which the resource(s) was developed', null=True, verbose_name='purpose', blank=True)),
-                ('maintenance_frequency', models.CharField(choices=[(b'unknown', 'frequency of maintenance for the data is not known'), (b'continual', 'data is repeatedly and frequently updated'), (b'notPlanned', 'there are no plans to update the data'), (b'daily', 'data is updated each day'), (b'annually', 'data is updated every year'), (b'asNeeded', 'data is updated as deemed necessary'), (b'monthly', 'data is updated each month'), (b'fortnightly', 'data is updated every two weeks'), (b'irregular', 'data is updated in intervals that are uneven in duration'), (b'weekly', 'data is updated on a weekly basis'), (b'biannually', 'data is updated twice each year'), (b'quarterly', 'data is updated every three months')], max_length=255, blank=True, help_text='frequency with which modifications and deletions are made to the data after it is first produced', null=True, verbose_name='maintenance frequency')),
-                ('constraints_other', models.TextField(help_text='other restrictions and legal prerequisites for accessing and using the resource or metadata', null=True, verbose_name='restrictions other', blank=True)),
-                ('language', models.CharField(default=b'eng', help_text='language used within the dataset', max_length=3, verbose_name='language', choices=[(b'abk', b'Abkhazian'), (b'aar', b'Afar'), (b'afr', b'Afrikaans'), (b'amh', b'Amharic'), (b'ara', b'Arabic'), (b'asm', b'Assamese'), (b'aym', b'Aymara'), (b'aze', b'Azerbaijani'), (b'bak', b'Bashkir'), (b'ben', b'Bengali'), (b'bih', b'Bihari'), (b'bis', b'Bislama'), (b'bre', b'Breton'), (b'bul', b'Bulgarian'), (b'bel', b'Byelorussian'), (b'cat', b'Catalan'), (b'cos', b'Corsican'), (b'dan', b'Danish'), (b'dzo', b'Dzongkha'), (b'eng', b'English'), (b'fra', b'French'), (b'epo', b'Esperanto'), (b'est', b'Estonian'), (b'fao', b'Faroese'), (b'fij', b'Fijian'), (b'fin', b'Finnish'), (b'fry', b'Frisian'), (b'glg', b'Gallegan'), (b'ger', b'German'), (b'kal', b'Greenlandic'), (b'grn', b'Guarani'), (b'guj', b'Gujarati'), (b'hau', b'Hausa'), (b'heb', b'Hebrew'), (b'hin', b'Hindi'), (b'hun', b'Hungarian'), (b'ind', b'Indonesian'), (b'ina', b'Interlingua (International Auxiliary language Association)'), (b'iku', b'Inuktitut'), (b'ipk', b'Inupiak'), (b'ita', b'Italian'), (b'jpn', b'Japanese'), (b'kan', b'Kannada'), (b'kas', b'Kashmiri'), (b'kaz', b'Kazakh'), (b'khm', b'Khmer'), (b'kin', b'Kinyarwanda'), (b'kir', b'Kirghiz'), (b'kor', b'Korean'), (b'kur', b'Kurdish'), (b'oci', b"Langue d 'Oc (post 1500)"), (b'lao', b'Lao'), (b'lat', b'Latin'), (b'lav', b'Latvian'), (b'lin', b'Lingala'), (b'lit', b'Lithuanian'), (b'mlg', b'Malagasy'), (b'mlt', b'Maltese'), (b'mar', b'Marathi'), (b'mol', b'Moldavian'), (b'mon', b'Mongolian'), (b'nau', b'Nauru'), (b'nep', b'Nepali'), (b'nor', b'Norwegian'), (b'ori', b'Oriya'), (b'orm', b'Oromo'), (b'pan', b'Panjabi'), (b'pol', b'Polish'), (b'por', b'Portuguese'), (b'pus', b'Pushto'), (b'que', b'Quechua'), (b'roh', b'Rhaeto-Romance'), (b'run', b'Rundi'), (b'rus', b'Russian'), (b'smo', b'Samoan'), (b'sag', b'Sango'), (b'san', b'Sanskrit'), (b'scr', b'Serbo-Croatian'), (b'sna', b'Shona'), (b'snd', b'Sindhi'), (b'sin', b'Singhalese'), (b'ssw', b'Siswant'), (b'slv', b'Slovenian'), (b'som', b'Somali'), (b'sot', b'Sotho'), (b'spa', b'Spanish'), (b'sun', b'Sudanese'), (b'swa', b'Swahili'), (b'tgl', b'Tagalog'), (b'tgk', b'Tajik'), (b'tam', b'Tamil'), (b'tat', b'Tatar'), (b'tel', b'Telugu'), (b'tha', b'Thai'), (b'tir', b'Tigrinya'), (b'tog', b'Tonga (Nyasa)'), (b'tso', b'Tsonga'), (b'tsn', b'Tswana'), (b'tur', b'Turkish'), (b'tuk', b'Turkmen'), (b'twi', b'Twi'), (b'uig', b'Uighur'), (b'ukr', b'Ukrainian'), (b'urd', b'Urdu'), (b'uzb', b'Uzbek'), (b'vie', b'Vietnamese'), (b'vol', b'Volap\xc3\xbck'), (b'wol', b'Wolof'), (b'xho', b'Xhosa'), (b'yid', b'Yiddish'), (b'yor', b'Yoruba'), (b'zha', b'Zhuang'), (b'zul', b'Zulu')])),
-                ('temporal_extent_start', models.DateTimeField(help_text='time period covered by the content of the dataset (start)', null=True, verbose_name='temporal extent start', blank=True)),
-                ('temporal_extent_end', models.DateTimeField(help_text='time period covered by the content of the dataset (end)', null=True, verbose_name='temporal extent end', blank=True)),
-                ('supplemental_information', models.TextField(default='No information provided', help_text='any other descriptive information about the dataset', verbose_name='supplemental information')),
-                ('data_quality_statement', models.TextField(help_text="general explanation of the data producer's knowledge about the lineage of a dataset", null=True, verbose_name='data quality statement', blank=True)),
-                ('bbox_x0', models.DecimalField(null=True, max_digits=19, decimal_places=10, blank=True)),
-                ('bbox_x1', models.DecimalField(null=True, max_digits=19, decimal_places=10, blank=True)),
-                ('bbox_y0', models.DecimalField(null=True, max_digits=19, decimal_places=10, blank=True)),
-                ('bbox_y1', models.DecimalField(null=True, max_digits=19, decimal_places=10, blank=True)),
-                ('srid', models.CharField(default=b'EPSG:4326', max_length=255)),
-                ('csw_typename', models.CharField(default=b'gmd:MD_Metadata', max_length=32, verbose_name='CSW typename')),
-                ('csw_schema', models.CharField(default=b'http://www.isotc211.org/2005/gmd', max_length=64, verbose_name='CSW schema')),
-                ('csw_mdsource', models.CharField(default=b'local', max_length=256, verbose_name='CSW source')),
-                ('csw_insert_date', models.DateTimeField(auto_now_add=True, verbose_name='CSW insert date', null=True)),
-                ('csw_type', models.CharField(default=b'dataset', max_length=32, verbose_name='CSW type', choices=[(b'series', 'series'), (b'software', 'computer program or routine'), (b'featureType', 'feature type'), (b'model', 'copy or imitation of an existing or hypothetical object'), (b'collectionHardware', 'collection hardware'), (b'collectionSession', 'collection session'), (b'nonGeographicDataset', 'non-geographic data'), (b'propertyType', 'property type'), (b'fieldSession', 'field session'), (b'dataset', 'dataset'), (b'service', 'service interfaces'), (b'attribute', 'attribute class'), (b'attributeType', 'characteristic of a feature'), (b'tile', 'tile or spatial subset of geographic data'), (b'feature', 'feature'), (b'dimensionGroup', 'dimension group')])),
-                ('csw_anytext', models.TextField(null=True, verbose_name='CSW anytext', blank=True)),
-                ('csw_wkt_geometry', models.TextField(default=b'POLYGON((-180 -90,-180 90,180 90,180 -90,-180 -90))', verbose_name='CSW WKT geometry')),
-                ('metadata_uploaded', models.BooleanField(default=False)),
-                ('metadata_xml', models.TextField(default=b'<gmd:MD_Metadata xmlns:gmd="http://www.isotc211.org/2005/gmd"/>', null=True, blank=True)),
-                ('popular_count', models.IntegerField(default=0)),
-                ('share_count', models.IntegerField(default=0)),
-                ('featured', models.BooleanField(default=False, help_text='Should this resource be advertised in home page?', verbose_name='Featured')),
-                ('is_published', models.BooleanField(default=True, help_text='Should this resource be published and searchable?', verbose_name='Is Published')),
-                ('thumbnail_url', models.TextField(null=True, blank=True)),
-                ('detail_url', models.CharField(max_length=255, null=True, blank=True)),
-                ('rating', models.IntegerField(default=0, null=True, blank=True)),
-            ],
-            options={
-                'permissions': (('view_resourcebase', 'Can view resource'), ('change_resourcebase_permissions', 'Can change resource permissions'), ('download_resourcebase', 'Can download resource'), ('publish_resourcebase', 'Can publish resource'), ('change_resourcebase_metadata', 'Can change resource metadata')),
-            },
-            bases=(geonode.security.models.PermissionLevelMixin, models.Model),
-        ),
-        migrations.CreateModel(
-            name='RestrictionCodeType',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('identifier', models.CharField(max_length=255, editable=False)),
-                ('description', models.TextField(max_length=255, editable=False)),
-                ('description_en', models.TextField(max_length=255, null=True, editable=False)),
-                ('gn_description', models.TextField(max_length=255, verbose_name=b'GeoNode description')),
-                ('gn_description_en', models.TextField(max_length=255, null=True, verbose_name=b'GeoNode description')),
-                ('is_choice', models.BooleanField(default=True)),
-            ],
-            options={
-                'ordering': ('identifier',),
-                'verbose_name_plural': 'Metadata Restriction Code Types',
-            },
-        ),
-        migrations.CreateModel(
-            name='SpatialRepresentationType',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('identifier', models.CharField(max_length=255, editable=False)),
-                ('description', models.CharField(max_length=255, editable=False)),
-                ('description_en', models.CharField(max_length=255, null=True, editable=False)),
-                ('gn_description', models.CharField(max_length=255, verbose_name=b'GeoNode description')),
-                ('gn_description_en', models.CharField(max_length=255, null=True, verbose_name=b'GeoNode description')),
-                ('is_choice', models.BooleanField(default=True)),
-            ],
-            options={
-                'ordering': ('identifier',),
-                'verbose_name_plural': 'Metadata Spatial Representation Types',
-            },
-        ),
-        migrations.CreateModel(
-            name='TopicCategory',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('identifier', models.CharField(default=b'location', max_length=255)),
-                ('description', models.TextField(default=b'')),
-                ('description_en', models.TextField(default=b'', null=True)),
-                ('gn_description', models.TextField(default=b'', null=True, verbose_name=b'GeoNode description')),
-                ('gn_description_en', models.TextField(default=b'', null=True, verbose_name=b'GeoNode description')),
-                ('is_choice', models.BooleanField(default=True))
-            ],
-            options={
-                'ordering': ('identifier',),
-                'verbose_name_plural': 'Metadata Topic Categories',
-            },
-        ),
-        migrations.AddField(
-            model_name='resourcebase',
-            name='category',
-            field=models.ForeignKey(blank=True, to='base.TopicCategory', help_text='high-level geographic data thematic classification to assist in the grouping and search of available geographic data sets.', null=True),
-        ),
-        migrations.AddField(
-            model_name='resourcebase',
-            name='contacts',
-            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL, through='base.ContactRole'),
-        ),
-        migrations.AddField(
-            model_name='resourcebase',
-            name='license',
-            field=models.ForeignKey(blank=True, to='base.License', help_text='license of the dataset', null=True, verbose_name='License'),
-        ),
-        migrations.AddField(
-            model_name='resourcebase',
-            name='owner',
-            field=models.ForeignKey(related_name='owned_resource', verbose_name='Owner', blank=True, to=settings.AUTH_USER_MODEL, null=True),
-        ),
-        migrations.AddField(
-            model_name='resourcebase',
-            name='polymorphic_ctype',
-            field=models.ForeignKey(related_name='polymorphic_base.resourcebase_set+', editable=False, to='contenttypes.ContentType', null=True),
-        ),
-        migrations.AddField(
-            model_name='resourcebase',
-            name='regions',
-            field=models.ManyToManyField(help_text='keyword identifies a location', to='base.Region', verbose_name='keywords region', blank=True),
-        ),
-        migrations.AddField(
-            model_name='resourcebase',
-            name='restriction_code_type',
-            field=models.ForeignKey(blank=True, to='base.RestrictionCodeType', help_text='limitation(s) placed upon the access or use of the data.', null=True, verbose_name='restrictions'),
-        ),
-        migrations.AddField(
-            model_name='resourcebase',
-            name='spatial_representation_type',
-            field=models.ForeignKey(blank=True, to='base.SpatialRepresentationType', help_text='method used to represent geographic information in the dataset.', null=True, verbose_name='spatial representation type'),
-        ),
-        migrations.AddField(
-            model_name='link',
-            name='resource',
-            field=models.ForeignKey(blank=True, to='base.ResourceBase', null=True),
-        ),
-        migrations.AddField(
-            model_name='contactrole',
-            name='resource',
-            field=models.ForeignKey(blank=True, to='base.ResourceBase', null=True),
-        ),
-        migrations.AlterUniqueTogether(
-            name='contactrole',
-            unique_together=set([('contact', 'resource', 'role')]),
-        ),
-    ]
diff --git a/geonode/base/migrations/24_to_26.py b/geonode/base/migrations/24_to_26.py
deleted file mode 100644
index d5aad3d2e..000000000
--- a/geonode/base/migrations/24_to_26.py
+++ /dev/null
@@ -1,127 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import taggit.managers
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('base', '24_initial'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Backup',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('identifier', models.CharField(max_length=255, editable=False)),
-                ('name', models.CharField(max_length=100)),
-                ('name_en', models.CharField(max_length=100, null=True)),
-                ('date', models.DateTimeField(auto_now_add=True)),
-                ('description', models.TextField(null=True, blank=True)),
-                ('description_en', models.TextField(null=True, blank=True)),
-                ('base_folder', models.CharField(max_length=100)),
-                ('location', models.TextField(null=True, blank=True)),
-            ],
-            options={
-                'ordering': ('date',),
-                'verbose_name_plural': 'Backups',
-            },
-        ),
-        migrations.CreateModel(
-            name='HierarchicalKeyword',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('name', models.CharField(unique=True, max_length=100, verbose_name='Name')),
-                ('slug', models.SlugField(unique=True, max_length=100, verbose_name='Slug')),
-                ('path', models.CharField(unique=True, max_length=255)),
-                ('depth', models.PositiveIntegerField()),
-                ('numchild', models.PositiveIntegerField(default=0)),
-            ],
-            options={
-                'abstract': False,
-            },
-        ),
-        migrations.CreateModel(
-            name='TaggedContentItem',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('content_object', models.ForeignKey(to='base.ResourceBase')),
-                ('tag', models.ForeignKey(related_name='keywords', to='base.HierarchicalKeyword')),
-            ],
-            options={
-                'abstract': False,
-            },
-        ),
-        migrations.CreateModel(
-            name='Thesaurus',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('identifier', models.CharField(unique=True, max_length=255)),
-                ('title', models.CharField(max_length=255)),
-                ('date', models.CharField(default=b'', max_length=20)),
-                ('description', models.TextField(default=b'', max_length=255)),
-                ('slug', models.CharField(default=b'', max_length=64)),
-            ],
-            options={
-                'ordering': ('identifier',),
-                'verbose_name_plural': 'Thesauri',
-            },
-        ),
-        migrations.CreateModel(
-            name='ThesaurusKeyword',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('about', models.CharField(max_length=255, null=True, blank=True)),
-                ('alt_label', models.CharField(default=b'', max_length=255, null=True, blank=True)),
-                ('thesaurus', models.ForeignKey(related_name='thesaurus', to='base.Thesaurus')),
-            ],
-            options={
-                'ordering': ('alt_label',),
-                'verbose_name_plural': 'Thesaurus Keywords',
-            },
-        ),
-        migrations.CreateModel(
-            name='ThesaurusKeywordLabel',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('lang', models.CharField(max_length=3)),
-                ('label', models.CharField(max_length=255)),
-                ('keyword', models.ForeignKey(related_name='keyword', to='base.ThesaurusKeyword')),
-            ],
-            options={
-                'ordering': ('keyword', 'lang'),
-                'verbose_name_plural': 'Labels',
-            },
-        ),
-        migrations.AddField(
-            model_name='topiccategory',
-            name='fa_class',
-            field=models.CharField(default=b'fa-times', max_length=64),
-        ),
-        migrations.AddField(
-            model_name='resourcebase',
-            name='keywords',
-            field=taggit.managers.TaggableManager(to='base.HierarchicalKeyword', through='base.TaggedContentItem', blank=True, help_text='commonly used word(s) or formalised word(s) or phrase(s) used to describe the subject (space or comma-separated', verbose_name='keywords'),
-        ),
-        migrations.AddField(
-            model_name='resourcebase',
-            name='metadata_uploaded_preserve',
-            field=models.BooleanField(default=False),
-        ),
-        migrations.AddField(
-            model_name='resourcebase',
-            name='tkeywords',
-            field=models.ManyToManyField(help_text='formalised word(s) or phrase(s) from a fixed thesaurus used to describe the subject (space or comma-separated', to='base.ThesaurusKeyword', null=True, blank=True),
-        ),
-        migrations.AlterUniqueTogether(
-            name='thesauruskeywordlabel',
-            unique_together=set([('keyword', 'lang')]),
-        ),
-        migrations.AlterUniqueTogether(
-            name='thesauruskeyword',
-            unique_together=set([('thesaurus', 'alt_label')]),
-        ),
-    ]
diff --git a/geonode/base/migrations/26_to_27.py b/geonode/base/migrations/26_to_27.py
deleted file mode 100644
index 76a1716d0..000000000
--- a/geonode/base/migrations/26_to_27.py
+++ /dev/null
@@ -1,55 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('base', '24_to_26'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='resourcebase',
-            name='tkeywords',
-            field=models.ManyToManyField(help_text='formalised word(s) or phrase(s) from a fixed thesaurus used to describe the subject (space or comma-separated', to='base.ThesaurusKeyword', blank=True),
-        ),
-        migrations.AddField(
-            model_name='resourcebase',
-            name='group',
-            field=models.ForeignKey(blank=True, to='auth.Group', null=True),
-        ),
-
-        migrations.AddField(
-            model_name='resourcebase',
-            name='alternate',
-            field=models.CharField(max_length=128, null=True, blank=True),
-        ),
-        migrations.AddField(
-            model_name='region',
-            name='bbox_x0',
-            field=models.DecimalField(null=True, max_digits=19, decimal_places=10, blank=True),
-        ),
-        migrations.AddField(
-            model_name='region',
-            name='bbox_x1',
-            field=models.DecimalField(null=True, max_digits=19, decimal_places=10, blank=True),
-        ),
-        migrations.AddField(
-            model_name='region',
-            name='bbox_y0',
-            field=models.DecimalField(null=True, max_digits=19, decimal_places=10, blank=True),
-        ),
-        migrations.AddField(
-            model_name='region',
-            name='bbox_y1',
-            field=models.DecimalField(null=True, max_digits=19, decimal_places=10, blank=True),
-        ),
-        migrations.AddField(
-            model_name='region',
-            name='srid',
-            field=models.CharField(default=b'EPSG:4326', max_length=255),
-        ),
-    ]
diff --git a/geonode/base/templates/base/_resourcebase_snippet.html b/geonode/base/templates/base/_resourcebase_snippet.html
index 05e3e0d1c..e91a4ad5f 100644
--- a/geonode/base/templates/base/_resourcebase_snippet.html
+++ b/geonode/base/templates/base/_resourcebase_snippet.html
@@ -1,12 +1,12 @@
 {% load i18n %}
 {% verbatim %}
-<div class="row resourcebase-snippet">
+<div id="explore-layer-list" class="row resourcebase-snippet" data-new-map="{% endverbatim %}{% url "new_map" %}{% verbatim %}">
   <div ng-if="results.length == 0" ng-cloak>
     {% endverbatim %}
     <div><h3>{% trans "No content created yet." %}</h3></div>
     {% verbatim %}
   </div>
-  <article ng-repeat="item in results" resource_id="{{ item.id }}" ng-cloak class="ng-cloak">
+  <article ng-repeat="item in results track by item.uuid" resource_id="{{ item.id }}" ng-cloak class="ng-cloak">
     <div class="col-lg-12 item-container">
       <div class="col-lg-12 profile-avatar">
         <div class="col-lg-4 item-thumb">
diff --git a/geonode/catalogue/models.py b/geonode/catalogue/models.py
index c1325f5a1..0f267ffe8 100644
--- a/geonode/catalogue/models.py
+++ b/geonode/catalogue/models.py
@@ -42,6 +42,9 @@ def catalogue_pre_delete(instance, sender, **kwargs):
 def catalogue_post_save(instance, sender, **kwargs):
     """Get information from catalogue"""
 
+    # If fixtures were added via loaddata, don't run post_save.
+    if kwargs.get('raw', True):
+        return
     # if layer is not to be published, temporarily
     # change publish state to be able to update
     # properties (#2332)
@@ -108,6 +111,7 @@ def catalogue_pre_save(instance, sender, **kwargs):
     """Send information to catalogue"""
     return
 
+
     # no idea why this was removed in notifications branch
     record = None
 
diff --git a/geonode/client/migrations/0001_initial.py b/geonode/client/migrations/0001_initial.py
deleted file mode 100644
index ca886bdc0..000000000
--- a/geonode/client/migrations/0001_initial.py
+++ /dev/null
@@ -1,47 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='GeoNodeThemeCustomization',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('identifier', models.CharField(max_length=255, editable=False)),
-                ('name', models.CharField(max_length=100)),
-                ('date', models.DateTimeField(auto_now_add=True)),
-                ('description', models.TextField(null=True, blank=True)),
-                ('is_enabled', models.BooleanField(default=False)),
-                ('logo', models.ImageField(null=True, upload_to=b'img/%Y/%m', blank=True)),
-                ('jumbotron_bg', models.ImageField(null=True, upload_to=b'img/%Y/%m', blank=True)),
-                ('body_color', models.CharField(default=b'#333333', max_length=10)),
-                ('navbar_color', models.CharField(default=b'#333333', max_length=10)),
-                ('jumbotron_color', models.CharField(default=b'#2c689c', max_length=10)),
-                ('copyright_color', models.CharField(default=b'#2c689c', max_length=10)),
-                ('contactus', models.BooleanField(default=False)),
-                ('copyright', models.TextField(null=True, blank=True)),
-                ('contact_name', models.TextField(null=True, blank=True)),
-                ('contact_position', models.TextField(null=True, blank=True)),
-                ('contact_administrative_area', models.TextField(null=True, blank=True)),
-                ('contact_street', models.TextField(null=True, blank=True)),
-                ('contact_postal_code', models.TextField(null=True, blank=True)),
-                ('contact_city', models.TextField(null=True, blank=True)),
-                ('contact_country', models.TextField(null=True, blank=True)),
-                ('contact_delivery_point', models.TextField(null=True, blank=True)),
-                ('contact_voice', models.TextField(null=True, blank=True)),
-                ('contact_facsimile', models.TextField(null=True, blank=True)),
-                ('contact_email', models.TextField(null=True, blank=True)),
-            ],
-            options={
-                'ordering': ('date',),
-                'verbose_name_plural': 'Themes',
-            },
-        ),
-    ]
diff --git a/geonode/client/migrations/0002_auto_20180412_1039.py b/geonode/client/migrations/0002_auto_20180412_1039.py
deleted file mode 100644
index f2df1a126..000000000
--- a/geonode/client/migrations/0002_auto_20180412_1039.py
+++ /dev/null
@@ -1,38 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('geonode_client', '0001_initial'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Partner',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('logo', models.ImageField(null=True, upload_to=b'img/%Y/%m', blank=True)),
-                ('name', models.CharField(max_length=100)),
-                ('title', models.CharField(max_length=255)),
-                ('href', models.CharField(max_length=255)),
-            ],
-            options={
-                'ordering': ('name',),
-                'verbose_name_plural': 'Partners',
-            },
-        ),
-        migrations.AddField(
-            model_name='geonodethemecustomization',
-            name='partners_title',
-            field=models.CharField(default=b'Our Partners', max_length=100, null=True, blank=True),
-        ),
-        migrations.AddField(
-            model_name='geonodethemecustomization',
-            name='partners',
-            field=models.ManyToManyField(related_name='partners', to='geonode_client.Partner', blank=True),
-        ),
-    ]
diff --git a/geonode/client/migrations/0003_geonodethemecustomization_jumbotron_welcome_hide.py b/geonode/client/migrations/0003_geonodethemecustomization_jumbotron_welcome_hide.py
deleted file mode 100644
index 142c5066c..000000000
--- a/geonode/client/migrations/0003_geonodethemecustomization_jumbotron_welcome_hide.py
+++ /dev/null
@@ -1,20 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-04-16 09:49
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('geonode_client', '0002_auto_20180412_1039'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='geonodethemecustomization',
-            name='jumbotron_welcome_hide',
-            field=models.BooleanField(default=False),
-        ),
-    ]
diff --git a/geonode/client/migrations/0004_auto_20180416_1319.py b/geonode/client/migrations/0004_auto_20180416_1319.py
deleted file mode 100644
index 87e6ee000..000000000
--- a/geonode/client/migrations/0004_auto_20180416_1319.py
+++ /dev/null
@@ -1,30 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-04-16 13:19
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('geonode_client', '0003_geonodethemecustomization_jumbotron_welcome_hide'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='geonodethemecustomization',
-            name='jumbotron_site_description',
-            field=models.TextField(blank=True, null=True),
-        ),
-        migrations.AddField(
-            model_name='geonodethemecustomization',
-            name='jumbotron_welcome_content',
-            field=models.TextField(blank=True, null=True),
-        ),
-        migrations.AddField(
-            model_name='geonodethemecustomization',
-            name='jumbotron_welcome_title',
-            field=models.CharField(blank=True, max_length=255, null=True),
-        ),
-    ]
diff --git a/geonode/client/migrations/0005_auto_20181015_1201.py b/geonode/client/migrations/0005_auto_20181015_1201.py
deleted file mode 100644
index 410464e0e..000000000
--- a/geonode/client/migrations/0005_auto_20181015_1201.py
+++ /dev/null
@@ -1,25 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.15 on 2018-10-15 00:01
-from __future__ import unicode_literals
-
-from django.db import migrations
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('geonode_client', '0004_auto_20180416_1319'),
-    ]
-
-    operations = [
-        migrations.RemoveField(
-            model_name='geonodethemecustomization',
-            name='partners',
-        ),
-        migrations.DeleteModel(
-            name='GeoNodeThemeCustomization',
-        ),
-        migrations.DeleteModel(
-            name='Partner',
-        ),
-    ]
diff --git a/geonode/client/migrations/__init__.py b/geonode/client/migrations/__init__.py
deleted file mode 100644
index e69de29bb..000000000
diff --git a/geonode/contrib/datastore_shards/migrations/0001_initial.py b/geonode/contrib/datastore_shards/migrations/0001_initial.py
deleted file mode 100644
index 4f37f8c9d..000000000
--- a/geonode/contrib/datastore_shards/migrations/0001_initial.py
+++ /dev/null
@@ -1,26 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Database',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('name', models.TextField(verbose_name='Database Shard Name')),
-                ('layers_count', models.IntegerField(default=0, verbose_name='Layers Count')),
-                ('created_at', models.DateTimeField(auto_now=True)),
-                ('strategy_type', models.IntegerField(choices=[(0, b'yearly'), (1, b'monthly'), (2, b'layercount')])),
-            ],
-            options={
-                'verbose_name_plural': 'Shard Databases',
-            },
-        ),
-    ]
diff --git a/geonode/contrib/datastore_shards/migrations/__init__.py b/geonode/contrib/datastore_shards/migrations/__init__.py
deleted file mode 100644
index e69de29bb..000000000
diff --git a/geonode/contrib/monitoring/migrations/0001_monitoring_init.py b/geonode/contrib/monitoring/migrations/0001_monitoring_init.py
deleted file mode 100644
index 3261ff025..000000000
--- a/geonode/contrib/monitoring/migrations/0001_monitoring_init.py
+++ /dev/null
@@ -1,162 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import jsonfield.fields
-import datetime
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='ExceptionEvent',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('created', models.DateTimeField(db_index=True)),
-                ('received', models.DateTimeField(db_index=True)),
-                ('error_type', models.CharField(max_length=255, db_index=True)),
-                ('error_data', models.TextField(default=b'')),
-            ],
-        ),
-        migrations.CreateModel(
-            name='Host',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('name', models.CharField(unique=True, max_length=255)),
-                ('ip', models.GenericIPAddressField()),
-                ('active', models.BooleanField(default=True)),
-            ],
-        ),
-        migrations.CreateModel(
-            name='Metric',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('name', models.CharField(max_length=255, db_index=True)),
-            ],
-        ),
-        migrations.CreateModel(
-            name='MetricLabel',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('name', models.TextField(default=b'', blank=True)),
-            ],
-        ),
-        migrations.CreateModel(
-            name='MetricValue',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('valid_from', models.DateTimeField(db_index=True)),
-                ('valid_to', models.DateTimeField(db_index=True)),
-                ('value', models.CharField(max_length=255)),
-                ('value_num', models.DecimalField(default=None, null=True, max_digits=16, decimal_places=4, blank=True)),
-                ('value_raw', models.TextField(default=None, null=True, blank=True)),
-                ('data', jsonfield.fields.JSONField(default={})),
-                ('label', models.ForeignKey(to='monitoring.MetricLabel')),
-            ],
-        ),
-        migrations.CreateModel(
-            name='MonitoredResource',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('name', models.CharField(default=b'', max_length=255, blank=True)),
-                ('type', models.CharField(default=b'', max_length=255, choices=[(b'', b'No resource'), (b'layer', b'Layer'), (b'map', b'Map'), (b'document', b'Document'), (b'style', b'Style'), (b'admin', b'Admin'), (b'other', b'Other')])),
-            ],
-        ),
-        migrations.CreateModel(
-            name='RequestEvent',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('created', models.DateTimeField(db_index=True)),
-                ('received', models.DateTimeField(db_index=True)),
-                ('ows_type', models.CharField(default=b'other', max_length=255, choices=[(b'TMS', b'TMS'), (b'WMS-C', b'WMS-C'), (b'WMTS', b'WMTS'), (b'WCS', b'WCS'), (b'WFS', b'WFS'), (b'WMS', b'WMS'), (b'WPS', b'WPS'), (b'other', b'Other')])),
-                ('host', models.CharField(default=b'', max_length=255, blank=True)),
-                ('request_path', models.CharField(default=b'', max_length=255)),
-                ('resources', models.TextField(default=b'', help_text=b'Resources name (style, layer, document, map)', blank=True)),
-                ('request_method', models.CharField(max_length=16, choices=[(b'GET', b'GET'), (b'POST', b'POST'), (b'HEAD', b'HEAD'), (b'OPTIONS', b'OPTIONS'), (b'PUT', b'PUT'), (b'DELETE', b'DELETE')])),
-                ('response_status', models.PositiveIntegerField()),
-                ('response_size', models.PositiveIntegerField(default=0)),
-                ('response_time', models.PositiveIntegerField(default=0, help_text=b'Response processing time in ms')),
-                ('response_type', models.CharField(default=b'', max_length=255, null=True, blank=True)),
-                ('user_agent', models.CharField(default=None, max_length=255, null=True, blank=True)),
-                ('user_agent_family', models.CharField(default=None, max_length=255, null=True, blank=True)),
-                ('client_ip', models.GenericIPAddressField()),
-                ('client_lat', models.DecimalField(default=None, null=True, max_digits=8, decimal_places=5, blank=True)),
-                ('client_lon', models.DecimalField(default=None, null=True, max_digits=8, decimal_places=5, blank=True)),
-                ('client_country', models.CharField(default=None, max_length=255, null=True, blank=True)),
-                ('client_region', models.CharField(default=None, max_length=255, null=True, blank=True)),
-                ('client_city', models.CharField(default=None, max_length=255, null=True, blank=True)),
-                ('custom_id', models.CharField(default=None, max_length=255, null=True, db_index=True, blank=True)),
-            ],
-        ),
-        migrations.CreateModel(
-            name='Service',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('name', models.CharField(unique=True, max_length=255)),
-                ('check_interval', models.DurationField(default=datetime.timedelta(0, 60))),
-                ('last_check', models.DateTimeField(null=True, blank=True)),
-                ('active', models.BooleanField(default=True)),
-                ('notes', models.TextField(null=True, blank=True)),
-                ('url', models.URLField(default=b'', null=True, blank=True)),
-                ('host', models.ForeignKey(to='monitoring.Host')),
-            ],
-        ),
-        migrations.CreateModel(
-            name='ServiceType',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('name', models.CharField(unique=True, max_length=255, choices=[(b'geonode', b'GeoNode'), (b'geoserver', b'GeoServer'), (b'hostgeoserver', b'Host (GeoServer)'), (b'hostgeonode', b'Host (GeoNode)')])),
-            ],
-        ),
-        migrations.CreateModel(
-            name='ServiceTypeMetric',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('metric', models.ForeignKey(to='monitoring.Metric')),
-                ('service_type', models.ForeignKey(to='monitoring.ServiceType')),
-            ],
-        ),
-        migrations.AddField(
-            model_name='service',
-            name='service_type',
-            field=models.ForeignKey(to='monitoring.ServiceType'),
-        ),
-        migrations.AddField(
-            model_name='requestevent',
-            name='service',
-            field=models.ForeignKey(to='monitoring.Service'),
-        ),
-        migrations.AlterUniqueTogether(
-            name='monitoredresource',
-            unique_together=set([('name', 'type')]),
-        ),
-        migrations.AddField(
-            model_name='metricvalue',
-            name='resource',
-            field=models.ForeignKey(to='monitoring.MonitoredResource'),
-        ),
-        migrations.AddField(
-            model_name='metricvalue',
-            name='service',
-            field=models.ForeignKey(to='monitoring.Service'),
-        ),
-        migrations.AddField(
-            model_name='metricvalue',
-            name='service_metric',
-            field=models.ForeignKey(to='monitoring.ServiceTypeMetric'),
-        ),
-        migrations.AddField(
-            model_name='exceptionevent',
-            name='request',
-            field=models.ForeignKey(to='monitoring.RequestEvent'),
-        ),
-        migrations.AddField(
-            model_name='exceptionevent',
-            name='service',
-            field=models.ForeignKey(to='monitoring.Service'),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0002_monitoring_update.py b/geonode/contrib/monitoring/migrations/0002_monitoring_update.py
deleted file mode 100644
index 26488c381..000000000
--- a/geonode/contrib/monitoring/migrations/0002_monitoring_update.py
+++ /dev/null
@@ -1,18 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0001_monitoring_init'),
-    ]
-
-    operations = [
-        migrations.AlterUniqueTogether(
-            name='metricvalue',
-            unique_together=set([('valid_from', 'valid_to', 'service', 'service_metric', 'resource', 'label')]),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0003_monitoring_resources.py b/geonode/contrib/monitoring/migrations/0003_monitoring_resources.py
deleted file mode 100644
index e6fc3c2f5..000000000
--- a/geonode/contrib/monitoring/migrations/0003_monitoring_resources.py
+++ /dev/null
@@ -1,23 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0002_monitoring_update'),
-    ]
-
-    operations = [
-        migrations.RemoveField(
-            model_name='requestevent',
-            name='resources',
-        ),
-        migrations.AddField(
-            model_name='requestevent',
-            name='resources',
-            field=models.ManyToManyField(help_text=b'List of resources affected', to='monitoring.MonitoredResource', null=True, blank=True),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0004_monitoring_metric_type.py b/geonode/contrib/monitoring/migrations/0004_monitoring_metric_type.py
deleted file mode 100644
index 170cc9857..000000000
--- a/geonode/contrib/monitoring/migrations/0004_monitoring_metric_type.py
+++ /dev/null
@@ -1,44 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0003_monitoring_resources'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='metric',
-            name='type',
-            field=models.CharField(default=b'rate', max_length=255, choices=[(b'rate', b'Rate'), (b'count', b'Count'), (b'value', b'Value')]),
-        ),
-        migrations.AlterField(
-            model_name='exceptionevent',
-            name='request',
-            field=models.ForeignKey(related_name='exceptions', to='monitoring.RequestEvent'),
-        ),
-        migrations.AlterField(
-            model_name='metricvalue',
-            name='resource',
-            field=models.ForeignKey(related_name='metric_values', to='monitoring.MonitoredResource'),
-        ),
-        migrations.AlterField(
-            model_name='requestevent',
-            name='resources',
-            field=models.ManyToManyField(help_text=b'List of resources affected', related_name='requests', null=True, to='monitoring.MonitoredResource', blank=True),
-        ),
-        migrations.AlterField(
-            model_name='servicetypemetric',
-            name='metric',
-            field=models.ForeignKey(related_name='service_type', to='monitoring.Metric'),
-        ),
-        migrations.AlterField(
-            model_name='servicetypemetric',
-            name='service_type',
-            field=models.ForeignKey(related_name='metric', to='monitoring.ServiceType'),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0005_monitoring_ows_service.py b/geonode/contrib/monitoring/migrations/0005_monitoring_ows_service.py
deleted file mode 100644
index 5dae14b95..000000000
--- a/geonode/contrib/monitoring/migrations/0005_monitoring_ows_service.py
+++ /dev/null
@@ -1,44 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0004_monitoring_metric_type'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='OWSService',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('name', models.CharField(unique=True, max_length=16, choices=[(b'TMS', b'TMS'), (b'WMS-C', b'WMS-C'), (b'WMTS', b'WMTS'), (b'WCS', b'WCS'), (b'WFS', b'WFS'), (b'WMS', b'WMS'), (b'WPS', b'WPS'), (b'other', b'Other')])),
-            ],
-        ),
-        migrations.RemoveField(
-            model_name='requestevent',
-            name='ows_type',
-        ),
-        migrations.AlterField(
-            model_name='metricvalue',
-            name='label',
-            field=models.ForeignKey(related_name='metric_values', to='monitoring.MetricLabel'),
-        ),
-        migrations.AddField(
-            model_name='metricvalue',
-            name='ows_service',
-            field=models.ForeignKey(blank=True, to='monitoring.OWSService', null=True),
-        ),
-        migrations.AddField(
-            model_name='requestevent',
-            name='ows_service',
-            field=models.ForeignKey(blank=True, to='monitoring.OWSService', null=True),
-        ),
-        migrations.AlterUniqueTogether(
-            name='metricvalue',
-            unique_together=set([('valid_from', 'valid_to', 'service', 'service_metric', 'resource', 'label', 'ows_service')]),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0006_monitoring_path_text.py b/geonode/contrib/monitoring/migrations/0006_monitoring_path_text.py
deleted file mode 100644
index afeff46b8..000000000
--- a/geonode/contrib/monitoring/migrations/0006_monitoring_path_text.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0005_monitoring_ows_service'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='requestevent',
-            name='request_path',
-            field=models.TextField(default=b''),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0007_monitoring_exception_message.py b/geonode/contrib/monitoring/migrations/0007_monitoring_exception_message.py
deleted file mode 100644
index 974b4028a..000000000
--- a/geonode/contrib/monitoring/migrations/0007_monitoring_exception_message.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0006_monitoring_path_text'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='exceptionevent',
-            name='error_message',
-            field=models.CharField(default=b'', max_length=255),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0008_monitoring_notifications_check.py b/geonode/contrib/monitoring/migrations/0008_monitoring_notifications_check.py
deleted file mode 100644
index 377a10156..000000000
--- a/geonode/contrib/monitoring/migrations/0008_monitoring_notifications_check.py
+++ /dev/null
@@ -1,63 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import jsonfield.fields
-from django.conf import settings
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
-        ('monitoring', '0007_monitoring_exception_message'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='MetricNotificationCheck',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('min_value', models.DecimalField(default=None, null=True, max_digits=16, decimal_places=4, blank=True)),
-                ('max_value', models.DecimalField(default=None, null=True, max_digits=16, decimal_places=4, blank=True)),
-                ('max_timeout', models.DurationField(help_text=b'Max timeout for given metric before error should be raised', null=True, blank=True)),
-                ('active', models.BooleanField(default=True)),
-                ('label', models.ForeignKey(blank=True, to='monitoring.MetricLabel', null=True)),
-                ('metric', models.ForeignKey(related_name='checks', to='monitoring.Metric')),
-            ],
-        ),
-        migrations.CreateModel(
-            name='NotificationCheck',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('name', models.CharField(unique=True, max_length=255)),
-                ('description', models.CharField(max_length=255)),
-                ('user_threshold', jsonfield.fields.JSONField(default={}, help_text=b'Threshold definition')),
-            ],
-        ),
-        migrations.AddField(
-            model_name='metricnotificationcheck',
-            name='notification_check',
-            field=models.ForeignKey(related_name='checks', to='monitoring.NotificationCheck'),
-        ),
-        migrations.AddField(
-            model_name='metricnotificationcheck',
-            name='ows_service',
-            field=models.ForeignKey(blank=True, to='monitoring.OWSService', null=True),
-        ),
-        migrations.AddField(
-            model_name='metricnotificationcheck',
-            name='resource',
-            field=models.ForeignKey(blank=True, to='monitoring.MonitoredResource', null=True),
-        ),
-        migrations.AddField(
-            model_name='metricnotificationcheck',
-            name='service',
-            field=models.ForeignKey(related_name='checks', to='monitoring.Service'),
-        ),
-        migrations.AddField(
-            model_name='metricnotificationcheck',
-            name='user',
-            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0009_sample_count.py b/geonode/contrib/monitoring/migrations/0009_sample_count.py
deleted file mode 100644
index 1f12b230f..000000000
--- a/geonode/contrib/monitoring/migrations/0009_sample_count.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0008_monitoring_notifications_check'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='metricvalue',
-            name='samples_count',
-            field=models.PositiveIntegerField(default=0),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0010_metric_unit.py b/geonode/contrib/monitoring/migrations/0010_metric_unit.py
deleted file mode 100644
index 56a020f87..000000000
--- a/geonode/contrib/monitoring/migrations/0010_metric_unit.py
+++ /dev/null
@@ -1,29 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0009_sample_count'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='metric',
-            name='unit',
-            field=models.CharField(blank=True, max_length=255, null=True, choices=[(b'B', b'Bytes'), (b'MB', b'Megabytes'), (b'GB', b'Gigabytes'), (b'B/s', b'Bytes per second'), (b'MB/s', b'Megabytes per second'), (b'GB/s', b'Gigabytes per second'), (b's', b'Seconds'), (b'Rate', b'Rate'), (b'%', b'Percentage'), (b'Count', b'Count')]),
-        ),
-        migrations.AlterField(
-            model_name='metricvalue',
-            name='ows_service',
-            field=models.ForeignKey(related_name='metric_values', blank=True, to='monitoring.OWSService', null=True),
-        ),
-        migrations.AlterField(
-            model_name='owsservice',
-            name='name',
-            field=models.CharField(unique=True, max_length=16, choices=[(b'TMS', b'TMS'), (b'WMS-C', b'WMS-C'), (b'WMTS', b'WMTS'), (b'WCS', b'WCS'), (b'WFS', b'WFS'), (b'WMS', b'WMS'), (b'WPS', b'WPS'), (b'all', b'All'), (b'other', b'Other')]),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0011_notification_def.py b/geonode/contrib/monitoring/migrations/0011_notification_def.py
deleted file mode 100644
index 1cae58326..000000000
--- a/geonode/contrib/monitoring/migrations/0011_notification_def.py
+++ /dev/null
@@ -1,51 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-from django.conf import settings
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0010_metric_unit'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='NotificationMetricDefinition',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('use_service', models.BooleanField(default=False)),
-                ('use_resource', models.BooleanField(default=False)),
-                ('use_label', models.BooleanField(default=False)),
-                ('use_ows_service', models.BooleanField(default=False)),
-                ('field_option', models.CharField(default=b'min_value', max_length=32, choices=[(b'min_value', b'Value must be above'), (b'max_value', b'Value must be below'), (b'max_timeout', b'Last update must not be older than')])),
-            ],
-        ),
-        migrations.AlterField(
-            model_name='metric',
-            name='unit',
-            field=models.CharField(blank=True, max_length=255, null=True, choices=[(b'B', b'Bytes'), (b'KB', b'Kilobytes'), (b'MB', b'Megabytes'), (b'GB', b'Gigabytes'), (b'B/s', b'Bytes per second'), (b'KB/s', b'Kilobytes per second'), (b'MB/s', b'Megabytes per second'), (b'GB/s', b'Gigabytes per second'), (b's', b'Seconds'), (b'Rate', b'Rate'), (b'%', b'Percentage'), (b'Count', b'Count')]),
-        ),
-        migrations.AlterField(
-            model_name='metricnotificationcheck',
-            name='user',
-            field=models.ForeignKey(related_name='monitoring_checks', to=settings.AUTH_USER_MODEL),
-        ),
-        migrations.AddField(
-            model_name='notificationmetricdefinition',
-            name='metric',
-            field=models.ForeignKey(related_name='+', to='monitoring.Metric'),
-        ),
-        migrations.AddField(
-            model_name='notificationmetricdefinition',
-            name='notification_check',
-            field=models.ForeignKey(related_name='definitions', to='monitoring.NotificationCheck'),
-        ),
-        migrations.AddField(
-            model_name='notificationcheck',
-            name='metrics',
-            field=models.ManyToManyField(related_name='_notificationcheck_metrics_+', through='monitoring.NotificationMetricDefinition', to='monitoring.Metric'),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0012_notifications_service.py b/geonode/contrib/monitoring/migrations/0012_notifications_service.py
deleted file mode 100644
index c7362affe..000000000
--- a/geonode/contrib/monitoring/migrations/0012_notifications_service.py
+++ /dev/null
@@ -1,24 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0011_notification_def'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='metric',
-            name='type',
-            field=models.CharField(default=b'rate', max_length=255, choices=[(b'rate', b'Rate'), (b'count', b'Count'), (b'value', b'Value'), (b'value_numeric', b'Value numeric')]),
-        ),
-        migrations.AlterField(
-            model_name='metricnotificationcheck',
-            name='service',
-            field=models.ForeignKey(related_name='checks', blank=True, to='monitoring.Service', null=True),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0013_notifications_def_description.py b/geonode/contrib/monitoring/migrations/0013_notifications_def_description.py
deleted file mode 100644
index 1aef693d4..000000000
--- a/geonode/contrib/monitoring/migrations/0013_notifications_def_description.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0012_notifications_service'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='notificationmetricdefinition',
-            name='description',
-            field=models.TextField(null=True),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0014_notifications_emails.py b/geonode/contrib/monitoring/migrations/0014_notifications_emails.py
deleted file mode 100644
index a4012e9d6..000000000
--- a/geonode/contrib/monitoring/migrations/0014_notifications_emails.py
+++ /dev/null
@@ -1,29 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-from django.conf import settings
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
-        ('monitoring', '0013_notifications_def_description'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='NotificationReceiver',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('email', models.EmailField(max_length=254, null=True, blank=True)),
-                ('notification_check', models.ForeignKey(related_name='receivers', to='monitoring.NotificationCheck')),
-                ('user', models.ForeignKey(blank=True, to=settings.AUTH_USER_MODEL, null=True)),
-            ],
-        ),
-        migrations.RemoveField(
-            model_name='metricnotificationcheck',
-            name='user',
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0015_notification_grace_period.py b/geonode/contrib/monitoring/migrations/0015_notification_grace_period.py
deleted file mode 100644
index f7713c177..000000000
--- a/geonode/contrib/monitoring/migrations/0015_notification_grace_period.py
+++ /dev/null
@@ -1,30 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import datetime
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0014_notifications_emails'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='notificationcheck',
-            name='grace_period',
-            field=models.DurationField(default=datetime.timedelta(0, 600), help_text=b'Minimum time between subsequent notifications', choices=[(datetime.timedelta(0, 60), b'1 minute'), (datetime.timedelta(0, 300), b'5 minutes'), (datetime.timedelta(0, 600), b'10 minutes'), (datetime.timedelta(0, 1800), b'30 minutes'), (datetime.timedelta(0, 3600), b'1 hour')]),
-        ),
-        migrations.AddField(
-            model_name='notificationcheck',
-            name='last_send',
-            field=models.DateTimeField(help_text=b'Marker of last delivery', null=True, blank=True),
-        ),
-        migrations.AlterField(
-            model_name='notificationmetricdefinition',
-            name='metric',
-            field=models.ForeignKey(related_name='notification_checks', to='monitoring.Metric'),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0016_notification_severity.py b/geonode/contrib/monitoring/migrations/0016_notification_severity.py
deleted file mode 100644
index 5a2ccd92e..000000000
--- a/geonode/contrib/monitoring/migrations/0016_notification_severity.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0015_notification_grace_period'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='notificationcheck',
-            name='severity',
-            field=models.CharField(default=b'error', max_length=32, choices=[(b'warning', b'Warning'), (b'error', b'Error'), (b'fatal', b'Fatal')]),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0017_monitoring_notification_active.py b/geonode/contrib/monitoring/migrations/0017_monitoring_notification_active.py
deleted file mode 100644
index aa4bd3dbb..000000000
--- a/geonode/contrib/monitoring/migrations/0017_monitoring_notification_active.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0016_notification_severity'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='notificationcheck',
-            name='active',
-            field=models.BooleanField(default=True),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0018_notification_check_def.py b/geonode/contrib/monitoring/migrations/0018_notification_check_def.py
deleted file mode 100644
index ddf3ae94f..000000000
--- a/geonode/contrib/monitoring/migrations/0018_notification_check_def.py
+++ /dev/null
@@ -1,29 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0017_monitoring_notification_active'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='notificationmetricdefinition',
-            name='max_value',
-            field=models.DecimalField(default=None, null=True, max_digits=16, decimal_places=4, blank=True),
-        ),
-        migrations.AddField(
-            model_name='notificationmetricdefinition',
-            name='min_value',
-            field=models.DecimalField(default=None, null=True, max_digits=16, decimal_places=4, blank=True),
-        ),
-        migrations.AddField(
-            model_name='notificationmetricdefinition',
-            name='steps',
-            field=models.PositiveIntegerField(default=None, null=True, blank=True),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0019_notification_check_def_link.py b/geonode/contrib/monitoring/migrations/0019_notification_check_def_link.py
deleted file mode 100644
index 6b2e3d908..000000000
--- a/geonode/contrib/monitoring/migrations/0019_notification_check_def_link.py
+++ /dev/null
@@ -1,40 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import jsonfield.fields
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0018_notification_check_def'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='metricnotificationcheck',
-            name='definition',
-            field=models.OneToOneField(related_name='metric_check', null=True, to='monitoring.NotificationMetricDefinition'),
-        ),
-        migrations.AlterField(
-            model_name='notificationcheck',
-            name='active',
-            field=models.BooleanField(default=True, help_text=b'Is it active'),
-        ),
-        migrations.AlterField(
-            model_name='notificationcheck',
-            name='description',
-            field=models.CharField(help_text=b'Description of the alert', max_length=255),
-        ),
-        migrations.AlterField(
-            model_name='notificationcheck',
-            name='severity',
-            field=models.CharField(default=b'error', help_text=b'How severe would be error from this notification', max_length=32, choices=[(b'warning', b'Warning'), (b'error', b'Error'), (b'fatal', b'Fatal')]),
-        ),
-        migrations.AlterField(
-            model_name='notificationcheck',
-            name='user_threshold',
-            field=jsonfield.fields.JSONField(default={}, help_text=b'Expected min/max values for user configuration'),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0020_metric_description.py b/geonode/contrib/monitoring/migrations/0020_metric_description.py
deleted file mode 100644
index 3c33b243d..000000000
--- a/geonode/contrib/monitoring/migrations/0020_metric_description.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0019_notification_check_def_link'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='metric',
-            name='description',
-            field=models.CharField(max_length=255, null=True),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0021_auto_20180301_0932.py b/geonode/contrib/monitoring/migrations/0021_auto_20180301_0932.py
deleted file mode 100644
index 9d9cea323..000000000
--- a/geonode/contrib/monitoring/migrations/0021_auto_20180301_0932.py
+++ /dev/null
@@ -1,20 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.9.13 on 2018-03-01 15:32
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0020_metric_description'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='requestevent',
-            name='resources',
-            field=models.ManyToManyField(blank=True, help_text=b'List of resources affected', related_name='requests', to='monitoring.MonitoredResource'),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/0022_service_last_check_default.py b/geonode/contrib/monitoring/migrations/0022_service_last_check_default.py
deleted file mode 100644
index 4b1736148..000000000
--- a/geonode/contrib/monitoring/migrations/0022_service_last_check_default.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('monitoring', '0021_auto_20180301_0932'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='service',
-            name='last_check',
-            field=models.DateTimeField(auto_now_add=True, null=True),
-        ),
-    ]
diff --git a/geonode/contrib/monitoring/migrations/__init__.py b/geonode/contrib/monitoring/migrations/__init__.py
deleted file mode 100644
index e69de29bb..000000000
diff --git a/geonode/contrib/mp/migrations/__init__.py b/geonode/contrib/mp/migrations/__init__.py
deleted file mode 100644
index e69de29bb..000000000
diff --git a/geonode/documents/migrations/0028_auto_20170801_1228.py b/geonode/documents/migrations/0028_auto_20170801_1228.py
deleted file mode 100644
index b6da5842c..000000000
--- a/geonode/documents/migrations/0028_auto_20170801_1228.py
+++ /dev/null
@@ -1,34 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('documents', '27_drop_resource_columns_from_document_table'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='document',
-            name='abstract_en',
-            field=models.TextField(help_text='brief narrative summary of the content of the resource(s)', max_length=2000, null=True, verbose_name='abstract', blank=True),
-        ),
-        migrations.AlterField(
-            model_name='document',
-            name='data_quality_statement_en',
-            field=models.TextField(help_text="general explanation of the data producer's knowledge about the lineage of a dataset", max_length=2000, null=True, verbose_name='data quality statement', blank=True),
-        ),
-        migrations.AlterField(
-            model_name='document',
-            name='purpose_en',
-            field=models.TextField(help_text='summary of the intentions with which the resource(s) was developed', max_length=500, null=True, verbose_name='purpose', blank=True),
-        ),
-        migrations.AlterField(
-            model_name='document',
-            name='supplemental_information_en',
-            field=models.TextField(default='No information provided', max_length=2000, null=True, verbose_name='supplemental information', help_text='any other descriptive information about the dataset'),
-        ),
-    ]
diff --git a/geonode/documents/migrations/0029_auto_20180301_1947.py b/geonode/documents/migrations/0029_auto_20180301_1947.py
deleted file mode 100644
index dd6b34172..000000000
--- a/geonode/documents/migrations/0029_auto_20180301_1947.py
+++ /dev/null
@@ -1,23 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.10 on 2018-03-02 01:47
-from __future__ import unicode_literals
-
-from django.db import migrations
-import django.db.models.manager
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('documents', '0028_auto_20170801_1228'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='document',
-            managers=[
-                ('objects', django.db.models.manager.Manager()),
-                ('base_objects', django.db.models.manager.Manager()),
-            ],
-        ),
-    ]
diff --git a/geonode/documents/migrations/0030_auto_20180302_0430.py b/geonode/documents/migrations/0030_auto_20180302_0430.py
deleted file mode 100644
index 42685109d..000000000
--- a/geonode/documents/migrations/0030_auto_20180302_0430.py
+++ /dev/null
@@ -1,20 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.9.13 on 2018-03-02 10:30
-from __future__ import unicode_literals
-
-from django.db import migrations
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('documents', '0029_auto_20180301_1947'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='document',
-            managers=[
-            ],
-        ),
-    ]
diff --git a/geonode/documents/migrations/0031_auto_20180409_1238.py b/geonode/documents/migrations/0031_auto_20180409_1238.py
deleted file mode 100644
index d3cb18ff6..000000000
--- a/geonode/documents/migrations/0031_auto_20180409_1238.py
+++ /dev/null
@@ -1,23 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-04-09 12:38
-from __future__ import unicode_literals
-
-from django.db import migrations
-import django.db.models.manager
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('documents', '0030_auto_20180302_0430'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='document',
-            managers=[
-                ('objects', django.db.models.manager.Manager()),
-                ('base_objects', django.db.models.manager.Manager()),
-            ],
-        ),
-    ]
diff --git a/geonode/documents/migrations/0032_auto_20180412_0822.py b/geonode/documents/migrations/0032_auto_20180412_0822.py
deleted file mode 100644
index e4f04204a..000000000
--- a/geonode/documents/migrations/0032_auto_20180412_0822.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('documents', '0031_auto_20180409_1238'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='document',
-            managers=[
-            ],
-        ),
-    ]
diff --git a/geonode/documents/migrations/0033_auto_20180414_2120.py b/geonode/documents/migrations/0033_auto_20180414_2120.py
deleted file mode 100644
index 9aa07a350..000000000
--- a/geonode/documents/migrations/0033_auto_20180414_2120.py
+++ /dev/null
@@ -1,23 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-04-14 21:20
-from __future__ import unicode_literals
-
-from django.db import migrations
-import django.db.models.manager
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('documents', '0032_auto_20180412_0822'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='document',
-            managers=[
-                ('objects', django.db.models.manager.Manager()),
-                ('base_objects', django.db.models.manager.Manager()),
-            ],
-        ),
-    ]
diff --git a/geonode/documents/migrations/24_initial.py b/geonode/documents/migrations/24_initial.py
deleted file mode 100644
index 421ff404a..000000000
--- a/geonode/documents/migrations/24_initial.py
+++ /dev/null
@@ -1,37 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('contenttypes', '0002_remove_content_type_name'),
-        ('base', '__first__'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Document',
-            fields=[
-                ('resourcebase_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='base.ResourceBase')),
-                ('title_en', models.CharField(help_text='name by which the cited resource is known', max_length=255, null=True, verbose_name='title')),
-                ('abstract_en', models.TextField(help_text='brief narrative summary of the content of the resource(s)', null=True, verbose_name='abstract', blank=True)),
-                ('purpose_en', models.TextField(help_text='summary of the intentions with which the resource(s) was developed', null=True, verbose_name='purpose', blank=True)),
-                ('constraints_other_en', models.TextField(help_text='other restrictions and legal prerequisites for accessing and using the resource or metadata', null=True, verbose_name='restrictions other', blank=True)),
-                ('supplemental_information_en', models.TextField(default='No information provided', help_text='any other descriptive information about the dataset', null=True, verbose_name='supplemental information')),
-                ('data_quality_statement_en', models.TextField(help_text="general explanation of the data producer's knowledge about the lineage of a dataset", null=True, verbose_name='data quality statement', blank=True)),
-                ('object_id', models.PositiveIntegerField(null=True, blank=True)),
-                ('doc_file', models.FileField(max_length=255, upload_to=b'documents', null=True, verbose_name='File', blank=True)),
-                ('extension', models.CharField(max_length=128, null=True, blank=True)),
-                ('doc_type', models.CharField(max_length=128, null=True, blank=True)),
-                ('doc_url', models.URLField(help_text='The URL of the document if it is external.', max_length=255, null=True, verbose_name='URL', blank=True)),
-                ('content_type', models.ForeignKey(blank=True, to='contenttypes.ContentType', null=True)),
-            ],
-            options={
-                'abstract': False,
-            },
-            bases=('base.resourcebase',),
-        ),
-    ]
diff --git a/geonode/documents/migrations/25_add_documentresourcelink_table.py b/geonode/documents/migrations/25_add_documentresourcelink_table.py
deleted file mode 100644
index f4d576e14..000000000
--- a/geonode/documents/migrations/25_add_documentresourcelink_table.py
+++ /dev/null
@@ -1,28 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('contenttypes', '0002_remove_content_type_name'),
-        ('documents', '24_initial'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='DocumentResourceLink',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('object_id', models.PositiveIntegerField()),
-                ('content_type', models.ForeignKey(to='contenttypes.ContentType')),
-            ],
-        ),
-        migrations.AddField(
-            model_name='documentresourcelink',
-            name='document',
-            field=models.ForeignKey(related_name='links', to='documents.Document'),
-        ),
-    ]
diff --git a/geonode/documents/migrations/26_move_data_to_documentresourcelink_table.py b/geonode/documents/migrations/26_move_data_to_documentresourcelink_table.py
deleted file mode 100644
index 19c80b978..000000000
--- a/geonode/documents/migrations/26_move_data_to_documentresourcelink_table.py
+++ /dev/null
@@ -1,30 +0,0 @@
-# -*- coding: utf-8 -*-
-from django.db import migrations
-
-
-def forwards(apps, schema_editor):
-    Document = apps.get_model('documents', 'Document')
-    DocumentResourceLink = apps.get_model('documents', 'DocumentResourceLink')
-
-    DocumentResourceLink.objects.bulk_create(
-        DocumentResourceLink(
-            document_id=document.id,
-            content_type_id=document.content_type_id,
-            object_id=document.object_id,
-        )
-        for document in Document.objects.exclude(
-            content_type_id__isnull=True,
-            object_id__isnull=True,
-        )
-    )
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('documents', '25_add_documentresourcelink_table'),
-    ]
-
-    operations = [
-        migrations.RunPython(forwards, migrations.RunPython.noop),
-    ]
diff --git a/geonode/documents/migrations/27_drop_resource_columns_from_document_table.py b/geonode/documents/migrations/27_drop_resource_columns_from_document_table.py
deleted file mode 100644
index 3c5ca0bbc..000000000
--- a/geonode/documents/migrations/27_drop_resource_columns_from_document_table.py
+++ /dev/null
@@ -1,22 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('documents', '26_move_data_to_documentresourcelink_table'),
-    ]
-
-    operations = [
-        migrations.RemoveField(
-            model_name='document',
-            name='content_type',
-        ),
-        migrations.RemoveField(
-            model_name='document',
-            name='object_id',
-        ),
-    ]
diff --git a/geonode/geoserver/migrations/__init__.py b/geonode/geoserver/migrations/__init__.py
deleted file mode 100644
index 3de6751bf..000000000
--- a/geonode/geoserver/migrations/__init__.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-#########################################################################
-#
-# Copyright (C) 2018 OSGeo
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program. If not, see <http://www.gnu.org/licenses/>.
-#
-#########################################################################
diff --git a/geonode/geoserver/signals.py b/geonode/geoserver/signals.py
index 281ed9bb0..6a5f3a57b 100644
--- a/geonode/geoserver/signals.py
+++ b/geonode/geoserver/signals.py
@@ -74,16 +74,24 @@ def geoserver_pre_save(*args, **kwargs):
     # nothing to do here, processing is pushed to post-save
     pass
 
-
 @on_ogc_backend(BACKEND_PACKAGE)
 def geoserver_post_save(instance, sender, **kwargs):
+
+    # If fixtures were added via loaddata, don't run post_save.
+    if kwargs.get('raw', True):
+        return
+
     from geonode.messaging import producer
     # this is attached to various models, (ResourceBase, Document)
     # so we should select what will be handled here
     if isinstance(instance, Layer):
         instance_dict = model_to_dict(instance)
         payload = json_serializer_producer(instance_dict)
-        producer.geoserver_upload_layer(payload)
+
+        try:
+           producer.geoserver_upload_layer(payload)
+        except:
+            return
 
         if instance.storeType != 'remoteStore':
             logger.info("... Creating Thumbnail for Layer [%s]" % (instance.alternate))
@@ -105,6 +113,10 @@ def geoserver_post_save_local(instance, *args, **kwargs):
         * Metadata Links,
         * Point of Contact name and url
     """
+
+    if kwargs.get('raw', True):
+        return
+
     # Don't run this signal if is a Layer from a remote service
     if getattr(instance, "remote_service", None) is not None:
         return
@@ -158,7 +170,7 @@ def geoserver_post_save_local(instance, *args, **kwargs):
     else:
         msg = "There isn't a geoserver resource for this layer: %s" % instance.name
         logger.exception(msg)
-        raise Exception(msg)
+        return
 
     # Get metadata links
     metadata_links = []
@@ -369,6 +381,10 @@ def geoserver_pre_save_maplayer(instance, sender, **kwargs):
 
 
 def geoserver_post_save_map(instance, sender, **kwargs):
+    # If fixtures were added via loaddata, don't run post_save.
+    if kwargs.get('raw', True):
+        return
+
     instance.set_missing_info()
     logger.info("... Creating Thumbnail for Map [%s]" % (instance.title))
     create_gs_thumbnail(instance, overwrite=False, check_bbox=True)
diff --git a/geonode/groups/migrations/0027_auto_20180105_1631.py b/geonode/groups/migrations/0027_auto_20180105_1631.py
deleted file mode 100644
index 43baaa03d..000000000
--- a/geonode/groups/migrations/0027_auto_20180105_1631.py
+++ /dev/null
@@ -1,33 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('groups', '26_to_27'),
-    ]
-
-    operations = [
-        migrations.AlterUniqueTogether(
-            name='groupinvitation',
-            unique_together=set([]),
-        ),
-        migrations.RemoveField(
-            model_name='groupinvitation',
-            name='from_user',
-        ),
-        migrations.RemoveField(
-            model_name='groupinvitation',
-            name='group',
-        ),
-        migrations.RemoveField(
-            model_name='groupinvitation',
-            name='user',
-        ),
-        migrations.DeleteModel(
-            name='GroupInvitation',
-        ),
-    ]
diff --git a/geonode/groups/migrations/0028_auto_20180606_1543.py b/geonode/groups/migrations/0028_auto_20180606_1543.py
deleted file mode 100644
index 8432ceca1..000000000
--- a/geonode/groups/migrations/0028_auto_20180606_1543.py
+++ /dev/null
@@ -1,35 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-06-06 15:43
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('groups', '0027_auto_20180105_1631'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='groupcategory',
-            name='description',
-            field=models.TextField(blank=True, default=None, null=True, verbose_name='Description'),
-        ),
-        migrations.AlterField(
-            model_name='groupcategory',
-            name='name',
-            field=models.CharField(max_length=255, unique=True, verbose_name='Name'),
-        ),
-        migrations.AlterField(
-            model_name='groupcategory',
-            name='name_en',
-            field=models.CharField(max_length=255, null=True, unique=True, verbose_name='Name'),
-        ),
-        migrations.AlterField(
-            model_name='groupprofile',
-            name='categories',
-            field=models.ManyToManyField(blank=True, related_name='groups', to='groups.GroupCategory', verbose_name='Categories'),
-        ),
-    ]
diff --git a/geonode/groups/migrations/24_initial.py b/geonode/groups/migrations/24_initial.py
deleted file mode 100644
index b1707f353..000000000
--- a/geonode/groups/migrations/24_initial.py
+++ /dev/null
@@ -1,79 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import datetime
-from django.conf import settings
-import taggit.managers
-from django.utils.timezone import now
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('taggit', '0002_auto_20150616_2121'),
-        ('auth', '0006_require_contenttypes_0002'),
-        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='GroupInvitation',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('token', models.CharField(max_length=40)),
-                ('email', models.EmailField(max_length=254)),
-                ('role', models.CharField(max_length=10, choices=[(b'manager', 'Manager'), (b'member', 'Member')])),
-                ('state', models.CharField(default=b'sent', max_length=10, choices=[(b'sent', 'Sent'), (b'accepted', 'Accepted'), (b'declined', 'Declined')])),
-                ('created', models.DateTimeField(default=now)),
-                ('from_user', models.ForeignKey(related_name='pg_invitations_sent', to=settings.AUTH_USER_MODEL)),
-            ],
-        ),
-        migrations.CreateModel(
-            name='GroupMember',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('role', models.CharField(max_length=10, choices=[(b'manager', 'Manager'), (b'member', 'Member')])),
-                ('joined', models.DateTimeField(default=now)),
-            ],
-        ),
-        migrations.CreateModel(
-            name='GroupProfile',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('title', models.CharField(max_length=50, verbose_name='Title')),
-                ('slug', models.SlugField(unique=True)),
-                ('logo', models.ImageField(upload_to=b'people_group', verbose_name='Logo', blank=True)),
-                ('description', models.TextField(verbose_name='Description')),
-                ('email', models.EmailField(help_text='Email used to contact one or all group members, such as a mailing list, shared email, or exchange group.', max_length=254, null=True, verbose_name='Email', blank=True)),
-                ('access', models.CharField(default=b"public'", help_text='Public: Any registered user can view and join a public group.<br>Public (invite-only):Any registered user can view the group.  Only invited users can join.<br>Private: Registered users cannot see any details about the group, including membership.  Only invited users can join.', max_length=15, verbose_name='Access', choices=[(b'public', 'Public'), (b'public-invite', 'Public (invite-only)'), (b'private', 'Private')])),
-                ('last_modified', models.DateTimeField(auto_now=True)),
-                ('group', models.OneToOneField(to='auth.Group')),
-                ('keywords', taggit.managers.TaggableManager(to='taggit.Tag', through='taggit.TaggedItem', blank=True, help_text='A space or comma-separated list of keywords', verbose_name='Keywords')),
-            ],
-        ),
-        migrations.AddField(
-            model_name='groupmember',
-            name='group',
-            field=models.ForeignKey(to='groups.GroupProfile'),
-        ),
-        migrations.AddField(
-            model_name='groupmember',
-            name='user',
-            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
-        ),
-        migrations.AddField(
-            model_name='groupinvitation',
-            name='group',
-            field=models.ForeignKey(related_name='invitations', to='groups.GroupProfile'),
-        ),
-        migrations.AddField(
-            model_name='groupinvitation',
-            name='user',
-            field=models.ForeignKey(related_name='pg_invitations_received', to=settings.AUTH_USER_MODEL, null=True),
-        ),
-        migrations.AlterUniqueTogether(
-            name='groupinvitation',
-            unique_together=set([('group', 'email')]),
-        ),
-    ]
diff --git a/geonode/groups/migrations/26_to_27.py b/geonode/groups/migrations/26_to_27.py
deleted file mode 100644
index 98bdfcaa0..000000000
--- a/geonode/groups/migrations/26_to_27.py
+++ /dev/null
@@ -1,50 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-from django.utils import timezone
-from datetime import datetime
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('groups', '24_initial'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='GroupCategory',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('slug', models.SlugField(unique=True, max_length=255)),
-                ('name', models.CharField(unique=True, max_length=255)),
-                ('name_en', models.CharField(max_length=255, unique=True, null=True)),
-                ('description', models.TextField(default=None, null=True, blank=True)),
-            ],
-            options={
-                'verbose_name_plural': 'Group Categories',
-            },
-        ),
-        migrations.AddField(
-            model_name='groupprofile',
-            name='description_en',
-            field=models.TextField(null=True, verbose_name='Description'),
-        ),
-        migrations.AddField(
-            model_name='groupprofile',
-            name='title_en',
-            field=models.CharField(max_length=50, null=True, verbose_name='Title'),
-        ),
-        migrations.AddField(
-            model_name='groupprofile',
-            name='categories',
-            field=models.ManyToManyField(related_name='groups', to='groups.GroupCategory', blank=True),
-        ),
-        migrations.AddField(
-            model_name='groupprofile',
-            name='created',
-            field=models.DateTimeField(default=datetime.now(timezone.get_current_timezone()), auto_now_add=True),
-            preserve_default=False,
-        ),
-    ]
diff --git a/geonode/invitations/migrations/__init__.py b/geonode/invitations/migrations/__init__.py
deleted file mode 100644
index 47a464af3..000000000
--- a/geonode/invitations/migrations/__init__.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-#########################################################################
-#
-# Copyright (C) 2018 OSGeo
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program. If not, see <http://www.gnu.org/licenses/>.
-#
-#########################################################################
diff --git a/geonode/layers/migrations/0027_auto_20170801_1228.py b/geonode/layers/migrations/0027_auto_20170801_1228.py
deleted file mode 100644
index 2e19c62b7..000000000
--- a/geonode/layers/migrations/0027_auto_20170801_1228.py
+++ /dev/null
@@ -1,34 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('layers', '26_to_27'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='layer',
-            name='abstract_en',
-            field=models.TextField(help_text='brief narrative summary of the content of the resource(s)', max_length=2000, null=True, verbose_name='abstract', blank=True),
-        ),
-        migrations.AlterField(
-            model_name='layer',
-            name='data_quality_statement_en',
-            field=models.TextField(help_text="general explanation of the data producer's knowledge about the lineage of a dataset", max_length=2000, null=True, verbose_name='data quality statement', blank=True),
-        ),
-        migrations.AlterField(
-            model_name='layer',
-            name='purpose_en',
-            field=models.TextField(help_text='summary of the intentions with which the resource(s) was developed', max_length=500, null=True, verbose_name='purpose', blank=True),
-        ),
-        migrations.AlterField(
-            model_name='layer',
-            name='supplemental_information_en',
-            field=models.TextField(default='No information provided', max_length=2000, null=True, verbose_name='supplemental information', help_text='any other descriptive information about the dataset'),
-        ),
-    ]
diff --git a/geonode/layers/migrations/0028_auto_20171218_0249.py b/geonode/layers/migrations/0028_auto_20171218_0249.py
deleted file mode 100644
index 721e1795d..000000000
--- a/geonode/layers/migrations/0028_auto_20171218_0249.py
+++ /dev/null
@@ -1,20 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import django.db.models.deletion
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('layers', '0027_auto_20170801_1228'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='layer',
-            name='default_style',
-            field=models.ForeignKey(related_name='layer_default_style', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='layers.Style', null=True),
-        ),
-    ]
diff --git a/geonode/layers/migrations/0029_layer_service.py b/geonode/layers/migrations/0029_layer_service.py
deleted file mode 100644
index 99859623e..000000000
--- a/geonode/layers/migrations/0029_layer_service.py
+++ /dev/null
@@ -1,20 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0030_auto_20171212_0518'),
-        ('layers', '0028_auto_20171218_0249'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='layer',
-            name='service',
-            field=models.ForeignKey(blank=True, to='services.Service', null=True),
-        ),
-    ]
diff --git a/geonode/layers/migrations/0030_auto_20180228_0812.py b/geonode/layers/migrations/0030_auto_20180228_0812.py
deleted file mode 100644
index 358d09e2e..000000000
--- a/geonode/layers/migrations/0030_auto_20180228_0812.py
+++ /dev/null
@@ -1,26 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.9.13 on 2018-02-28 14:12
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import django.db.models.deletion
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0030_auto_20171212_0518'),
-        ('layers', '0029_layer_service'),
-    ]
-
-    operations = [
-        migrations.RemoveField(
-            model_name='layer',
-            name='service',
-        ),
-        migrations.AddField(
-            model_name='layer',
-            name='remote_service',
-            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.Service'),
-        ),
-    ]
diff --git a/geonode/layers/migrations/0031_uploadsession_resource.py b/geonode/layers/migrations/0031_uploadsession_resource.py
deleted file mode 100644
index e6ea8df97..000000000
--- a/geonode/layers/migrations/0031_uploadsession_resource.py
+++ /dev/null
@@ -1,22 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-04-24 16:18
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import django.db.models.deletion
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('base', '0033_auto_20180330_0951'),
-        ('layers', '0030_auto_20180228_0812'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='uploadsession',
-            name='resource',
-            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.ResourceBase'),
-        ),
-    ]
diff --git a/geonode/layers/migrations/0032_auto_20180424_1638.py b/geonode/layers/migrations/0032_auto_20180424_1638.py
deleted file mode 100644
index 9b3901072..000000000
--- a/geonode/layers/migrations/0032_auto_20180424_1638.py
+++ /dev/null
@@ -1,21 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-04-24 16:38
-from __future__ import unicode_literals
-
-import django.core.files.storage
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('layers', '0031_uploadsession_resource'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='layerfile',
-            name='file',
-            field=models.FileField(max_length=255, storage=django.core.files.storage.FileSystemStorage(base_url=b'/uploaded/'), upload_to=b'layers/%Y/%m/%d'),
-        ),
-    ]
diff --git a/geonode/layers/migrations/0033_auto_20180606_1543.py b/geonode/layers/migrations/0033_auto_20180606_1543.py
deleted file mode 100644
index e2d44e273..000000000
--- a/geonode/layers/migrations/0033_auto_20180606_1543.py
+++ /dev/null
@@ -1,65 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-06-06 15:43
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('layers', '0032_auto_20180424_1638'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='layer',
-            name='elevation_regex',
-            field=models.CharField(blank=True, max_length=128, null=True, verbose_name='Elevation regex'),
-        ),
-        migrations.AlterField(
-            model_name='layer',
-            name='has_elevation',
-            field=models.BooleanField(default=False, verbose_name='Has elevation?'),
-        ),
-        migrations.AlterField(
-            model_name='layer',
-            name='has_time',
-            field=models.BooleanField(default=False, verbose_name='Has time?'),
-        ),
-        migrations.AlterField(
-            model_name='layer',
-            name='is_mosaic',
-            field=models.BooleanField(default=False, verbose_name='Is mosaic?'),
-        ),
-        migrations.AlterField(
-            model_name='layer',
-            name='name',
-            field=models.CharField(max_length=128, verbose_name='Name'),
-        ),
-        migrations.AlterField(
-            model_name='layer',
-            name='store',
-            field=models.CharField(max_length=128, verbose_name='Store'),
-        ),
-        migrations.AlterField(
-            model_name='layer',
-            name='storeType',
-            field=models.CharField(max_length=128, verbose_name='Storetype'),
-        ),
-        migrations.AlterField(
-            model_name='layer',
-            name='time_regex',
-            field=models.CharField(blank=True, choices=[(b'[0-9]{8}', 'YYYYMMDD'), (b'[0-9]{8}T[0-9]{6}', "YYYYMMDD'T'hhmmss"), (b'[0-9]{8}T[0-9]{6}Z', "YYYYMMDD'T'hhmmss'Z'")], max_length=128, null=True, verbose_name='Time regex'),
-        ),
-        migrations.AlterField(
-            model_name='layer',
-            name='typename',
-            field=models.CharField(blank=True, max_length=128, null=True, verbose_name='Typename'),
-        ),
-        migrations.AlterField(
-            model_name='layer',
-            name='workspace',
-            field=models.CharField(max_length=128, verbose_name='Workspace'),
-        ),
-    ]
diff --git a/geonode/layers/migrations/24_initial.py b/geonode/layers/migrations/24_initial.py
deleted file mode 100644
index cb56cacd8..000000000
--- a/geonode/layers/migrations/24_initial.py
+++ /dev/null
@@ -1,121 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import datetime
-from django.conf import settings
-from django.utils.timezone import now
-import django.core.files.storage
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
-        ('base', '__first__'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Attribute',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('attribute', models.CharField(help_text='name of attribute as stored in shapefile/spatial database', max_length=255, null=True, verbose_name='attribute name')),
-                ('description', models.CharField(help_text='description of attribute to be used in metadata', max_length=255, null=True, verbose_name='attribute description', blank=True)),
-                ('attribute_label', models.CharField(help_text='title of attribute as displayed in GeoNode', max_length=255, null=True, verbose_name='attribute label', blank=True)),
-                ('attribute_type', models.CharField(default=b'xsd:string', help_text='the data type of the attribute (integer, string, geometry, etc)', max_length=50, verbose_name='attribute type')),
-                ('visible', models.BooleanField(default=True, help_text='specifies if the attribute should be displayed in identify results', verbose_name='visible?')),
-                ('display_order', models.IntegerField(default=1, help_text='specifies the order in which attribute should be displayed in identify results', verbose_name='display order')),
-                ('count', models.IntegerField(default=1, help_text='count value for this field', verbose_name='count')),
-                ('min', models.CharField(default=b'NA', max_length=255, null=True, verbose_name='min', help_text='minimum value for this field')),
-                ('max', models.CharField(default=b'NA', max_length=255, null=True, verbose_name='max', help_text='maximum value for this field')),
-                ('average', models.CharField(default=b'NA', max_length=255, null=True, verbose_name='average', help_text='average value for this field')),
-                ('median', models.CharField(default=b'NA', max_length=255, null=True, verbose_name='median', help_text='median value for this field')),
-                ('stddev', models.CharField(default=b'NA', max_length=255, null=True, verbose_name='standard deviation', help_text='standard deviation for this field')),
-                ('sum', models.CharField(default=b'NA', max_length=255, null=True, verbose_name='sum', help_text='sum value for this field')),
-                ('unique_values', models.TextField(default=b'NA', null=True, verbose_name='unique values for this field', blank=True)),
-                ('last_stats_updated', models.DateTimeField(default=now, help_text='date when attribute statistics were last updated', verbose_name='last modified')),
-            ],
-        ),
-        migrations.CreateModel(
-            name='Layer',
-            fields=[
-                ('resourcebase_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='base.ResourceBase')),
-                ('title_en', models.CharField(help_text='name by which the cited resource is known', max_length=255, null=True, verbose_name='title')),
-                ('abstract_en', models.TextField(help_text='brief narrative summary of the content of the resource(s)', null=True, verbose_name='abstract', blank=True)),
-                ('purpose_en', models.TextField(help_text='summary of the intentions with which the resource(s) was developed', null=True, verbose_name='purpose', blank=True)),
-                ('constraints_other_en', models.TextField(help_text='other restrictions and legal prerequisites for accessing and using the resource or metadata', null=True, verbose_name='restrictions other', blank=True)),
-                ('supplemental_information_en', models.TextField(default='No information provided', help_text='any other descriptive information about the dataset', null=True, verbose_name='supplemental information')),
-                ('data_quality_statement_en', models.TextField(help_text="general explanation of the data producer's knowledge about the lineage of a dataset", null=True, verbose_name='data quality statement', blank=True)),
-                ('workspace', models.CharField(max_length=128)),
-                ('store', models.CharField(max_length=128)),
-                ('storeType', models.CharField(max_length=128)),
-                ('name', models.CharField(max_length=128)),
-                ('typename', models.CharField(max_length=128, null=True, blank=True)),
-                ('charset', models.CharField(default=b'UTF-8', max_length=255)),
-            ],
-            options={
-                'permissions': (('change_layer_data', 'Can edit layer data'), ('change_layer_style', 'Can change layer style')),
-            },
-            bases=('base.resourcebase',),
-        ),
-        migrations.CreateModel(
-            name='LayerFile',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('name', models.CharField(max_length=255)),
-                ('base', models.BooleanField(default=False)),
-                ('file', models.FileField(storage=django.core.files.storage.FileSystemStorage(base_url=b'/uploaded/'), max_length=255, upload_to=b'layers')),
-            ],
-        ),
-        migrations.CreateModel(
-            name='Style',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('name', models.CharField(unique=True, max_length=255, verbose_name='style name')),
-                ('sld_title', models.CharField(max_length=255, null=True, blank=True)),
-                ('sld_body', models.TextField(null=True, verbose_name='sld text', blank=True)),
-                ('sld_version', models.CharField(max_length=12, null=True, verbose_name='sld version', blank=True)),
-                ('sld_url', models.CharField(max_length=1000, null=True, verbose_name='sld url')),
-                ('workspace', models.CharField(max_length=255, null=True, blank=True)),
-            ],
-        ),
-        migrations.CreateModel(
-            name='UploadSession',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('date', models.DateTimeField(auto_now=True)),
-                ('processed', models.BooleanField(default=False)),
-                ('error', models.TextField(null=True, blank=True)),
-                ('traceback', models.TextField(null=True, blank=True)),
-                ('context', models.TextField(null=True, blank=True)),
-                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
-            ],
-        ),
-
-        migrations.AddField(
-            model_name='layerfile',
-            name='upload_session',
-            field=models.ForeignKey(to='layers.UploadSession'),
-        ),
-        migrations.AddField(
-            model_name='layer',
-            name='default_style',
-            field=models.ForeignKey(related_name='layer_default_style', blank=True, to='layers.Style', null=True),
-        ),
-        migrations.AddField(
-            model_name='layer',
-            name='styles',
-            field=models.ManyToManyField(related_name='layer_styles', to='layers.Style'),
-        ),
-        migrations.AddField(
-            model_name='layer',
-            name='upload_session',
-            field=models.ForeignKey(blank=True, to='layers.UploadSession', null=True),
-        ),
-        migrations.AddField(
-            model_name='attribute',
-            name='layer',
-            field=models.ForeignKey(related_name='attribute_set', to='layers.Layer'),
-        ),
-    ]
diff --git a/geonode/layers/migrations/24_to_26.py b/geonode/layers/migrations/24_to_26.py
deleted file mode 100644
index bae879924..000000000
--- a/geonode/layers/migrations/24_to_26.py
+++ /dev/null
@@ -1,39 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('layers', '24_initial'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='layer',
-            name='elevation_regex',
-            field=models.CharField(max_length=128, null=True, blank=True),
-        ),
-        migrations.AddField(
-            model_name='layer',
-            name='has_elevation',
-            field=models.BooleanField(default=False),
-        ),
-        migrations.AddField(
-            model_name='layer',
-            name='has_time',
-            field=models.BooleanField(default=False),
-        ),
-        migrations.AddField(
-            model_name='layer',
-            name='is_mosaic',
-            field=models.BooleanField(default=False),
-        ),
-        migrations.AddField(
-            model_name='layer',
-            name='time_regex',
-            field=models.CharField(blank=True, max_length=128, null=True, choices=[(b'[0-9]{8}', 'YYYYMMDD'), (b'[0-9]{8}T[0-9]{6}', "YYYYMMDD'T'hhmmss"), (b'[0-9]{8}T[0-9]{6}Z', "YYYYMMDD'T'hhmmss'Z'")]),
-        ),
-    ]
diff --git a/geonode/layers/migrations/26_to_27.py b/geonode/layers/migrations/26_to_27.py
deleted file mode 100644
index af50be165..000000000
--- a/geonode/layers/migrations/26_to_27.py
+++ /dev/null
@@ -1,22 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-from django.db.models import F
-
-def copy_typename(apps, schema_editor):
-    Layer = apps.get_model('layers', 'layer')
-    ResourceBase = apps.get_model('base', 'resourcebase')
-    for row in Layer.objects.all():
-        row.alternate = row.typename
-        row.save(update_fields=['alternate'])
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('layers', '24_to_26'),
-    ]
-
-    operations = [
-        migrations.RunPython(copy_typename),
-    ]
diff --git a/geonode/maps/migrations/0025_auto_20170801_1228.py b/geonode/maps/migrations/0025_auto_20170801_1228.py
deleted file mode 100644
index 4227ec253..000000000
--- a/geonode/maps/migrations/0025_auto_20170801_1228.py
+++ /dev/null
@@ -1,34 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('maps', '24_initial'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='map',
-            name='abstract_en',
-            field=models.TextField(help_text='brief narrative summary of the content of the resource(s)', max_length=2000, null=True, verbose_name='abstract', blank=True),
-        ),
-        migrations.AlterField(
-            model_name='map',
-            name='data_quality_statement_en',
-            field=models.TextField(help_text="general explanation of the data producer's knowledge about the lineage of a dataset", max_length=2000, null=True, verbose_name='data quality statement', blank=True),
-        ),
-        migrations.AlterField(
-            model_name='map',
-            name='purpose_en',
-            field=models.TextField(help_text='summary of the intentions with which the resource(s) was developed', max_length=500, null=True, verbose_name='purpose', blank=True),
-        ),
-        migrations.AlterField(
-            model_name='map',
-            name='supplemental_information_en',
-            field=models.TextField(default='No information provided', max_length=2000, null=True, verbose_name='supplemental information', help_text='any other descriptive information about the dataset'),
-        ),
-    ]
diff --git a/geonode/maps/migrations/0026_auto_20180301_1947.py b/geonode/maps/migrations/0026_auto_20180301_1947.py
deleted file mode 100644
index 55e616c5d..000000000
--- a/geonode/maps/migrations/0026_auto_20180301_1947.py
+++ /dev/null
@@ -1,23 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.10 on 2018-03-02 01:47
-from __future__ import unicode_literals
-
-from django.db import migrations
-import django.db.models.manager
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('maps', '0025_auto_20170801_1228'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='map',
-            managers=[
-                ('objects', django.db.models.manager.Manager()),
-                ('base_objects', django.db.models.manager.Manager()),
-            ],
-        ),
-    ]
diff --git a/geonode/maps/migrations/0027_auto_20180302_0430.py b/geonode/maps/migrations/0027_auto_20180302_0430.py
deleted file mode 100644
index 7e483e317..000000000
--- a/geonode/maps/migrations/0027_auto_20180302_0430.py
+++ /dev/null
@@ -1,20 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.9.13 on 2018-03-02 10:30
-from __future__ import unicode_literals
-
-from django.db import migrations
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('maps', '0026_auto_20180301_1947'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='map',
-            managers=[
-            ],
-        ),
-    ]
diff --git a/geonode/maps/migrations/0028_auto_20180409_1238.py b/geonode/maps/migrations/0028_auto_20180409_1238.py
deleted file mode 100644
index ea7aca169..000000000
--- a/geonode/maps/migrations/0028_auto_20180409_1238.py
+++ /dev/null
@@ -1,23 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-04-09 12:38
-from __future__ import unicode_literals
-
-from django.db import migrations
-import django.db.models.manager
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('maps', '0027_auto_20180302_0430'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='map',
-            managers=[
-                ('objects', django.db.models.manager.Manager()),
-                ('base_objects', django.db.models.manager.Manager()),
-            ],
-        ),
-    ]
diff --git a/geonode/maps/migrations/0029_auto_20180412_0822.py b/geonode/maps/migrations/0029_auto_20180412_0822.py
deleted file mode 100644
index fef261eb8..000000000
--- a/geonode/maps/migrations/0029_auto_20180412_0822.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('maps', '0028_auto_20180409_1238'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='map',
-            managers=[
-            ],
-        ),
-    ]
diff --git a/geonode/maps/migrations/0030_auto_20180414_2120.py b/geonode/maps/migrations/0030_auto_20180414_2120.py
deleted file mode 100644
index dddbc9563..000000000
--- a/geonode/maps/migrations/0030_auto_20180414_2120.py
+++ /dev/null
@@ -1,23 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-04-14 21:20
-from __future__ import unicode_literals
-
-from django.db import migrations
-import django.db.models.manager
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('maps', '0029_auto_20180412_0822'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='map',
-            managers=[
-                ('objects', django.db.models.manager.Manager()),
-                ('base_objects', django.db.models.manager.Manager()),
-            ],
-        ),
-    ]
diff --git a/geonode/maps/migrations/24_initial.py b/geonode/maps/migrations/24_initial.py
deleted file mode 100644
index 459d41409..000000000
--- a/geonode/maps/migrations/24_initial.py
+++ /dev/null
@@ -1,74 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-from django.conf import settings
-import geonode.utils
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
-        ('base', '__first__'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Map',
-            fields=[
-                ('resourcebase_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='base.ResourceBase')),
-                ('title_en', models.CharField(help_text='name by which the cited resource is known', max_length=255, null=True, verbose_name='title')),
-                ('abstract_en', models.TextField(help_text='brief narrative summary of the content of the resource(s)', null=True, verbose_name='abstract', blank=True)),
-                ('purpose_en', models.TextField(help_text='summary of the intentions with which the resource(s) was developed', null=True, verbose_name='purpose', blank=True)),
-                ('constraints_other_en', models.TextField(help_text='other restrictions and legal prerequisites for accessing and using the resource or metadata', null=True, verbose_name='restrictions other', blank=True)),
-                ('supplemental_information_en', models.TextField(default='No information provided', help_text='any other descriptive information about the dataset', null=True, verbose_name='supplemental information')),
-                ('data_quality_statement_en', models.TextField(help_text="general explanation of the data producer's knowledge about the lineage of a dataset", null=True, verbose_name='data quality statement', blank=True)),
-                ('zoom', models.IntegerField(verbose_name='zoom')),
-                ('projection', models.CharField(max_length=32, verbose_name='projection')),
-                ('center_x', models.FloatField(verbose_name='center X')),
-                ('center_y', models.FloatField(verbose_name='center Y')),
-                ('last_modified', models.DateTimeField(auto_now_add=True)),
-                ('urlsuffix', models.CharField(max_length=255, verbose_name='Site URL', blank=True)),
-                ('featuredurl', models.CharField(max_length=255, verbose_name='Featured Map URL', blank=True)),
-            ],
-            options={
-                'abstract': False,
-            },
-            bases=('base.resourcebase', geonode.utils.GXPMapBase),
-        ),
-        migrations.CreateModel(
-            name='MapLayer',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('stack_order', models.IntegerField(verbose_name='stack order')),
-                ('format', models.CharField(max_length=200, null=True, verbose_name='format', blank=True)),
-                ('name', models.CharField(max_length=200, null=True, verbose_name='name')),
-                ('opacity', models.FloatField(default=1.0, verbose_name='opacity')),
-                ('styles', models.CharField(max_length=200, null=True, verbose_name='styles', blank=True)),
-                ('transparent', models.BooleanField(default=False, verbose_name='transparent')),
-                ('fixed', models.BooleanField(default=False, verbose_name='fixed')),
-                ('group', models.CharField(max_length=200, null=True, verbose_name='group', blank=True)),
-                ('visibility', models.BooleanField(default=True, verbose_name='visibility')),
-                ('ows_url', models.URLField(null=True, verbose_name='ows URL', blank=True)),
-                ('layer_params', models.TextField(verbose_name='layer params')),
-                ('source_params', models.TextField(verbose_name='source params')),
-                ('local', models.BooleanField(default=False)),
-                ('map', models.ForeignKey(related_name='layer_set', to='maps.Map')),
-            ],
-            options={
-                'ordering': ['stack_order'],
-            },
-            bases=(models.Model, geonode.utils.GXPLayerBase),
-        ),
-        migrations.CreateModel(
-            name='MapSnapshot',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('config', models.TextField(verbose_name='JSON Configuration')),
-                ('created_dttm', models.DateTimeField(auto_now_add=True)),
-                ('map', models.ForeignKey(related_name='snapshot_set', to='maps.Map')),
-                ('user', models.ForeignKey(blank=True, to=settings.AUTH_USER_MODEL, null=True)),
-            ],
-        ),
-    ]
diff --git a/geonode/people/migrations/0025_auto_20170924_0932.py b/geonode/people/migrations/0025_auto_20170924_0932.py
deleted file mode 100644
index d4dc0d427..000000000
--- a/geonode/people/migrations/0025_auto_20170924_0932.py
+++ /dev/null
@@ -1,21 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.9.13 on 2017-09-24 09:32
-from __future__ import unicode_literals
-
-import django.core.validators
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('people', '24_initial'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='profile',
-            name='username',
-            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username'),
-        ),
-    ]
diff --git a/geonode/people/migrations/0026_auto_20171120_0730.py b/geonode/people/migrations/0026_auto_20171120_0730.py
deleted file mode 100644
index 941a15b11..000000000
--- a/geonode/people/migrations/0026_auto_20171120_0730.py
+++ /dev/null
@@ -1,24 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('people', '0025_auto_20170924_0932'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='profile',
-            name='language',
-            field=models.CharField(default=b'en', max_length=10, verbose_name='language', choices=[('af', 'Afrikaans'), ('ar', '\u0627\u0644\u0639\u0631\u0628\u064a\u0651\u0629'), ('ast', 'asturian'), ('az', 'Az\u0259rbaycanca'), ('bg', '\u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438'), ('be', '\u0431\u0435\u043b\u0430\u0440\u0443\u0441\u043a\u0430\u044f'), ('bn', '\u09ac\u09be\u0982\u09b2\u09be'), ('br', 'brezhoneg'), ('bs', 'bosanski'), ('ca', 'catal\xe0'), ('cs', '\u010desky'), ('cy', 'Cymraeg'), ('da', 'dansk'), ('de', 'Deutsch'), ('el', '\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'espa\xf1ol'), ('es-ar', 'espa\xf1ol de Argentina'), ('es-mx', 'espa\xf1ol de Mexico'), ('es-ni', 'espa\xf1ol de Nicaragua'), ('es-ve', 'espa\xf1ol de Venezuela'), ('et', 'eesti'), ('eu', 'Basque'), ('fa', '\u0641\u0627\u0631\u0633\u06cc'), ('fi', 'suomi'), ('fr', 'fran\xe7ais'), ('fy', 'frysk'), ('ga', 'Gaeilge'), ('gl', 'galego'), ('he', '\u05e2\u05d1\u05e8\u05d9\u05ea'), ('hi', 'Hindi'), ('hr', 'Hrvatski'), ('hu', 'Magyar'), ('ia', 'Interlingua'), ('id', 'Bahasa Indonesia'), ('io', 'ido'), ('is', '\xcdslenska'), ('it', 'italiano'), ('ja', '\u65e5\u672c\u8a9e'), ('ka', '\u10e5\u10d0\u10e0\u10d7\u10e3\u10da\u10d8'), ('kk', '\u049a\u0430\u0437\u0430\u049b'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', '\ud55c\uad6d\uc5b4'), ('lb', 'L\xebtzebuergesch'), ('lt', 'Lietuvi\u0161kai'), ('lv', 'latvie\u0161'), ('mk', '\u041c\u0430\u043a\u0435\u0434\u043e\u043d\u0441\u043a\u0438'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', '\u092e\u0930\u093e\u0920\u0940'), ('my', '\u1019\u103c\u1014\u103a\u1019\u102c\u1018\u102c\u101e\u102c'), ('nb', 'norsk (bokm\xe5l)'), ('ne', '\u0928\u0947\u092a\u093e\u0932\u0940'), ('nl', 'Nederlands'), ('nn', 'norsk (nynorsk)'), ('os', '\u0418\u0440\u043e\u043d'), ('pa', 'Punjabi'), ('pl', 'polski'), ('pt', 'Portugu\xeas'), ('pt-br', 'Portugu\xeas Brasileiro'), ('ro', 'Rom\xe2n\u0103'), ('ru', '\u0420\u0443\u0441\u0441\u043a\u0438\u0439'), ('sk', 'slovensk\xfd'), ('sl', 'Sloven\u0161\u010dina'), ('sq', 'shqip'), ('sr', '\u0441\u0440\u043f\u0441\u043a\u0438'), ('sr-latn', 'srpski (latinica)'), ('sv', 'svenska'), ('sw', 'Kiswahili'), ('ta', '\u0ba4\u0bae\u0bbf\u0bb4\u0bcd'), ('te', '\u0c24\u0c46\u0c32\u0c41\u0c17\u0c41'), ('th', '\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22'), ('tr', 'T\xfcrk\xe7e'), ('tt', '\u0422\u0430\u0442\u0430\u0440\u0447\u0430'), ('udm', '\u0423\u0434\u043c\u0443\u0440\u0442'), ('uk', '\u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430'), ('ur', '\u0627\u0631\u062f\u0648'), ('vi', 'Ti\xea\u0301ng Vi\xea\u0323t'), ('zh-cn', '\u7b80\u4f53\u4e2d\u6587'), ('zh-hans', '\u7b80\u4f53\u4e2d\u6587'), ('zh-hant', '\u7e41\u9ad4\u4e2d\u6587'), ('zh-tw', '\u7e41\u9ad4\u4e2d\u6587')]),
-        ),
-        migrations.AddField(
-            model_name='profile',
-            name='timezone',
-            field=models.CharField(default=b'', max_length=100, blank=True, choices=[('Africa/Abidjan', 'Africa/Abidjan'), ('Africa/Accra', 'Africa/Accra'), ('Africa/Addis_Ababa', 'Africa/Addis_Ababa'), ('Africa/Algiers', 'Africa/Algiers'), ('Africa/Asmara', 'Africa/Asmara'), ('Africa/Asmera', 'Africa/Asmera'), ('Africa/Bamako', 'Africa/Bamako'), ('Africa/Bangui', 'Africa/Bangui'), ('Africa/Banjul', 'Africa/Banjul'), ('Africa/Bissau', 'Africa/Bissau'), ('Africa/Blantyre', 'Africa/Blantyre'), ('Africa/Brazzaville', 'Africa/Brazzaville'), ('Africa/Bujumbura', 'Africa/Bujumbura'), ('Africa/Cairo', 'Africa/Cairo'), ('Africa/Casablanca', 'Africa/Casablanca'), ('Africa/Ceuta', 'Africa/Ceuta'), ('Africa/Conakry', 'Africa/Conakry'), ('Africa/Dakar', 'Africa/Dakar'), ('Africa/Dar_es_Salaam', 'Africa/Dar_es_Salaam'), ('Africa/Djibouti', 'Africa/Djibouti'), ('Africa/Douala', 'Africa/Douala'), ('Africa/El_Aaiun', 'Africa/El_Aaiun'), ('Africa/Freetown', 'Africa/Freetown'), ('Africa/Gaborone', 'Africa/Gaborone'), ('Africa/Harare', 'Africa/Harare'), ('Africa/Johannesburg', 'Africa/Johannesburg'), ('Africa/Juba', 'Africa/Juba'), ('Africa/Kampala', 'Africa/Kampala'), ('Africa/Khartoum', 'Africa/Khartoum'), ('Africa/Kigali', 'Africa/Kigali'), ('Africa/Kinshasa', 'Africa/Kinshasa'), ('Africa/Lagos', 'Africa/Lagos'), ('Africa/Libreville', 'Africa/Libreville'), ('Africa/Lome', 'Africa/Lome'), ('Africa/Luanda', 'Africa/Luanda'), ('Africa/Lubumbashi', 'Africa/Lubumbashi'), ('Africa/Lusaka', 'Africa/Lusaka'), ('Africa/Malabo', 'Africa/Malabo'), ('Africa/Maputo', 'Africa/Maputo'), ('Africa/Maseru', 'Africa/Maseru'), ('Africa/Mbabane', 'Africa/Mbabane'), ('Africa/Mogadishu', 'Africa/Mogadishu'), ('Africa/Monrovia', 'Africa/Monrovia'), ('Africa/Nairobi', 'Africa/Nairobi'), ('Africa/Ndjamena', 'Africa/Ndjamena'), ('Africa/Niamey', 'Africa/Niamey'), ('Africa/Nouakchott', 'Africa/Nouakchott'), ('Africa/Ouagadougou', 'Africa/Ouagadougou'), ('Africa/Porto-Novo', 'Africa/Porto-Novo'), ('Africa/Sao_Tome', 'Africa/Sao_Tome'), ('Africa/Timbuktu', 'Africa/Timbuktu'), ('Africa/Tripoli', 'Africa/Tripoli'), ('Africa/Tunis', 'Africa/Tunis'), ('Africa/Windhoek', 'Africa/Windhoek'), ('America/Adak', 'America/Adak'), ('America/Anchorage', 'America/Anchorage'), ('America/Anguilla', 'America/Anguilla'), ('America/Antigua', 'America/Antigua'), ('America/Araguaina', 'America/Araguaina'), ('America/Argentina/Buenos_Aires', 'America/Argentina/Buenos_Aires'), ('America/Argentina/Catamarca', 'America/Argentina/Catamarca'), ('America/Argentina/ComodRivadavia', 'America/Argentina/ComodRivadavia'), ('America/Argentina/Cordoba', 'America/Argentina/Cordoba'), ('America/Argentina/Jujuy', 'America/Argentina/Jujuy'), ('America/Argentina/La_Rioja', 'America/Argentina/La_Rioja'), ('America/Argentina/Mendoza', 'America/Argentina/Mendoza'), ('America/Argentina/Rio_Gallegos', 'America/Argentina/Rio_Gallegos'), ('America/Argentina/Salta', 'America/Argentina/Salta'), ('America/Argentina/San_Juan', 'America/Argentina/San_Juan'), ('America/Argentina/San_Luis', 'America/Argentina/San_Luis'), ('America/Argentina/Tucuman', 'America/Argentina/Tucuman'), ('America/Argentina/Ushuaia', 'America/Argentina/Ushuaia'), ('America/Aruba', 'America/Aruba'), ('America/Asuncion', 'America/Asuncion'), ('America/Atikokan', 'America/Atikokan'), ('America/Atka', 'America/Atka'), ('America/Bahia', 'America/Bahia'), ('America/Bahia_Banderas', 'America/Bahia_Banderas'), ('America/Barbados', 'America/Barbados'), ('America/Belem', 'America/Belem'), ('America/Belize', 'America/Belize'), ('America/Blanc-Sablon', 'America/Blanc-Sablon'), ('America/Boa_Vista', 'America/Boa_Vista'), ('America/Bogota', 'America/Bogota'), ('America/Boise', 'America/Boise'), ('America/Buenos_Aires', 'America/Buenos_Aires'), ('America/Cambridge_Bay', 'America/Cambridge_Bay'), ('America/Campo_Grande', 'America/Campo_Grande'), ('America/Cancun', 'America/Cancun'), ('America/Caracas', 'America/Caracas'), ('America/Catamarca', 'America/Catamarca'), ('America/Cayenne', 'America/Cayenne'), ('America/Cayman', 'America/Cayman'), ('America/Chicago', 'America/Chicago'), ('America/Chihuahua', 'America/Chihuahua'), ('America/Coral_Harbour', 'America/Coral_Harbour'), ('America/Cordoba', 'America/Cordoba'), ('America/Costa_Rica', 'America/Costa_Rica'), ('America/Creston', 'America/Creston'), ('America/Cuiaba', 'America/Cuiaba'), ('America/Curacao', 'America/Curacao'), ('America/Danmarkshavn', 'America/Danmarkshavn'), ('America/Dawson', 'America/Dawson'), ('America/Dawson_Creek', 'America/Dawson_Creek'), ('America/Denver', 'America/Denver'), ('America/Detroit', 'America/Detroit'), ('America/Dominica', 'America/Dominica'), ('America/Edmonton', 'America/Edmonton'), ('America/Eirunepe', 'America/Eirunepe'), ('America/El_Salvador', 'America/El_Salvador'), ('America/Ensenada', 'America/Ensenada'), ('America/Fort_Wayne', 'America/Fort_Wayne'), ('America/Fortaleza', 'America/Fortaleza'), ('America/Glace_Bay', 'America/Glace_Bay'), ('America/Godthab', 'America/Godthab'), ('America/Goose_Bay', 'America/Goose_Bay'), ('America/Grand_Turk', 'America/Grand_Turk'), ('America/Grenada', 'America/Grenada'), ('America/Guadeloupe', 'America/Guadeloupe'), ('America/Guatemala', 'America/Guatemala'), ('America/Guayaquil', 'America/Guayaquil'), ('America/Guyana', 'America/Guyana'), ('America/Halifax', 'America/Halifax'), ('America/Havana', 'America/Havana'), ('America/Hermosillo', 'America/Hermosillo'), ('America/Indiana/Indianapolis', 'America/Indiana/Indianapolis'), ('America/Indiana/Knox', 'America/Indiana/Knox'), ('America/Indiana/Marengo', 'America/Indiana/Marengo'), ('America/Indiana/Petersburg', 'America/Indiana/Petersburg'), ('America/Indiana/Tell_City', 'America/Indiana/Tell_City'), ('America/Indiana/Vevay', 'America/Indiana/Vevay'), ('America/Indiana/Vincennes', 'America/Indiana/Vincennes'), ('America/Indiana/Winamac', 'America/Indiana/Winamac'), ('America/Indianapolis', 'America/Indianapolis'), ('America/Inuvik', 'America/Inuvik'), ('America/Iqaluit', 'America/Iqaluit'), ('America/Jamaica', 'America/Jamaica'), ('America/Jujuy', 'America/Jujuy'), ('America/Juneau', 'America/Juneau'), ('America/Kentucky/Louisville', 'America/Kentucky/Louisville'), ('America/Kentucky/Monticello', 'America/Kentucky/Monticello'), ('America/Knox_IN', 'America/Knox_IN'), ('America/Kralendijk', 'America/Kralendijk'), ('America/La_Paz', 'America/La_Paz'), ('America/Lima', 'America/Lima'), ('America/Los_Angeles', 'America/Los_Angeles'), ('America/Louisville', 'America/Louisville'), ('America/Lower_Princes', 'America/Lower_Princes'), ('America/Maceio', 'America/Maceio'), ('America/Managua', 'America/Managua'), ('America/Manaus', 'America/Manaus'), ('America/Marigot', 'America/Marigot'), ('America/Martinique', 'America/Martinique'), ('America/Matamoros', 'America/Matamoros'), ('America/Mazatlan', 'America/Mazatlan'), ('America/Mendoza', 'America/Mendoza'), ('America/Menominee', 'America/Menominee'), ('America/Merida', 'America/Merida'), ('America/Metlakatla', 'America/Metlakatla'), ('America/Mexico_City', 'America/Mexico_City'), ('America/Miquelon', 'America/Miquelon'), ('America/Moncton', 'America/Moncton'), ('America/Monterrey', 'America/Monterrey'), ('America/Montevideo', 'America/Montevideo'), ('America/Montreal', 'America/Montreal'), ('America/Montserrat', 'America/Montserrat'), ('America/Nassau', 'America/Nassau'), ('America/New_York', 'America/New_York'), ('America/Nipigon', 'America/Nipigon'), ('America/Nome', 'America/Nome'), ('America/Noronha', 'America/Noronha'), ('America/North_Dakota/Beulah', 'America/North_Dakota/Beulah'), ('America/North_Dakota/Center', 'America/North_Dakota/Center'), ('America/North_Dakota/New_Salem', 'America/North_Dakota/New_Salem'), ('America/Ojinaga', 'America/Ojinaga'), ('America/Panama', 'America/Panama'), ('America/Pangnirtung', 'America/Pangnirtung'), ('America/Paramaribo', 'America/Paramaribo'), ('America/Phoenix', 'America/Phoenix'), ('America/Port-au-Prince', 'America/Port-au-Prince'), ('America/Port_of_Spain', 'America/Port_of_Spain'), ('America/Porto_Acre', 'America/Porto_Acre'), ('America/Porto_Velho', 'America/Porto_Velho'), ('America/Puerto_Rico', 'America/Puerto_Rico'), ('America/Rainy_River', 'America/Rainy_River'), ('America/Rankin_Inlet', 'America/Rankin_Inlet'), ('America/Recife', 'America/Recife'), ('America/Regina', 'America/Regina'), ('America/Resolute', 'America/Resolute'), ('America/Rio_Branco', 'America/Rio_Branco'), ('America/Rosario', 'America/Rosario'), ('America/Santa_Isabel', 'America/Santa_Isabel'), ('America/Santarem', 'America/Santarem'), ('America/Santiago', 'America/Santiago'), ('America/Santo_Domingo', 'America/Santo_Domingo'), ('America/Sao_Paulo', 'America/Sao_Paulo'), ('America/Scoresbysund', 'America/Scoresbysund'), ('America/Shiprock', 'America/Shiprock'), ('America/Sitka', 'America/Sitka'), ('America/St_Barthelemy', 'America/St_Barthelemy'), ('America/St_Johns', 'America/St_Johns'), ('America/St_Kitts', 'America/St_Kitts'), ('America/St_Lucia', 'America/St_Lucia'), ('America/St_Thomas', 'America/St_Thomas'), ('America/St_Vincent', 'America/St_Vincent'), ('America/Swift_Current', 'America/Swift_Current'), ('America/Tegucigalpa', 'America/Tegucigalpa'), ('America/Thule', 'America/Thule'), ('America/Thunder_Bay', 'America/Thunder_Bay'), ('America/Tijuana', 'America/Tijuana'), ('America/Toronto', 'America/Toronto'), ('America/Tortola', 'America/Tortola'), ('America/Vancouver', 'America/Vancouver'), ('America/Virgin', 'America/Virgin'), ('America/Whitehorse', 'America/Whitehorse'), ('America/Winnipeg', 'America/Winnipeg'), ('America/Yakutat', 'America/Yakutat'), ('America/Yellowknife', 'America/Yellowknife'), ('Antarctica/Casey', 'Antarctica/Casey'), ('Antarctica/Davis', 'Antarctica/Davis'), ('Antarctica/DumontDUrville', 'Antarctica/DumontDUrville'), ('Antarctica/Macquarie', 'Antarctica/Macquarie'), ('Antarctica/Mawson', 'Antarctica/Mawson'), ('Antarctica/McMurdo', 'Antarctica/McMurdo'), ('Antarctica/Palmer', 'Antarctica/Palmer'), ('Antarctica/Rothera', 'Antarctica/Rothera'), ('Antarctica/South_Pole', 'Antarctica/South_Pole'), ('Antarctica/Syowa', 'Antarctica/Syowa'), ('Antarctica/Troll', 'Antarctica/Troll'), ('Antarctica/Vostok', 'Antarctica/Vostok'), ('Arctic/Longyearbyen', 'Arctic/Longyearbyen'), ('Asia/Aden', 'Asia/Aden'), ('Asia/Almaty', 'Asia/Almaty'), ('Asia/Amman', 'Asia/Amman'), ('Asia/Anadyr', 'Asia/Anadyr'), ('Asia/Aqtau', 'Asia/Aqtau'), ('Asia/Aqtobe', 'Asia/Aqtobe'), ('Asia/Ashgabat', 'Asia/Ashgabat'), ('Asia/Ashkhabad', 'Asia/Ashkhabad'), ('Asia/Baghdad', 'Asia/Baghdad'), ('Asia/Bahrain', 'Asia/Bahrain'), ('Asia/Baku', 'Asia/Baku'), ('Asia/Bangkok', 'Asia/Bangkok'), ('Asia/Beirut', 'Asia/Beirut'), ('Asia/Bishkek', 'Asia/Bishkek'), ('Asia/Brunei', 'Asia/Brunei'), ('Asia/Calcutta', 'Asia/Calcutta'), ('Asia/Chita', 'Asia/Chita'), ('Asia/Choibalsan', 'Asia/Choibalsan'), ('Asia/Chongqing', 'Asia/Chongqing'), ('Asia/Chungking', 'Asia/Chungking'), ('Asia/Colombo', 'Asia/Colombo'), ('Asia/Dacca', 'Asia/Dacca'), ('Asia/Damascus', 'Asia/Damascus'), ('Asia/Dhaka', 'Asia/Dhaka'), ('Asia/Dili', 'Asia/Dili'), ('Asia/Dubai', 'Asia/Dubai'), ('Asia/Dushanbe', 'Asia/Dushanbe'), ('Asia/Gaza', 'Asia/Gaza'), ('Asia/Harbin', 'Asia/Harbin'), ('Asia/Hebron', 'Asia/Hebron'), ('Asia/Ho_Chi_Minh', 'Asia/Ho_Chi_Minh'), ('Asia/Hong_Kong', 'Asia/Hong_Kong'), ('Asia/Hovd', 'Asia/Hovd'), ('Asia/Irkutsk', 'Asia/Irkutsk'), ('Asia/Istanbul', 'Asia/Istanbul'), ('Asia/Jakarta', 'Asia/Jakarta'), ('Asia/Jayapura', 'Asia/Jayapura'), ('Asia/Jerusalem', 'Asia/Jerusalem'), ('Asia/Kabul', 'Asia/Kabul'), ('Asia/Kamchatka', 'Asia/Kamchatka'), ('Asia/Karachi', 'Asia/Karachi'), ('Asia/Kashgar', 'Asia/Kashgar'), ('Asia/Kathmandu', 'Asia/Kathmandu'), ('Asia/Katmandu', 'Asia/Katmandu'), ('Asia/Khandyga', 'Asia/Khandyga'), ('Asia/Kolkata', 'Asia/Kolkata'), ('Asia/Krasnoyarsk', 'Asia/Krasnoyarsk'), ('Asia/Kuala_Lumpur', 'Asia/Kuala_Lumpur'), ('Asia/Kuching', 'Asia/Kuching'), ('Asia/Kuwait', 'Asia/Kuwait'), ('Asia/Macao', 'Asia/Macao'), ('Asia/Macau', 'Asia/Macau'), ('Asia/Magadan', 'Asia/Magadan'), ('Asia/Makassar', 'Asia/Makassar'), ('Asia/Manila', 'Asia/Manila'), ('Asia/Muscat', 'Asia/Muscat'), ('Asia/Nicosia', 'Asia/Nicosia'), ('Asia/Novokuznetsk', 'Asia/Novokuznetsk'), ('Asia/Novosibirsk', 'Asia/Novosibirsk'), ('Asia/Omsk', 'Asia/Omsk'), ('Asia/Oral', 'Asia/Oral'), ('Asia/Phnom_Penh', 'Asia/Phnom_Penh'), ('Asia/Pontianak', 'Asia/Pontianak'), ('Asia/Pyongyang', 'Asia/Pyongyang'), ('Asia/Qatar', 'Asia/Qatar'), ('Asia/Qyzylorda', 'Asia/Qyzylorda'), ('Asia/Rangoon', 'Asia/Rangoon'), ('Asia/Riyadh', 'Asia/Riyadh'), ('Asia/Saigon', 'Asia/Saigon'), ('Asia/Sakhalin', 'Asia/Sakhalin'), ('Asia/Samarkand', 'Asia/Samarkand'), ('Asia/Seoul', 'Asia/Seoul'), ('Asia/Shanghai', 'Asia/Shanghai'), ('Asia/Singapore', 'Asia/Singapore'), ('Asia/Srednekolymsk', 'Asia/Srednekolymsk'), ('Asia/Taipei', 'Asia/Taipei'), ('Asia/Tashkent', 'Asia/Tashkent'), ('Asia/Tbilisi', 'Asia/Tbilisi'), ('Asia/Tehran', 'Asia/Tehran'), ('Asia/Tel_Aviv', 'Asia/Tel_Aviv'), ('Asia/Thimbu', 'Asia/Thimbu'), ('Asia/Thimphu', 'Asia/Thimphu'), ('Asia/Tokyo', 'Asia/Tokyo'), ('Asia/Ujung_Pandang', 'Asia/Ujung_Pandang'), ('Asia/Ulaanbaatar', 'Asia/Ulaanbaatar'), ('Asia/Ulan_Bator', 'Asia/Ulan_Bator'), ('Asia/Urumqi', 'Asia/Urumqi'), ('Asia/Ust-Nera', 'Asia/Ust-Nera'), ('Asia/Vientiane', 'Asia/Vientiane'), ('Asia/Vladivostok', 'Asia/Vladivostok'), ('Asia/Yakutsk', 'Asia/Yakutsk'), ('Asia/Yekaterinburg', 'Asia/Yekaterinburg'), ('Asia/Yerevan', 'Asia/Yerevan'), ('Atlantic/Azores', 'Atlantic/Azores'), ('Atlantic/Bermuda', 'Atlantic/Bermuda'), ('Atlantic/Canary', 'Atlantic/Canary'), ('Atlantic/Cape_Verde', 'Atlantic/Cape_Verde'), ('Atlantic/Faeroe', 'Atlantic/Faeroe'), ('Atlantic/Faroe', 'Atlantic/Faroe'), ('Atlantic/Jan_Mayen', 'Atlantic/Jan_Mayen'), ('Atlantic/Madeira', 'Atlantic/Madeira'), ('Atlantic/Reykjavik', 'Atlantic/Reykjavik'), ('Atlantic/South_Georgia', 'Atlantic/South_Georgia'), ('Atlantic/St_Helena', 'Atlantic/St_Helena'), ('Atlantic/Stanley', 'Atlantic/Stanley'), ('Australia/ACT', 'Australia/ACT'), ('Australia/Adelaide', 'Australia/Adelaide'), ('Australia/Brisbane', 'Australia/Brisbane'), ('Australia/Broken_Hill', 'Australia/Broken_Hill'), ('Australia/Canberra', 'Australia/Canberra'), ('Australia/Currie', 'Australia/Currie'), ('Australia/Darwin', 'Australia/Darwin'), ('Australia/Eucla', 'Australia/Eucla'), ('Australia/Hobart', 'Australia/Hobart'), ('Australia/LHI', 'Australia/LHI'), ('Australia/Lindeman', 'Australia/Lindeman'), ('Australia/Lord_Howe', 'Australia/Lord_Howe'), ('Australia/Melbourne', 'Australia/Melbourne'), ('Australia/NSW', 'Australia/NSW'), ('Australia/North', 'Australia/North'), ('Australia/Perth', 'Australia/Perth'), ('Australia/Queensland', 'Australia/Queensland'), ('Australia/South', 'Australia/South'), ('Australia/Sydney', 'Australia/Sydney'), ('Australia/Tasmania', 'Australia/Tasmania'), ('Australia/Victoria', 'Australia/Victoria'), ('Australia/West', 'Australia/West'), ('Australia/Yancowinna', 'Australia/Yancowinna'), ('Brazil/Acre', 'Brazil/Acre'), ('Brazil/DeNoronha', 'Brazil/DeNoronha'), ('Brazil/East', 'Brazil/East'), ('Brazil/West', 'Brazil/West'), ('CET', 'CET'), ('CST6CDT', 'CST6CDT'), ('Canada/Atlantic', 'Canada/Atlantic'), ('Canada/Central', 'Canada/Central'), ('Canada/East-Saskatchewan', 'Canada/East-Saskatchewan'), ('Canada/Eastern', 'Canada/Eastern'), ('Canada/Mountain', 'Canada/Mountain'), ('Canada/Newfoundland', 'Canada/Newfoundland'), ('Canada/Pacific', 'Canada/Pacific'), ('Canada/Saskatchewan', 'Canada/Saskatchewan'), ('Canada/Yukon', 'Canada/Yukon'), ('Chile/Continental', 'Chile/Continental'), ('Chile/EasterIsland', 'Chile/EasterIsland'), ('Cuba', 'Cuba'), ('EET', 'EET'), ('EST', 'EST'), ('EST5EDT', 'EST5EDT'), ('Egypt', 'Egypt'), ('Eire', 'Eire'), ('Etc/GMT', 'Etc/GMT'), ('Etc/GMT+0', 'Etc/GMT+0'), ('Etc/GMT+1', 'Etc/GMT+1'), ('Etc/GMT+10', 'Etc/GMT+10'), ('Etc/GMT+11', 'Etc/GMT+11'), ('Etc/GMT+12', 'Etc/GMT+12'), ('Etc/GMT+2', 'Etc/GMT+2'), ('Etc/GMT+3', 'Etc/GMT+3'), ('Etc/GMT+4', 'Etc/GMT+4'), ('Etc/GMT+5', 'Etc/GMT+5'), ('Etc/GMT+6', 'Etc/GMT+6'), ('Etc/GMT+7', 'Etc/GMT+7'), ('Etc/GMT+8', 'Etc/GMT+8'), ('Etc/GMT+9', 'Etc/GMT+9'), ('Etc/GMT-0', 'Etc/GMT-0'), ('Etc/GMT-1', 'Etc/GMT-1'), ('Etc/GMT-10', 'Etc/GMT-10'), ('Etc/GMT-11', 'Etc/GMT-11'), ('Etc/GMT-12', 'Etc/GMT-12'), ('Etc/GMT-13', 'Etc/GMT-13'), ('Etc/GMT-14', 'Etc/GMT-14'), ('Etc/GMT-2', 'Etc/GMT-2'), ('Etc/GMT-3', 'Etc/GMT-3'), ('Etc/GMT-4', 'Etc/GMT-4'), ('Etc/GMT-5', 'Etc/GMT-5'), ('Etc/GMT-6', 'Etc/GMT-6'), ('Etc/GMT-7', 'Etc/GMT-7'), ('Etc/GMT-8', 'Etc/GMT-8'), ('Etc/GMT-9', 'Etc/GMT-9'), ('Etc/GMT0', 'Etc/GMT0'), ('Etc/Greenwich', 'Etc/Greenwich'), ('Etc/UCT', 'Etc/UCT'), ('Etc/UTC', 'Etc/UTC'), ('Etc/Universal', 'Etc/Universal'), ('Etc/Zulu', 'Etc/Zulu'), ('Europe/Amsterdam', 'Europe/Amsterdam'), ('Europe/Andorra', 'Europe/Andorra'), ('Europe/Athens', 'Europe/Athens'), ('Europe/Belfast', 'Europe/Belfast'), ('Europe/Belgrade', 'Europe/Belgrade'), ('Europe/Berlin', 'Europe/Berlin'), ('Europe/Bratislava', 'Europe/Bratislava'), ('Europe/Brussels', 'Europe/Brussels'), ('Europe/Bucharest', 'Europe/Bucharest'), ('Europe/Budapest', 'Europe/Budapest'), ('Europe/Busingen', 'Europe/Busingen'), ('Europe/Chisinau', 'Europe/Chisinau'), ('Europe/Copenhagen', 'Europe/Copenhagen'), ('Europe/Dublin', 'Europe/Dublin'), ('Europe/Gibraltar', 'Europe/Gibraltar'), ('Europe/Guernsey', 'Europe/Guernsey'), ('Europe/Helsinki', 'Europe/Helsinki'), ('Europe/Isle_of_Man', 'Europe/Isle_of_Man'), ('Europe/Istanbul', 'Europe/Istanbul'), ('Europe/Jersey', 'Europe/Jersey'), ('Europe/Kaliningrad', 'Europe/Kaliningrad'), ('Europe/Kiev', 'Europe/Kiev'), ('Europe/Lisbon', 'Europe/Lisbon'), ('Europe/Ljubljana', 'Europe/Ljubljana'), ('Europe/London', 'Europe/London'), ('Europe/Luxembourg', 'Europe/Luxembourg'), ('Europe/Madrid', 'Europe/Madrid'), ('Europe/Malta', 'Europe/Malta'), ('Europe/Mariehamn', 'Europe/Mariehamn'), ('Europe/Minsk', 'Europe/Minsk'), ('Europe/Monaco', 'Europe/Monaco'), ('Europe/Moscow', 'Europe/Moscow'), ('Europe/Nicosia', 'Europe/Nicosia'), ('Europe/Oslo', 'Europe/Oslo'), ('Europe/Paris', 'Europe/Paris'), ('Europe/Podgorica', 'Europe/Podgorica'), ('Europe/Prague', 'Europe/Prague'), ('Europe/Riga', 'Europe/Riga'), ('Europe/Rome', 'Europe/Rome'), ('Europe/Samara', 'Europe/Samara'), ('Europe/San_Marino', 'Europe/San_Marino'), ('Europe/Sarajevo', 'Europe/Sarajevo'), ('Europe/Simferopol', 'Europe/Simferopol'), ('Europe/Skopje', 'Europe/Skopje'), ('Europe/Sofia', 'Europe/Sofia'), ('Europe/Stockholm', 'Europe/Stockholm'), ('Europe/Tallinn', 'Europe/Tallinn'), ('Europe/Tirane', 'Europe/Tirane'), ('Europe/Tiraspol', 'Europe/Tiraspol'), ('Europe/Uzhgorod', 'Europe/Uzhgorod'), ('Europe/Vaduz', 'Europe/Vaduz'), ('Europe/Vatican', 'Europe/Vatican'), ('Europe/Vienna', 'Europe/Vienna'), ('Europe/Vilnius', 'Europe/Vilnius'), ('Europe/Volgograd', 'Europe/Volgograd'), ('Europe/Warsaw', 'Europe/Warsaw'), ('Europe/Zagreb', 'Europe/Zagreb'), ('Europe/Zaporozhye', 'Europe/Zaporozhye'), ('Europe/Zurich', 'Europe/Zurich'), ('GB', 'GB'), ('GB-Eire', 'GB-Eire'), ('GMT', 'GMT'), ('GMT+0', 'GMT+0'), ('GMT-0', 'GMT-0'), ('GMT0', 'GMT0'), ('Greenwich', 'Greenwich'), ('HST', 'HST'), ('Hongkong', 'Hongkong'), ('Iceland', 'Iceland'), ('Indian/Antananarivo', 'Indian/Antananarivo'), ('Indian/Chagos', 'Indian/Chagos'), ('Indian/Christmas', 'Indian/Christmas'), ('Indian/Cocos', 'Indian/Cocos'), ('Indian/Comoro', 'Indian/Comoro'), ('Indian/Kerguelen', 'Indian/Kerguelen'), ('Indian/Mahe', 'Indian/Mahe'), ('Indian/Maldives', 'Indian/Maldives'), ('Indian/Mauritius', 'Indian/Mauritius'), ('Indian/Mayotte', 'Indian/Mayotte'), ('Indian/Reunion', 'Indian/Reunion'), ('Iran', 'Iran'), ('Israel', 'Israel'), ('Jamaica', 'Jamaica'), ('Japan', 'Japan'), ('Kwajalein', 'Kwajalein'), ('Libya', 'Libya'), ('MET', 'MET'), ('MST', 'MST'), ('MST7MDT', 'MST7MDT'), ('Mexico/BajaNorte', 'Mexico/BajaNorte'), ('Mexico/BajaSur', 'Mexico/BajaSur'), ('Mexico/General', 'Mexico/General'), ('NZ', 'NZ'), ('NZ-CHAT', 'NZ-CHAT'), ('Navajo', 'Navajo'), ('PRC', 'PRC'), ('PST8PDT', 'PST8PDT'), ('Pacific/Apia', 'Pacific/Apia'), ('Pacific/Auckland', 'Pacific/Auckland'), ('Pacific/Bougainville', 'Pacific/Bougainville'), ('Pacific/Chatham', 'Pacific/Chatham'), ('Pacific/Chuuk', 'Pacific/Chuuk'), ('Pacific/Easter', 'Pacific/Easter'), ('Pacific/Efate', 'Pacific/Efate'), ('Pacific/Enderbury', 'Pacific/Enderbury'), ('Pacific/Fakaofo', 'Pacific/Fakaofo'), ('Pacific/Fiji', 'Pacific/Fiji'), ('Pacific/Funafuti', 'Pacific/Funafuti'), ('Pacific/Galapagos', 'Pacific/Galapagos'), ('Pacific/Gambier', 'Pacific/Gambier'), ('Pacific/Guadalcanal', 'Pacific/Guadalcanal'), ('Pacific/Guam', 'Pacific/Guam'), ('Pacific/Honolulu', 'Pacific/Honolulu'), ('Pacific/Johnston', 'Pacific/Johnston'), ('Pacific/Kiritimati', 'Pacific/Kiritimati'), ('Pacific/Kosrae', 'Pacific/Kosrae'), ('Pacific/Kwajalein', 'Pacific/Kwajalein'), ('Pacific/Majuro', 'Pacific/Majuro'), ('Pacific/Marquesas', 'Pacific/Marquesas'), ('Pacific/Midway', 'Pacific/Midway'), ('Pacific/Nauru', 'Pacific/Nauru'), ('Pacific/Niue', 'Pacific/Niue'), ('Pacific/Norfolk', 'Pacific/Norfolk'), ('Pacific/Noumea', 'Pacific/Noumea'), ('Pacific/Pago_Pago', 'Pacific/Pago_Pago'), ('Pacific/Palau', 'Pacific/Palau'), ('Pacific/Pitcairn', 'Pacific/Pitcairn'), ('Pacific/Pohnpei', 'Pacific/Pohnpei'), ('Pacific/Ponape', 'Pacific/Ponape'), ('Pacific/Port_Moresby', 'Pacific/Port_Moresby'), ('Pacific/Rarotonga', 'Pacific/Rarotonga'), ('Pacific/Saipan', 'Pacific/Saipan'), ('Pacific/Samoa', 'Pacific/Samoa'), ('Pacific/Tahiti', 'Pacific/Tahiti'), ('Pacific/Tarawa', 'Pacific/Tarawa'), ('Pacific/Tongatapu', 'Pacific/Tongatapu'), ('Pacific/Truk', 'Pacific/Truk'), ('Pacific/Wake', 'Pacific/Wake'), ('Pacific/Wallis', 'Pacific/Wallis'), ('Pacific/Yap', 'Pacific/Yap'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('ROC', 'ROC'), ('ROK', 'ROK'), ('Singapore', 'Singapore'), ('Turkey', 'Turkey'), ('UCT', 'UCT'), ('US/Alaska', 'US/Alaska'), ('US/Aleutian', 'US/Aleutian'), ('US/Arizona', 'US/Arizona'), ('US/Central', 'US/Central'), ('US/East-Indiana', 'US/East-Indiana'), ('US/Eastern', 'US/Eastern'), ('US/Hawaii', 'US/Hawaii'), ('US/Indiana-Starke', 'US/Indiana-Starke'), ('US/Michigan', 'US/Michigan'), ('US/Mountain', 'US/Mountain'), ('US/Pacific', 'US/Pacific'), ('US/Pacific-New', 'US/Pacific-New'), ('US/Samoa', 'US/Samoa'), ('UTC', 'UTC'), ('Universal', 'Universal'), ('W-SU', 'W-SU'), ('WET', 'WET'), ('Zulu', 'Zulu')]),
-        ),
-    ]
diff --git a/geonode/people/migrations/0027_auto_20180414_2120.py b/geonode/people/migrations/0027_auto_20180414_2120.py
deleted file mode 100644
index fc5d368e3..000000000
--- a/geonode/people/migrations/0027_auto_20180414_2120.py
+++ /dev/null
@@ -1,21 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-04-14 21:20
-from __future__ import unicode_literals
-
-import django.contrib.auth.validators
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('people', '0026_auto_20171120_0730'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='profile',
-            name='username',
-            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username'),
-        ),
-    ]
diff --git a/geonode/people/migrations/0028_auto_20180606_1543.py b/geonode/people/migrations/0028_auto_20180606_1543.py
deleted file mode 100644
index 6a6bb44d9..000000000
--- a/geonode/people/migrations/0028_auto_20180606_1543.py
+++ /dev/null
@@ -1,25 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-06-06 15:43
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('people', '0027_auto_20180414_2120'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='profile',
-            name='country',
-            field=models.CharField(blank=True, choices=[(b'AFG', b'Afghanistan'), (b'ALA', b'Aland Islands'), (b'ALB', b'Albania'), (b'DZA', b'Algeria'), (b'ASM', b'American Samoa'), (b'AND', b'Andorra'), (b'AGO', b'Angola'), (b'AIA', b'Anguilla'), (b'ATG', b'Antigua and Barbuda'), (b'ARG', b'Argentina'), (b'ARM', b'Armenia'), (b'ABW', b'Aruba'), (b'AUS', b'Australia'), (b'AUT', b'Austria'), (b'AZE', b'Azerbaijan'), (b'BHS', b'Bahamas'), (b'BHR', b'Bahrain'), (b'BGD', b'Bangladesh'), (b'BRB', b'Barbados'), (b'BLR', b'Belarus'), (b'BEL', b'Belgium'), (b'BLZ', b'Belize'), (b'BEN', b'Benin'), (b'BMU', b'Bermuda'), (b'BTN', b'Bhutan'), (b'BOL', b'Bolivia'), (b'BIH', b'Bosnia and Herzegovina'), (b'BWA', b'Botswana'), (b'BRA', b'Brazil'), (b'VGB', b'British Virgin Islands'), (b'BRN', b'Brunei Darussalam'), (b'BGR', b'Bulgaria'), (b'BFA', b'Burkina Faso'), (b'BDI', b'Burundi'), (b'KHM', b'Cambodia'), (b'CMR', b'Cameroon'), (b'CAN', b'Canada'), (b'CPV', b'Cape Verde'), (b'CYM', b'Cayman Islands'), (b'CAF', b'Central African Republic'), (b'TCD', b'Chad'), (b'CIL', b'Channel Islands'), (b'CHL', b'Chile'), (b'CHN', b'China'), (b'HKG', b'China - Hong Kong'), (b'MAC', b'China - Macao'), (b'COL', b'Colombia'), (b'COM', b'Comoros'), (b'COG', b'Congo'), (b'COK', b'Cook Islands'), (b'CRI', b'Costa Rica'), (b'CIV', b"Cote d'Ivoire"), (b'HRV', b'Croatia'), (b'CUB', b'Cuba'), (b'CYP', b'Cyprus'), (b'CZE', b'Czech Republic'), (b'PRK', b"Democratic People's Republic of Korea"), (b'COD', b'Democratic Republic of the Congo'), (b'DNK', b'Denmark'), (b'DJI', b'Djibouti'), (b'DMA', b'Dominica'), (b'DOM', b'Dominican Republic'), (b'ECU', b'Ecuador'), (b'EGY', b'Egypt'), (b'SLV', b'El Salvador'), (b'GNQ', b'Equatorial Guinea'), (b'ERI', b'Eritrea'), (b'EST', b'Estonia'), (b'ETH', b'Ethiopia'), (b'FRO', b'Faeroe Islands'), (b'FLK', b'Falkland Islands (Malvinas)'), (b'FJI', b'Fiji'), (b'FIN', b'Finland'), (b'FRA', b'France'), (b'GUF', b'French Guiana'), (b'PYF', b'French Polynesia'), (b'GAB', b'Gabon'), (b'GMB', b'Gambia'), (b'GEO', b'Georgia'), (b'DEU', b'Germany'), (b'GHA', b'Ghana'), (b'GIB', b'Gibraltar'), (b'GRC', b'Greece'), (b'GRL', b'Greenland'), (b'GRD', b'Grenada'), (b'GLP', b'Guadeloupe'), (b'GUM', b'Guam'), (b'GTM', b'Guatemala'), (b'GGY', b'Guernsey'), (b'GIN', b'Guinea'), (b'GNB', b'Guinea-Bissau'), (b'GUY', b'Guyana'), (b'HTI', b'Haiti'), (b'VAT', b'Holy See (Vatican City)'), (b'HND', b'Honduras'), (b'HUN', b'Hungary'), (b'ISL', b'Iceland'), (b'IND', b'India'), (b'IDN', b'Indonesia'), (b'IRN', b'Iran'), (b'IRQ', b'Iraq'), (b'IRL', b'Ireland'), (b'IMN', b'Isle of Man'), (b'ISR', b'Israel'), (b'ITA', b'Italy'), (b'JAM', b'Jamaica'), (b'JPN', b'Japan'), (b'JEY', b'Jersey'), (b'JOR', b'Jordan'), (b'KAZ', b'Kazakhstan'), (b'KEN', b'Kenya'), (b'KIR', b'Kiribati'), (b'KWT', b'Kuwait'), (b'KGZ', b'Kyrgyzstan'), (b'LAO', b"Lao People's Democratic Republic"), (b'LVA', b'Latvia'), (b'LBN', b'Lebanon'), (b'LSO', b'Lesotho'), (b'LBR', b'Liberia'), (b'LBY', b'Libyan Arab Jamahiriya'), (b'LIE', b'Liechtenstein'), (b'LTU', b'Lithuania'), (b'LUX', b'Luxembourg'), (b'MKD', b'Macedonia'), (b'MDG', b'Madagascar'), (b'MWI', b'Malawi'), (b'MYS', b'Malaysia'), (b'MDV', b'Maldives'), (b'MLI', b'Mali'), (b'MLT', b'Malta'), (b'MHL', b'Marshall Islands'), (b'MTQ', b'Martinique'), (b'MRT', b'Mauritania'), (b'MUS', b'Mauritius'), (b'MYT', b'Mayotte'), (b'MEX', b'Mexico'), (b'FSM', b'Micronesia, Federated States of'), (b'MCO', b'Monaco'), (b'MNG', b'Mongolia'), (b'MNE', b'Montenegro'), (b'MSR', b'Montserrat'), (b'MAR', b'Morocco'), (b'MOZ', b'Mozambique'), (b'MMR', b'Myanmar'), (b'NAM', b'Namibia'), (b'NRU', b'Nauru'), (b'NPL', b'Nepal'), (b'NLD', b'Netherlands'), (b'ANT', b'Netherlands Antilles'), (b'NCL', b'New Caledonia'), (b'NZL', b'New Zealand'), (b'NIC', b'Nicaragua'), (b'NER', b'Niger'), (b'NGA', b'Nigeria'), (b'NIU', b'Niue'), (b'NFK', b'Norfolk Island'), (b'MNP', b'Northern Mariana Islands'), (b'NOR', b'Norway'), (b'PSE', b'Occupied Palestinian Territory'), (b'OMN', b'Oman'), (b'PAK', b'Pakistan'), (b'PLW', b'Palau'), (b'PAN', b'Panama'), (b'PNG', b'Papua New Guinea'), (b'PRY', b'Paraguay'), (b'PER', b'Peru'), (b'PHL', b'Philippines'), (b'PCN', b'Pitcairn'), (b'POL', b'Poland'), (b'PRT', b'Portugal'), (b'PRI', b'Puerto Rico'), (b'QAT', b'Qatar'), (b'KOR', b'Republic of Korea'), (b'MDA', b'Republic of Moldova'), (b'REU', b'Reunion'), (b'ROU', b'Romania'), (b'RUS', b'Russian Federation'), (b'RWA', b'Rwanda'), (b'BLM', b'Saint-Barthelemy'), (b'SHN', b'Saint Helena'), (b'KNA', b'Saint Kitts and Nevis'), (b'LCA', b'Saint Lucia'), (b'MAF', b'Saint-Martin (French part)'), (b'SPM', b'Saint Pierre and Miquelon'), (b'VCT', b'Saint Vincent and the Grenadines'), (b'WSM', b'Samoa'), (b'SMR', b'San Marino'), (b'STP', b'Sao Tome and Principe'), (b'SAU', b'Saudi Arabia'), (b'SEN', b'Senegal'), (b'SRB', b'Serbia'), (b'SYC', b'Seychelles'), (b'SLE', b'Sierra Leone'), (b'SGP', b'Singapore'), (b'SVK', b'Slovakia'), (b'SVN', b'Slovenia'), (b'SLB', b'Solomon Islands'), (b'SOM', b'Somalia'), (b'ZAF', b'South Africa'), (b'SSD', b'South Sudan'), (b'ESP', b'Spain'), (b'LKA', b'Sri Lanka'), (b'SDN', b'Sudan'), (b'SUR', b'Suriname'), (b'SJM', b'Svalbard and Jan Mayen Islands'), (b'SWZ', b'Swaziland'), (b'SWE', b'Sweden'), (b'CHE', b'Switzerland'), (b'SYR', b'Syrian Arab Republic'), (b'TJK', b'Tajikistan'), (b'THA', b'Thailand'), (b'TLS', b'Timor-Leste'), (b'TGO', b'Togo'), (b'TKL', b'Tokelau'), (b'TON', b'Tonga'), (b'TTO', b'Trinidad and Tobago'), (b'TUN', b'Tunisia'), (b'TUR', b'Turkey'), (b'TKM', b'Turkmenistan'), (b'TCA', b'Turks and Caicos Islands'), (b'TUV', b'Tuvalu'), (b'UGA', b'Uganda'), (b'UKR', b'Ukraine'), (b'ARE', b'United Arab Emirates'), (b'GBR', b'United Kingdom'), (b'TZA', b'United Republic of Tanzania'), (b'USA', b'United States of America'), (b'VIR', b'United States Virgin Islands'), (b'URY', b'Uruguay'), (b'UZB', b'Uzbekistan'), (b'VUT', b'Vanuatu'), (b'VEN', b'Venezuela (Bolivarian Republic of)'), (b'VNM', b'Viet Nam'), (b'WLF', b'Wallis and Futuna Islands'), (b'ESH', b'Western Sahara'), (b'YEM', b'Yemen'), (b'ZMB', b'Zambia'), (b'ZWE', b'Zimbabwe')], help_text='country of the physical address', max_length=3, null=True, verbose_name='Country'),
-        ),
-        migrations.AlterField(
-            model_name='profile',
-            name='timezone',
-            field=models.CharField(blank=True, choices=[('Africa/Abidjan', 'Africa/Abidjan'), ('Africa/Accra', 'Africa/Accra'), ('Africa/Addis_Ababa', 'Africa/Addis_Ababa'), ('Africa/Algiers', 'Africa/Algiers'), ('Africa/Asmara', 'Africa/Asmara'), ('Africa/Asmera', 'Africa/Asmera'), ('Africa/Bamako', 'Africa/Bamako'), ('Africa/Bangui', 'Africa/Bangui'), ('Africa/Banjul', 'Africa/Banjul'), ('Africa/Bissau', 'Africa/Bissau'), ('Africa/Blantyre', 'Africa/Blantyre'), ('Africa/Brazzaville', 'Africa/Brazzaville'), ('Africa/Bujumbura', 'Africa/Bujumbura'), ('Africa/Cairo', 'Africa/Cairo'), ('Africa/Casablanca', 'Africa/Casablanca'), ('Africa/Ceuta', 'Africa/Ceuta'), ('Africa/Conakry', 'Africa/Conakry'), ('Africa/Dakar', 'Africa/Dakar'), ('Africa/Dar_es_Salaam', 'Africa/Dar_es_Salaam'), ('Africa/Djibouti', 'Africa/Djibouti'), ('Africa/Douala', 'Africa/Douala'), ('Africa/El_Aaiun', 'Africa/El_Aaiun'), ('Africa/Freetown', 'Africa/Freetown'), ('Africa/Gaborone', 'Africa/Gaborone'), ('Africa/Harare', 'Africa/Harare'), ('Africa/Johannesburg', 'Africa/Johannesburg'), ('Africa/Juba', 'Africa/Juba'), ('Africa/Kampala', 'Africa/Kampala'), ('Africa/Khartoum', 'Africa/Khartoum'), ('Africa/Kigali', 'Africa/Kigali'), ('Africa/Kinshasa', 'Africa/Kinshasa'), ('Africa/Lagos', 'Africa/Lagos'), ('Africa/Libreville', 'Africa/Libreville'), ('Africa/Lome', 'Africa/Lome'), ('Africa/Luanda', 'Africa/Luanda'), ('Africa/Lubumbashi', 'Africa/Lubumbashi'), ('Africa/Lusaka', 'Africa/Lusaka'), ('Africa/Malabo', 'Africa/Malabo'), ('Africa/Maputo', 'Africa/Maputo'), ('Africa/Maseru', 'Africa/Maseru'), ('Africa/Mbabane', 'Africa/Mbabane'), ('Africa/Mogadishu', 'Africa/Mogadishu'), ('Africa/Monrovia', 'Africa/Monrovia'), ('Africa/Nairobi', 'Africa/Nairobi'), ('Africa/Ndjamena', 'Africa/Ndjamena'), ('Africa/Niamey', 'Africa/Niamey'), ('Africa/Nouakchott', 'Africa/Nouakchott'), ('Africa/Ouagadougou', 'Africa/Ouagadougou'), ('Africa/Porto-Novo', 'Africa/Porto-Novo'), ('Africa/Sao_Tome', 'Africa/Sao_Tome'), ('Africa/Timbuktu', 'Africa/Timbuktu'), ('Africa/Tripoli', 'Africa/Tripoli'), ('Africa/Tunis', 'Africa/Tunis'), ('Africa/Windhoek', 'Africa/Windhoek'), ('America/Adak', 'America/Adak'), ('America/Anchorage', 'America/Anchorage'), ('America/Anguilla', 'America/Anguilla'), ('America/Antigua', 'America/Antigua'), ('America/Araguaina', 'America/Araguaina'), ('America/Argentina/Buenos_Aires', 'America/Argentina/Buenos_Aires'), ('America/Argentina/Catamarca', 'America/Argentina/Catamarca'), ('America/Argentina/ComodRivadavia', 'America/Argentina/ComodRivadavia'), ('America/Argentina/Cordoba', 'America/Argentina/Cordoba'), ('America/Argentina/Jujuy', 'America/Argentina/Jujuy'), ('America/Argentina/La_Rioja', 'America/Argentina/La_Rioja'), ('America/Argentina/Mendoza', 'America/Argentina/Mendoza'), ('America/Argentina/Rio_Gallegos', 'America/Argentina/Rio_Gallegos'), ('America/Argentina/Salta', 'America/Argentina/Salta'), ('America/Argentina/San_Juan', 'America/Argentina/San_Juan'), ('America/Argentina/San_Luis', 'America/Argentina/San_Luis'), ('America/Argentina/Tucuman', 'America/Argentina/Tucuman'), ('America/Argentina/Ushuaia', 'America/Argentina/Ushuaia'), ('America/Aruba', 'America/Aruba'), ('America/Asuncion', 'America/Asuncion'), ('America/Atikokan', 'America/Atikokan'), ('America/Atka', 'America/Atka'), ('America/Bahia', 'America/Bahia'), ('America/Bahia_Banderas', 'America/Bahia_Banderas'), ('America/Barbados', 'America/Barbados'), ('America/Belem', 'America/Belem'), ('America/Belize', 'America/Belize'), ('America/Blanc-Sablon', 'America/Blanc-Sablon'), ('America/Boa_Vista', 'America/Boa_Vista'), ('America/Bogota', 'America/Bogota'), ('America/Boise', 'America/Boise'), ('America/Buenos_Aires', 'America/Buenos_Aires'), ('America/Cambridge_Bay', 'America/Cambridge_Bay'), ('America/Campo_Grande', 'America/Campo_Grande'), ('America/Cancun', 'America/Cancun'), ('America/Caracas', 'America/Caracas'), ('America/Catamarca', 'America/Catamarca'), ('America/Cayenne', 'America/Cayenne'), ('America/Cayman', 'America/Cayman'), ('America/Chicago', 'America/Chicago'), ('America/Chihuahua', 'America/Chihuahua'), ('America/Coral_Harbour', 'America/Coral_Harbour'), ('America/Cordoba', 'America/Cordoba'), ('America/Costa_Rica', 'America/Costa_Rica'), ('America/Creston', 'America/Creston'), ('America/Cuiaba', 'America/Cuiaba'), ('America/Curacao', 'America/Curacao'), ('America/Danmarkshavn', 'America/Danmarkshavn'), ('America/Dawson', 'America/Dawson'), ('America/Dawson_Creek', 'America/Dawson_Creek'), ('America/Denver', 'America/Denver'), ('America/Detroit', 'America/Detroit'), ('America/Dominica', 'America/Dominica'), ('America/Edmonton', 'America/Edmonton'), ('America/Eirunepe', 'America/Eirunepe'), ('America/El_Salvador', 'America/El_Salvador'), ('America/Ensenada', 'America/Ensenada'), ('America/Fort_Wayne', 'America/Fort_Wayne'), ('America/Fortaleza', 'America/Fortaleza'), ('America/Glace_Bay', 'America/Glace_Bay'), ('America/Godthab', 'America/Godthab'), ('America/Goose_Bay', 'America/Goose_Bay'), ('America/Grand_Turk', 'America/Grand_Turk'), ('America/Grenada', 'America/Grenada'), ('America/Guadeloupe', 'America/Guadeloupe'), ('America/Guatemala', 'America/Guatemala'), ('America/Guayaquil', 'America/Guayaquil'), ('America/Guyana', 'America/Guyana'), ('America/Halifax', 'America/Halifax'), ('America/Havana', 'America/Havana'), ('America/Hermosillo', 'America/Hermosillo'), ('America/Indiana/Indianapolis', 'America/Indiana/Indianapolis'), ('America/Indiana/Knox', 'America/Indiana/Knox'), ('America/Indiana/Marengo', 'America/Indiana/Marengo'), ('America/Indiana/Petersburg', 'America/Indiana/Petersburg'), ('America/Indiana/Tell_City', 'America/Indiana/Tell_City'), ('America/Indiana/Vevay', 'America/Indiana/Vevay'), ('America/Indiana/Vincennes', 'America/Indiana/Vincennes'), ('America/Indiana/Winamac', 'America/Indiana/Winamac'), ('America/Indianapolis', 'America/Indianapolis'), ('America/Inuvik', 'America/Inuvik'), ('America/Iqaluit', 'America/Iqaluit'), ('America/Jamaica', 'America/Jamaica'), ('America/Jujuy', 'America/Jujuy'), ('America/Juneau', 'America/Juneau'), ('America/Kentucky/Louisville', 'America/Kentucky/Louisville'), ('America/Kentucky/Monticello', 'America/Kentucky/Monticello'), ('America/Knox_IN', 'America/Knox_IN'), ('America/Kralendijk', 'America/Kralendijk'), ('America/La_Paz', 'America/La_Paz'), ('America/Lima', 'America/Lima'), ('America/Los_Angeles', 'America/Los_Angeles'), ('America/Louisville', 'America/Louisville'), ('America/Lower_Princes', 'America/Lower_Princes'), ('America/Maceio', 'America/Maceio'), ('America/Managua', 'America/Managua'), ('America/Manaus', 'America/Manaus'), ('America/Marigot', 'America/Marigot'), ('America/Martinique', 'America/Martinique'), ('America/Matamoros', 'America/Matamoros'), ('America/Mazatlan', 'America/Mazatlan'), ('America/Mendoza', 'America/Mendoza'), ('America/Menominee', 'America/Menominee'), ('America/Merida', 'America/Merida'), ('America/Metlakatla', 'America/Metlakatla'), ('America/Mexico_City', 'America/Mexico_City'), ('America/Miquelon', 'America/Miquelon'), ('America/Moncton', 'America/Moncton'), ('America/Monterrey', 'America/Monterrey'), ('America/Montevideo', 'America/Montevideo'), ('America/Montreal', 'America/Montreal'), ('America/Montserrat', 'America/Montserrat'), ('America/Nassau', 'America/Nassau'), ('America/New_York', 'America/New_York'), ('America/Nipigon', 'America/Nipigon'), ('America/Nome', 'America/Nome'), ('America/Noronha', 'America/Noronha'), ('America/North_Dakota/Beulah', 'America/North_Dakota/Beulah'), ('America/North_Dakota/Center', 'America/North_Dakota/Center'), ('America/North_Dakota/New_Salem', 'America/North_Dakota/New_Salem'), ('America/Ojinaga', 'America/Ojinaga'), ('America/Panama', 'America/Panama'), ('America/Pangnirtung', 'America/Pangnirtung'), ('America/Paramaribo', 'America/Paramaribo'), ('America/Phoenix', 'America/Phoenix'), ('America/Port-au-Prince', 'America/Port-au-Prince'), ('America/Port_of_Spain', 'America/Port_of_Spain'), ('America/Porto_Acre', 'America/Porto_Acre'), ('America/Porto_Velho', 'America/Porto_Velho'), ('America/Puerto_Rico', 'America/Puerto_Rico'), ('America/Rainy_River', 'America/Rainy_River'), ('America/Rankin_Inlet', 'America/Rankin_Inlet'), ('America/Recife', 'America/Recife'), ('America/Regina', 'America/Regina'), ('America/Resolute', 'America/Resolute'), ('America/Rio_Branco', 'America/Rio_Branco'), ('America/Rosario', 'America/Rosario'), ('America/Santa_Isabel', 'America/Santa_Isabel'), ('America/Santarem', 'America/Santarem'), ('America/Santiago', 'America/Santiago'), ('America/Santo_Domingo', 'America/Santo_Domingo'), ('America/Sao_Paulo', 'America/Sao_Paulo'), ('America/Scoresbysund', 'America/Scoresbysund'), ('America/Shiprock', 'America/Shiprock'), ('America/Sitka', 'America/Sitka'), ('America/St_Barthelemy', 'America/St_Barthelemy'), ('America/St_Johns', 'America/St_Johns'), ('America/St_Kitts', 'America/St_Kitts'), ('America/St_Lucia', 'America/St_Lucia'), ('America/St_Thomas', 'America/St_Thomas'), ('America/St_Vincent', 'America/St_Vincent'), ('America/Swift_Current', 'America/Swift_Current'), ('America/Tegucigalpa', 'America/Tegucigalpa'), ('America/Thule', 'America/Thule'), ('America/Thunder_Bay', 'America/Thunder_Bay'), ('America/Tijuana', 'America/Tijuana'), ('America/Toronto', 'America/Toronto'), ('America/Tortola', 'America/Tortola'), ('America/Vancouver', 'America/Vancouver'), ('America/Virgin', 'America/Virgin'), ('America/Whitehorse', 'America/Whitehorse'), ('America/Winnipeg', 'America/Winnipeg'), ('America/Yakutat', 'America/Yakutat'), ('America/Yellowknife', 'America/Yellowknife'), ('Antarctica/Casey', 'Antarctica/Casey'), ('Antarctica/Davis', 'Antarctica/Davis'), ('Antarctica/DumontDUrville', 'Antarctica/DumontDUrville'), ('Antarctica/Macquarie', 'Antarctica/Macquarie'), ('Antarctica/Mawson', 'Antarctica/Mawson'), ('Antarctica/McMurdo', 'Antarctica/McMurdo'), ('Antarctica/Palmer', 'Antarctica/Palmer'), ('Antarctica/Rothera', 'Antarctica/Rothera'), ('Antarctica/South_Pole', 'Antarctica/South_Pole'), ('Antarctica/Syowa', 'Antarctica/Syowa'), ('Antarctica/Troll', 'Antarctica/Troll'), ('Antarctica/Vostok', 'Antarctica/Vostok'), ('Arctic/Longyearbyen', 'Arctic/Longyearbyen'), ('Asia/Aden', 'Asia/Aden'), ('Asia/Almaty', 'Asia/Almaty'), ('Asia/Amman', 'Asia/Amman'), ('Asia/Anadyr', 'Asia/Anadyr'), ('Asia/Aqtau', 'Asia/Aqtau'), ('Asia/Aqtobe', 'Asia/Aqtobe'), ('Asia/Ashgabat', 'Asia/Ashgabat'), ('Asia/Ashkhabad', 'Asia/Ashkhabad'), ('Asia/Baghdad', 'Asia/Baghdad'), ('Asia/Bahrain', 'Asia/Bahrain'), ('Asia/Baku', 'Asia/Baku'), ('Asia/Bangkok', 'Asia/Bangkok'), ('Asia/Beirut', 'Asia/Beirut'), ('Asia/Bishkek', 'Asia/Bishkek'), ('Asia/Brunei', 'Asia/Brunei'), ('Asia/Calcutta', 'Asia/Calcutta'), ('Asia/Chita', 'Asia/Chita'), ('Asia/Choibalsan', 'Asia/Choibalsan'), ('Asia/Chongqing', 'Asia/Chongqing'), ('Asia/Chungking', 'Asia/Chungking'), ('Asia/Colombo', 'Asia/Colombo'), ('Asia/Dacca', 'Asia/Dacca'), ('Asia/Damascus', 'Asia/Damascus'), ('Asia/Dhaka', 'Asia/Dhaka'), ('Asia/Dili', 'Asia/Dili'), ('Asia/Dubai', 'Asia/Dubai'), ('Asia/Dushanbe', 'Asia/Dushanbe'), ('Asia/Gaza', 'Asia/Gaza'), ('Asia/Harbin', 'Asia/Harbin'), ('Asia/Hebron', 'Asia/Hebron'), ('Asia/Ho_Chi_Minh', 'Asia/Ho_Chi_Minh'), ('Asia/Hong_Kong', 'Asia/Hong_Kong'), ('Asia/Hovd', 'Asia/Hovd'), ('Asia/Irkutsk', 'Asia/Irkutsk'), ('Asia/Istanbul', 'Asia/Istanbul'), ('Asia/Jakarta', 'Asia/Jakarta'), ('Asia/Jayapura', 'Asia/Jayapura'), ('Asia/Jerusalem', 'Asia/Jerusalem'), ('Asia/Kabul', 'Asia/Kabul'), ('Asia/Kamchatka', 'Asia/Kamchatka'), ('Asia/Karachi', 'Asia/Karachi'), ('Asia/Kashgar', 'Asia/Kashgar'), ('Asia/Kathmandu', 'Asia/Kathmandu'), ('Asia/Katmandu', 'Asia/Katmandu'), ('Asia/Khandyga', 'Asia/Khandyga'), ('Asia/Kolkata', 'Asia/Kolkata'), ('Asia/Krasnoyarsk', 'Asia/Krasnoyarsk'), ('Asia/Kuala_Lumpur', 'Asia/Kuala_Lumpur'), ('Asia/Kuching', 'Asia/Kuching'), ('Asia/Kuwait', 'Asia/Kuwait'), ('Asia/Macao', 'Asia/Macao'), ('Asia/Macau', 'Asia/Macau'), ('Asia/Magadan', 'Asia/Magadan'), ('Asia/Makassar', 'Asia/Makassar'), ('Asia/Manila', 'Asia/Manila'), ('Asia/Muscat', 'Asia/Muscat'), ('Asia/Nicosia', 'Asia/Nicosia'), ('Asia/Novokuznetsk', 'Asia/Novokuznetsk'), ('Asia/Novosibirsk', 'Asia/Novosibirsk'), ('Asia/Omsk', 'Asia/Omsk'), ('Asia/Oral', 'Asia/Oral'), ('Asia/Phnom_Penh', 'Asia/Phnom_Penh'), ('Asia/Pontianak', 'Asia/Pontianak'), ('Asia/Pyongyang', 'Asia/Pyongyang'), ('Asia/Qatar', 'Asia/Qatar'), ('Asia/Qyzylorda', 'Asia/Qyzylorda'), ('Asia/Rangoon', 'Asia/Rangoon'), ('Asia/Riyadh', 'Asia/Riyadh'), ('Asia/Saigon', 'Asia/Saigon'), ('Asia/Sakhalin', 'Asia/Sakhalin'), ('Asia/Samarkand', 'Asia/Samarkand'), ('Asia/Seoul', 'Asia/Seoul'), ('Asia/Shanghai', 'Asia/Shanghai'), ('Asia/Singapore', 'Asia/Singapore'), ('Asia/Srednekolymsk', 'Asia/Srednekolymsk'), ('Asia/Taipei', 'Asia/Taipei'), ('Asia/Tashkent', 'Asia/Tashkent'), ('Asia/Tbilisi', 'Asia/Tbilisi'), ('Asia/Tehran', 'Asia/Tehran'), ('Asia/Tel_Aviv', 'Asia/Tel_Aviv'), ('Asia/Thimbu', 'Asia/Thimbu'), ('Asia/Thimphu', 'Asia/Thimphu'), ('Asia/Tokyo', 'Asia/Tokyo'), ('Asia/Ujung_Pandang', 'Asia/Ujung_Pandang'), ('Asia/Ulaanbaatar', 'Asia/Ulaanbaatar'), ('Asia/Ulan_Bator', 'Asia/Ulan_Bator'), ('Asia/Urumqi', 'Asia/Urumqi'), ('Asia/Ust-Nera', 'Asia/Ust-Nera'), ('Asia/Vientiane', 'Asia/Vientiane'), ('Asia/Vladivostok', 'Asia/Vladivostok'), ('Asia/Yakutsk', 'Asia/Yakutsk'), ('Asia/Yekaterinburg', 'Asia/Yekaterinburg'), ('Asia/Yerevan', 'Asia/Yerevan'), ('Atlantic/Azores', 'Atlantic/Azores'), ('Atlantic/Bermuda', 'Atlantic/Bermuda'), ('Atlantic/Canary', 'Atlantic/Canary'), ('Atlantic/Cape_Verde', 'Atlantic/Cape_Verde'), ('Atlantic/Faeroe', 'Atlantic/Faeroe'), ('Atlantic/Faroe', 'Atlantic/Faroe'), ('Atlantic/Jan_Mayen', 'Atlantic/Jan_Mayen'), ('Atlantic/Madeira', 'Atlantic/Madeira'), ('Atlantic/Reykjavik', 'Atlantic/Reykjavik'), ('Atlantic/South_Georgia', 'Atlantic/South_Georgia'), ('Atlantic/St_Helena', 'Atlantic/St_Helena'), ('Atlantic/Stanley', 'Atlantic/Stanley'), ('Australia/ACT', 'Australia/ACT'), ('Australia/Adelaide', 'Australia/Adelaide'), ('Australia/Brisbane', 'Australia/Brisbane'), ('Australia/Broken_Hill', 'Australia/Broken_Hill'), ('Australia/Canberra', 'Australia/Canberra'), ('Australia/Currie', 'Australia/Currie'), ('Australia/Darwin', 'Australia/Darwin'), ('Australia/Eucla', 'Australia/Eucla'), ('Australia/Hobart', 'Australia/Hobart'), ('Australia/LHI', 'Australia/LHI'), ('Australia/Lindeman', 'Australia/Lindeman'), ('Australia/Lord_Howe', 'Australia/Lord_Howe'), ('Australia/Melbourne', 'Australia/Melbourne'), ('Australia/NSW', 'Australia/NSW'), ('Australia/North', 'Australia/North'), ('Australia/Perth', 'Australia/Perth'), ('Australia/Queensland', 'Australia/Queensland'), ('Australia/South', 'Australia/South'), ('Australia/Sydney', 'Australia/Sydney'), ('Australia/Tasmania', 'Australia/Tasmania'), ('Australia/Victoria', 'Australia/Victoria'), ('Australia/West', 'Australia/West'), ('Australia/Yancowinna', 'Australia/Yancowinna'), ('Brazil/Acre', 'Brazil/Acre'), ('Brazil/DeNoronha', 'Brazil/DeNoronha'), ('Brazil/East', 'Brazil/East'), ('Brazil/West', 'Brazil/West'), ('CET', 'CET'), ('CST6CDT', 'CST6CDT'), ('Canada/Atlantic', 'Canada/Atlantic'), ('Canada/Central', 'Canada/Central'), ('Canada/East-Saskatchewan', 'Canada/East-Saskatchewan'), ('Canada/Eastern', 'Canada/Eastern'), ('Canada/Mountain', 'Canada/Mountain'), ('Canada/Newfoundland', 'Canada/Newfoundland'), ('Canada/Pacific', 'Canada/Pacific'), ('Canada/Saskatchewan', 'Canada/Saskatchewan'), ('Canada/Yukon', 'Canada/Yukon'), ('Chile/Continental', 'Chile/Continental'), ('Chile/EasterIsland', 'Chile/EasterIsland'), ('Cuba', 'Cuba'), ('EET', 'EET'), ('EST', 'EST'), ('EST5EDT', 'EST5EDT'), ('Egypt', 'Egypt'), ('Eire', 'Eire'), ('Etc/GMT', 'Etc/GMT'), ('Etc/GMT+0', 'Etc/GMT+0'), ('Etc/GMT+1', 'Etc/GMT+1'), ('Etc/GMT+10', 'Etc/GMT+10'), ('Etc/GMT+11', 'Etc/GMT+11'), ('Etc/GMT+12', 'Etc/GMT+12'), ('Etc/GMT+2', 'Etc/GMT+2'), ('Etc/GMT+3', 'Etc/GMT+3'), ('Etc/GMT+4', 'Etc/GMT+4'), ('Etc/GMT+5', 'Etc/GMT+5'), ('Etc/GMT+6', 'Etc/GMT+6'), ('Etc/GMT+7', 'Etc/GMT+7'), ('Etc/GMT+8', 'Etc/GMT+8'), ('Etc/GMT+9', 'Etc/GMT+9'), ('Etc/GMT-0', 'Etc/GMT-0'), ('Etc/GMT-1', 'Etc/GMT-1'), ('Etc/GMT-10', 'Etc/GMT-10'), ('Etc/GMT-11', 'Etc/GMT-11'), ('Etc/GMT-12', 'Etc/GMT-12'), ('Etc/GMT-13', 'Etc/GMT-13'), ('Etc/GMT-14', 'Etc/GMT-14'), ('Etc/GMT-2', 'Etc/GMT-2'), ('Etc/GMT-3', 'Etc/GMT-3'), ('Etc/GMT-4', 'Etc/GMT-4'), ('Etc/GMT-5', 'Etc/GMT-5'), ('Etc/GMT-6', 'Etc/GMT-6'), ('Etc/GMT-7', 'Etc/GMT-7'), ('Etc/GMT-8', 'Etc/GMT-8'), ('Etc/GMT-9', 'Etc/GMT-9'), ('Etc/GMT0', 'Etc/GMT0'), ('Etc/Greenwich', 'Etc/Greenwich'), ('Etc/UCT', 'Etc/UCT'), ('Etc/UTC', 'Etc/UTC'), ('Etc/Universal', 'Etc/Universal'), ('Etc/Zulu', 'Etc/Zulu'), ('Europe/Amsterdam', 'Europe/Amsterdam'), ('Europe/Andorra', 'Europe/Andorra'), ('Europe/Athens', 'Europe/Athens'), ('Europe/Belfast', 'Europe/Belfast'), ('Europe/Belgrade', 'Europe/Belgrade'), ('Europe/Berlin', 'Europe/Berlin'), ('Europe/Bratislava', 'Europe/Bratislava'), ('Europe/Brussels', 'Europe/Brussels'), ('Europe/Bucharest', 'Europe/Bucharest'), ('Europe/Budapest', 'Europe/Budapest'), ('Europe/Busingen', 'Europe/Busingen'), ('Europe/Chisinau', 'Europe/Chisinau'), ('Europe/Copenhagen', 'Europe/Copenhagen'), ('Europe/Dublin', 'Europe/Dublin'), ('Europe/Gibraltar', 'Europe/Gibraltar'), ('Europe/Guernsey', 'Europe/Guernsey'), ('Europe/Helsinki', 'Europe/Helsinki'), ('Europe/Isle_of_Man', 'Europe/Isle_of_Man'), ('Europe/Istanbul', 'Europe/Istanbul'), ('Europe/Jersey', 'Europe/Jersey'), ('Europe/Kaliningrad', 'Europe/Kaliningrad'), ('Europe/Kiev', 'Europe/Kiev'), ('Europe/Lisbon', 'Europe/Lisbon'), ('Europe/Ljubljana', 'Europe/Ljubljana'), ('Europe/London', 'Europe/London'), ('Europe/Luxembourg', 'Europe/Luxembourg'), ('Europe/Madrid', 'Europe/Madrid'), ('Europe/Malta', 'Europe/Malta'), ('Europe/Mariehamn', 'Europe/Mariehamn'), ('Europe/Minsk', 'Europe/Minsk'), ('Europe/Monaco', 'Europe/Monaco'), ('Europe/Moscow', 'Europe/Moscow'), ('Europe/Nicosia', 'Europe/Nicosia'), ('Europe/Oslo', 'Europe/Oslo'), ('Europe/Paris', 'Europe/Paris'), ('Europe/Podgorica', 'Europe/Podgorica'), ('Europe/Prague', 'Europe/Prague'), ('Europe/Riga', 'Europe/Riga'), ('Europe/Rome', 'Europe/Rome'), ('Europe/Samara', 'Europe/Samara'), ('Europe/San_Marino', 'Europe/San_Marino'), ('Europe/Sarajevo', 'Europe/Sarajevo'), ('Europe/Simferopol', 'Europe/Simferopol'), ('Europe/Skopje', 'Europe/Skopje'), ('Europe/Sofia', 'Europe/Sofia'), ('Europe/Stockholm', 'Europe/Stockholm'), ('Europe/Tallinn', 'Europe/Tallinn'), ('Europe/Tirane', 'Europe/Tirane'), ('Europe/Tiraspol', 'Europe/Tiraspol'), ('Europe/Uzhgorod', 'Europe/Uzhgorod'), ('Europe/Vaduz', 'Europe/Vaduz'), ('Europe/Vatican', 'Europe/Vatican'), ('Europe/Vienna', 'Europe/Vienna'), ('Europe/Vilnius', 'Europe/Vilnius'), ('Europe/Volgograd', 'Europe/Volgograd'), ('Europe/Warsaw', 'Europe/Warsaw'), ('Europe/Zagreb', 'Europe/Zagreb'), ('Europe/Zaporozhye', 'Europe/Zaporozhye'), ('Europe/Zurich', 'Europe/Zurich'), ('GB', 'GB'), ('GB-Eire', 'GB-Eire'), ('GMT', 'GMT'), ('GMT+0', 'GMT+0'), ('GMT-0', 'GMT-0'), ('GMT0', 'GMT0'), ('Greenwich', 'Greenwich'), ('HST', 'HST'), ('Hongkong', 'Hongkong'), ('Iceland', 'Iceland'), ('Indian/Antananarivo', 'Indian/Antananarivo'), ('Indian/Chagos', 'Indian/Chagos'), ('Indian/Christmas', 'Indian/Christmas'), ('Indian/Cocos', 'Indian/Cocos'), ('Indian/Comoro', 'Indian/Comoro'), ('Indian/Kerguelen', 'Indian/Kerguelen'), ('Indian/Mahe', 'Indian/Mahe'), ('Indian/Maldives', 'Indian/Maldives'), ('Indian/Mauritius', 'Indian/Mauritius'), ('Indian/Mayotte', 'Indian/Mayotte'), ('Indian/Reunion', 'Indian/Reunion'), ('Iran', 'Iran'), ('Israel', 'Israel'), ('Jamaica', 'Jamaica'), ('Japan', 'Japan'), ('Kwajalein', 'Kwajalein'), ('Libya', 'Libya'), ('MET', 'MET'), ('MST', 'MST'), ('MST7MDT', 'MST7MDT'), ('Mexico/BajaNorte', 'Mexico/BajaNorte'), ('Mexico/BajaSur', 'Mexico/BajaSur'), ('Mexico/General', 'Mexico/General'), ('NZ', 'NZ'), ('NZ-CHAT', 'NZ-CHAT'), ('Navajo', 'Navajo'), ('PRC', 'PRC'), ('PST8PDT', 'PST8PDT'), ('Pacific/Apia', 'Pacific/Apia'), ('Pacific/Auckland', 'Pacific/Auckland'), ('Pacific/Bougainville', 'Pacific/Bougainville'), ('Pacific/Chatham', 'Pacific/Chatham'), ('Pacific/Chuuk', 'Pacific/Chuuk'), ('Pacific/Easter', 'Pacific/Easter'), ('Pacific/Efate', 'Pacific/Efate'), ('Pacific/Enderbury', 'Pacific/Enderbury'), ('Pacific/Fakaofo', 'Pacific/Fakaofo'), ('Pacific/Fiji', 'Pacific/Fiji'), ('Pacific/Funafuti', 'Pacific/Funafuti'), ('Pacific/Galapagos', 'Pacific/Galapagos'), ('Pacific/Gambier', 'Pacific/Gambier'), ('Pacific/Guadalcanal', 'Pacific/Guadalcanal'), ('Pacific/Guam', 'Pacific/Guam'), ('Pacific/Honolulu', 'Pacific/Honolulu'), ('Pacific/Johnston', 'Pacific/Johnston'), ('Pacific/Kiritimati', 'Pacific/Kiritimati'), ('Pacific/Kosrae', 'Pacific/Kosrae'), ('Pacific/Kwajalein', 'Pacific/Kwajalein'), ('Pacific/Majuro', 'Pacific/Majuro'), ('Pacific/Marquesas', 'Pacific/Marquesas'), ('Pacific/Midway', 'Pacific/Midway'), ('Pacific/Nauru', 'Pacific/Nauru'), ('Pacific/Niue', 'Pacific/Niue'), ('Pacific/Norfolk', 'Pacific/Norfolk'), ('Pacific/Noumea', 'Pacific/Noumea'), ('Pacific/Pago_Pago', 'Pacific/Pago_Pago'), ('Pacific/Palau', 'Pacific/Palau'), ('Pacific/Pitcairn', 'Pacific/Pitcairn'), ('Pacific/Pohnpei', 'Pacific/Pohnpei'), ('Pacific/Ponape', 'Pacific/Ponape'), ('Pacific/Port_Moresby', 'Pacific/Port_Moresby'), ('Pacific/Rarotonga', 'Pacific/Rarotonga'), ('Pacific/Saipan', 'Pacific/Saipan'), ('Pacific/Samoa', 'Pacific/Samoa'), ('Pacific/Tahiti', 'Pacific/Tahiti'), ('Pacific/Tarawa', 'Pacific/Tarawa'), ('Pacific/Tongatapu', 'Pacific/Tongatapu'), ('Pacific/Truk', 'Pacific/Truk'), ('Pacific/Wake', 'Pacific/Wake'), ('Pacific/Wallis', 'Pacific/Wallis'), ('Pacific/Yap', 'Pacific/Yap'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('ROC', 'ROC'), ('ROK', 'ROK'), ('Singapore', 'Singapore'), ('Turkey', 'Turkey'), ('UCT', 'UCT'), ('US/Alaska', 'US/Alaska'), ('US/Aleutian', 'US/Aleutian'), ('US/Arizona', 'US/Arizona'), ('US/Central', 'US/Central'), ('US/East-Indiana', 'US/East-Indiana'), ('US/Eastern', 'US/Eastern'), ('US/Hawaii', 'US/Hawaii'), ('US/Indiana-Starke', 'US/Indiana-Starke'), ('US/Michigan', 'US/Michigan'), ('US/Mountain', 'US/Mountain'), ('US/Pacific', 'US/Pacific'), ('US/Pacific-New', 'US/Pacific-New'), ('US/Samoa', 'US/Samoa'), ('UTC', 'UTC'), ('Universal', 'Universal'), ('W-SU', 'W-SU'), ('WET', 'WET'), ('Zulu', 'Zulu')], default=b'', max_length=100, verbose_name='Timezone'),
-        ),
-    ]
diff --git a/geonode/people/migrations/24_initial.py b/geonode/people/migrations/24_initial.py
deleted file mode 100644
index 7774ded1c..000000000
--- a/geonode/people/migrations/24_initial.py
+++ /dev/null
@@ -1,56 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import django.utils.timezone
-import geonode.people.models
-import django.core.validators
-import taggit.managers
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('taggit', '0002_auto_20150616_2121'),
-        ('auth', '0006_require_contenttypes_0002'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Profile',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('password', models.CharField(max_length=128, verbose_name='password')),
-                ('last_login', models.DateTimeField(null=True, verbose_name='last login', blank=True)),
-                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
-                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, max_length=30, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.', 'invalid')], help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', unique=True, verbose_name='username')),
-                ('first_name', models.CharField(max_length=30, verbose_name='first name', blank=True)),
-                ('last_name', models.CharField(max_length=30, verbose_name='last name', blank=True)),
-                ('email', models.EmailField(max_length=254, verbose_name='email address', blank=True)),
-                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
-                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
-                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
-                ('organization', models.CharField(help_text='name of the responsible organization', max_length=255, null=True, verbose_name='Organization Name', blank=True)),
-                ('profile', models.TextField(help_text='introduce yourself', null=True, verbose_name='Profile', blank=True)),
-                ('position', models.CharField(help_text='role or position of the responsible person', max_length=255, null=True, verbose_name='Position Name', blank=True)),
-                ('voice', models.CharField(help_text='telephone number by which individuals can speak to the responsible organization or individual', max_length=255, null=True, verbose_name='Voice', blank=True)),
-                ('fax', models.CharField(help_text='telephone number of a facsimile machine for the responsible organization or individual', max_length=255, null=True, verbose_name='Facsimile', blank=True)),
-                ('delivery', models.CharField(help_text='physical and email address at which the organization or individual may be contacted', max_length=255, null=True, verbose_name='Delivery Point', blank=True)),
-                ('city', models.CharField(help_text='city of the location', max_length=255, null=True, verbose_name='City', blank=True)),
-                ('area', models.CharField(help_text='state, province of the location', max_length=255, null=True, verbose_name='Administrative Area', blank=True)),
-                ('zipcode', models.CharField(help_text='ZIP or other postal code', max_length=255, null=True, verbose_name='Postal Code', blank=True)),
-                ('country', models.CharField(blank=True, max_length=3, null=True, help_text='country of the physical address', choices=[(b'AFG', b'Afghanistan'), (b'ALA', b'Aland Islands'), (b'ALB', b'Albania'), (b'DZA', b'Algeria'), (b'ASM', b'American Samoa'), (b'AND', b'Andorra'), (b'AGO', b'Angola'), (b'AIA', b'Anguilla'), (b'ATG', b'Antigua and Barbuda'), (b'ARG', b'Argentina'), (b'ARM', b'Armenia'), (b'ABW', b'Aruba'), (b'AUS', b'Australia'), (b'AUT', b'Austria'), (b'AZE', b'Azerbaijan'), (b'BHS', b'Bahamas'), (b'BHR', b'Bahrain'), (b'BGD', b'Bangladesh'), (b'BRB', b'Barbados'), (b'BLR', b'Belarus'), (b'BEL', b'Belgium'), (b'BLZ', b'Belize'), (b'BEN', b'Benin'), (b'BMU', b'Bermuda'), (b'BTN', b'Bhutan'), (b'BOL', b'Bolivia'), (b'BIH', b'Bosnia and Herzegovina'), (b'BWA', b'Botswana'), (b'BRA', b'Brazil'), (b'VGB', b'British Virgin Islands'), (b'BRN', b'Brunei Darussalam'), (b'BGR', b'Bulgaria'), (b'BFA', b'Burkina Faso'), (b'BDI', b'Burundi'), (b'KHM', b'Cambodia'), (b'CMR', b'Cameroon'), (b'CAN', b'Canada'), (b'CPV', b'Cape Verde'), (b'CYM', b'Cayman Islands'), (b'CAF', b'Central African Republic'), (b'TCD', b'Chad'), (b'CIL', b'Channel Islands'), (b'CHL', b'Chile'), (b'CHN', b'China'), (b'HKG', b'China - Hong Kong'), (b'MAC', b'China - Macao'), (b'COL', b'Colombia'), (b'COM', b'Comoros'), (b'COG', b'Congo'), (b'COK', b'Cook Islands'), (b'CRI', b'Costa Rica'), (b'CIV', b"Cote d'Ivoire"), (b'HRV', b'Croatia'), (b'CUB', b'Cuba'), (b'CYP', b'Cyprus'), (b'CZE', b'Czech Republic'), (b'PRK', b"Democratic People's Republic of Korea"), (b'COD', b'Democratic Republic of the Congo'), (b'DNK', b'Denmark'), (b'DJI', b'Djibouti'), (b'DMA', b'Dominica'), (b'DOM', b'Dominican Republic'), (b'ECU', b'Ecuador'), (b'EGY', b'Egypt'), (b'SLV', b'El Salvador'), (b'GNQ', b'Equatorial Guinea'), (b'ERI', b'Eritrea'), (b'EST', b'Estonia'), (b'ETH', b'Ethiopia'), (b'FRO', b'Faeroe Islands'), (b'FLK', b'Falkland Islands (Malvinas)'), (b'FJI', b'Fiji'), (b'FIN', b'Finland'), (b'FRA', b'France'), (b'GUF', b'French Guiana'), (b'PYF', b'French Polynesia'), (b'GAB', b'Gabon'), (b'GMB', b'Gambia'), (b'GEO', b'Georgia'), (b'DEU', b'Germany'), (b'GHA', b'Ghana'), (b'GIB', b'Gibraltar'), (b'GRC', b'Greece'), (b'GRL', b'Greenland'), (b'GRD', b'Grenada'), (b'GLP', b'Guadeloupe'), (b'GUM', b'Guam'), (b'GTM', b'Guatemala'), (b'GGY', b'Guernsey'), (b'GIN', b'Guinea'), (b'GNB', b'Guinea-Bissau'), (b'GUY', b'Guyana'), (b'HTI', b'Haiti'), (b'VAT', b'Holy See (Vatican City)'), (b'HND', b'Honduras'), (b'HUN', b'Hungary'), (b'ISL', b'Iceland'), (b'IND', b'India'), (b'IDN', b'Indonesia'), (b'IRN', b'Iran'), (b'IRQ', b'Iraq'), (b'IRL', b'Ireland'), (b'IMN', b'Isle of Man'), (b'ISR', b'Israel'), (b'ITA', b'Italy'), (b'JAM', b'Jamaica'), (b'JPN', b'Japan'), (b'JEY', b'Jersey'), (b'JOR', b'Jordan'), (b'KAZ', b'Kazakhstan'), (b'KEN', b'Kenya'), (b'KIR', b'Kiribati'), (b'KWT', b'Kuwait'), (b'KGZ', b'Kyrgyzstan'), (b'LAO', b"Lao People's Democratic Republic"), (b'LVA', b'Latvia'), (b'LBN', b'Lebanon'), (b'LSO', b'Lesotho'), (b'LBR', b'Liberia'), (b'LBY', b'Libyan Arab Jamahiriya'), (b'LIE', b'Liechtenstein'), (b'LTU', b'Lithuania'), (b'LUX', b'Luxembourg'), (b'MKD', b'Macedonia'), (b'MDG', b'Madagascar'), (b'MWI', b'Malawi'), (b'MYS', b'Malaysia'), (b'MDV', b'Maldives'), (b'MLI', b'Mali'), (b'MLT', b'Malta'), (b'MHL', b'Marshall Islands'), (b'MTQ', b'Martinique'), (b'MRT', b'Mauritania'), (b'MUS', b'Mauritius'), (b'MYT', b'Mayotte'), (b'MEX', b'Mexico'), (b'FSM', b'Micronesia, Federated States of'), (b'MCO', b'Monaco'), (b'MNG', b'Mongolia'), (b'MNE', b'Montenegro'), (b'MSR', b'Montserrat'), (b'MAR', b'Morocco'), (b'MOZ', b'Mozambique'), (b'MMR', b'Myanmar'), (b'NAM', b'Namibia'), (b'NRU', b'Nauru'), (b'NPL', b'Nepal'), (b'NLD', b'Netherlands'), (b'ANT', b'Netherlands Antilles'), (b'NCL', b'New Caledonia'), (b'NZL', b'New Zealand'), (b'NIC', b'Nicaragua'), (b'NER', b'Niger'), (b'NGA', b'Nigeria'), (b'NIU', b'Niue'), (b'NFK', b'Norfolk Island'), (b'MNP', b'Northern Mariana Islands'), (b'NOR', b'Norway'), (b'PSE', b'Occupied Palestinian Territory'), (b'OMN', b'Oman'), (b'PAK', b'Pakistan'), (b'PLW', b'Palau'), (b'PAN', b'Panama'), (b'PNG', b'Papua New Guinea'), (b'PRY', b'Paraguay'), (b'PER', b'Peru'), (b'PHL', b'Philippines'), (b'PCN', b'Pitcairn'), (b'POL', b'Poland'), (b'PRT', b'Portugal'), (b'PRI', b'Puerto Rico'), (b'QAT', b'Qatar'), (b'KOR', b'Republic of Korea'), (b'MDA', b'Republic of Moldova'), (b'REU', b'Reunion'), (b'ROU', b'Romania'), (b'RUS', b'Russian Federation'), (b'RWA', b'Rwanda'), (b'BLM', b'Saint-Barthelemy'), (b'SHN', b'Saint Helena'), (b'KNA', b'Saint Kitts and Nevis'), (b'LCA', b'Saint Lucia'), (b'MAF', b'Saint-Martin (French part)'), (b'SPM', b'Saint Pierre and Miquelon'), (b'VCT', b'Saint Vincent and the Grenadines'), (b'WSM', b'Samoa'), (b'SMR', b'San Marino'), (b'STP', b'Sao Tome and Principe'), (b'SAU', b'Saudi Arabia'), (b'SEN', b'Senegal'), (b'SRB', b'Serbia'), (b'SYC', b'Seychelles'), (b'SLE', b'Sierra Leone'), (b'SGP', b'Singapore'), (b'SVK', b'Slovakia'), (b'SVN', b'Slovenia'), (b'SLB', b'Solomon Islands'), (b'SOM', b'Somalia'), (b'ZAF', b'South Africa'), (b'SSD', b'South Sudan'), (b'ESP', b'Spain'), (b'LKA', b'Sri Lanka'), (b'SDN', b'Sudan'), (b'SUR', b'Suriname'), (b'SJM', b'Svalbard and Jan Mayen Islands'), (b'SWZ', b'Swaziland'), (b'SWE', b'Sweden'), (b'CHE', b'Switzerland'), (b'SYR', b'Syrian Arab Republic'), (b'TJK', b'Tajikistan'), (b'THA', b'Thailand'), (b'TLS', b'Timor-Leste'), (b'TGO', b'Togo'), (b'TKL', b'Tokelau'), (b'TON', b'Tonga'), (b'TTO', b'Trinidad and Tobago'), (b'TUN', b'Tunisia'), (b'TUR', b'Turkey'), (b'TKM', b'Turkmenistan'), (b'TCA', b'Turks and Caicos Islands'), (b'TUV', b'Tuvalu'), (b'UGA', b'Uganda'), (b'UKR', b'Ukraine'), (b'ARE', b'United Arab Emirates'), (b'GBR', b'United Kingdom'), (b'TZA', b'United Republic of Tanzania'), (b'USA', b'United States of America'), (b'VIR', b'United States Virgin Islands'), (b'URY', b'Uruguay'), (b'UZB', b'Uzbekistan'), (b'VUT', b'Vanuatu'), (b'VEN', b'Venezuela (Bolivarian Republic of)'), (b'VNM', b'Viet Nam'), (b'WLF', b'Wallis and Futuna Islands'), (b'ESH', b'Western Sahara'), (b'YEM', b'Yemen'), (b'ZMB', b'Zambia'), (b'ZWE', b'Zimbabwe')])),
-                ('groups', models.ManyToManyField(related_query_name='user', related_name='user_set', to='auth.Group', blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', verbose_name='groups')),
-                ('keywords', taggit.managers.TaggableManager(to='taggit.Tag', through='taggit.TaggedItem', blank=True, help_text='commonly used word(s) or formalised word(s) or phrase(s) used to describe the subject             (space or comma-separated', verbose_name='keywords')),
-                ('user_permissions', models.ManyToManyField(related_query_name='user', related_name='user_set', to='auth.Permission', blank=True, help_text='Specific permissions for this user.', verbose_name='user permissions')),
-            ],
-            options={
-                'abstract': False,
-                'verbose_name': 'user',
-                'verbose_name_plural': 'users',
-            },
-            managers=[
-                ('objects', geonode.people.models.ProfileUserManager()),
-            ],
-        ),
-    ]
diff --git a/geonode/qgis_server/migrations/0001_initial.py b/geonode/qgis_server/migrations/0001_initial.py
deleted file mode 100644
index 1490920ec..000000000
--- a/geonode/qgis_server/migrations/0001_initial.py
+++ /dev/null
@@ -1,40 +0,0 @@
-# -*- coding: utf-8 -*-
-#########################################################################
-#
-# Copyright (C) 2016 OSGeo
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program. If not, see <http://www.gnu.org/licenses/>.
-#
-#########################################################################
-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('layers', '24_to_26'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='QGISServerLayer',
-            fields=[
-                ('layer', models.OneToOneField(primary_key=True, serialize=False, to='layers.Layer')),
-                ('base_layer_path', models.CharField(help_text=b'Location of the base layer.', max_length=100, verbose_name=b'Base Layer Path')),
-            ],
-        ),
-    ]
diff --git a/geonode/qgis_server/migrations/0002_qgisservermap.py b/geonode/qgis_server/migrations/0002_qgisservermap.py
deleted file mode 100644
index fad9f37be..000000000
--- a/geonode/qgis_server/migrations/0002_qgisservermap.py
+++ /dev/null
@@ -1,40 +0,0 @@
-# -*- coding: utf-8 -*-
-#########################################################################
-#
-# Copyright (C) 2016 OSGeo
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program. If not, see <http://www.gnu.org/licenses/>.
-#
-#########################################################################
-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('maps', '24_initial'),
-        ('qgis_server', '0001_initial'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='QGISServerMap',
-            fields=[
-                ('map', models.OneToOneField(primary_key=True, serialize=False, to='maps.Map')),
-            ],
-        ),
-    ]
diff --git a/geonode/qgis_server/migrations/0003_auto_20170727_0509.py b/geonode/qgis_server/migrations/0003_auto_20170727_0509.py
deleted file mode 100644
index 4e0bd07c1..000000000
--- a/geonode/qgis_server/migrations/0003_auto_20170727_0509.py
+++ /dev/null
@@ -1,54 +0,0 @@
-# -*- coding: utf-8 -*-
-#########################################################################
-#
-# Copyright (C) 2016 OSGeo
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program. If not, see <http://www.gnu.org/licenses/>.
-#
-#########################################################################
-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('qgis_server', '0002_qgisservermap'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='QGISServerStyle',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('name', models.CharField(unique=True, max_length=255, verbose_name='style name')),
-                ('title', models.CharField(max_length=255, null=True, blank=True)),
-                ('body', models.TextField(null=True, verbose_name='style xml', blank=True)),
-                ('style_url', models.CharField(max_length=1000, null=True, verbose_name='style url')),
-                ('style_legend_url', models.CharField(max_length=1000, null=True, verbose_name='style legend url')),
-            ],
-        ),
-        migrations.AddField(
-            model_name='qgisserverlayer',
-            name='default_style',
-            field=models.ForeignKey(related_name='layer_default_style', default=None, to='qgis_server.QGISServerStyle', null=True),
-        ),
-        migrations.AddField(
-            model_name='qgisserverlayer',
-            name='styles',
-            field=models.ManyToManyField(related_name='layer_styles', to='qgis_server.QGISServerStyle'),
-        ),
-    ]
diff --git a/geonode/qgis_server/migrations/0004_auto_20170805_0223.py b/geonode/qgis_server/migrations/0004_auto_20170805_0223.py
deleted file mode 100644
index 454f58f0f..000000000
--- a/geonode/qgis_server/migrations/0004_auto_20170805_0223.py
+++ /dev/null
@@ -1,43 +0,0 @@
-# -*- coding: utf-8 -*-
-#########################################################################
-#
-# Copyright (C) 2016 OSGeo
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program. If not, see <http://www.gnu.org/licenses/>.
-#
-#########################################################################
-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('qgis_server', '0003_auto_20170727_0509'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='qgisserverlayer',
-            name='layer',
-            field=models.OneToOneField(related_name='qgis_layer', primary_key=True, serialize=False, to='layers.Layer'),
-        ),
-        migrations.AlterField(
-            model_name='qgisserverstyle',
-            name='name',
-            field=models.CharField(max_length=255, verbose_name='style name'),
-        ),
-    ]
diff --git a/geonode/qgis_server/migrations/0005_auto_20170823_0341.py b/geonode/qgis_server/migrations/0005_auto_20170823_0341.py
deleted file mode 100644
index 9e5c1654e..000000000
--- a/geonode/qgis_server/migrations/0005_auto_20170823_0341.py
+++ /dev/null
@@ -1,39 +0,0 @@
-# -*- coding: utf-8 -*-
-#########################################################################
-#
-# Copyright (C) 2016 OSGeo
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program. If not, see <http://www.gnu.org/licenses/>.
-#
-#########################################################################
-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import django.db.models.deletion
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('qgis_server', '0004_auto_20170805_0223'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='qgisserverlayer',
-            name='default_style',
-            field=models.ForeignKey(related_name='layer_default_style', on_delete=django.db.models.deletion.SET_NULL, default=None, to='qgis_server.QGISServerStyle', null=True),
-        ),
-    ]
diff --git a/geonode/qgis_server/migrations/__init__.py b/geonode/qgis_server/migrations/__init__.py
deleted file mode 100644
index 6b11a24a6..000000000
--- a/geonode/qgis_server/migrations/__init__.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-#########################################################################
-#
-# Copyright (C) 2016 OSGeo
-#
-# This program is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program. If not, see <http://www.gnu.org/licenses/>.
-#
-#########################################################################
diff --git a/geonode/services/migrations/0025_harvestjob.py b/geonode/services/migrations/0025_harvestjob.py
deleted file mode 100644
index f22d1759b..000000000
--- a/geonode/services/migrations/0025_harvestjob.py
+++ /dev/null
@@ -1,23 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '24_initial'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='HarvestJob',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('resource_id', models.CharField(max_length=255)),
-                ('status', models.CharField(default=b'QUEUED', max_length=15, choices=[(b'QUEUED', b'QUEUED'), (b'IN_PROCESS', b'IN_PROCESS'), (b'PROCESSED', b'PROCESSED'), (b'FAILED', b'FAILED')])),
-                ('service', models.OneToOneField(to='services.Service')),
-            ],
-        ),
-    ]
diff --git a/geonode/services/migrations/0026_auto_20171130_0600.py b/geonode/services/migrations/0026_auto_20171130_0600.py
deleted file mode 100644
index 46eaf3beb..000000000
--- a/geonode/services/migrations/0026_auto_20171130_0600.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0025_harvestjob'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='harvestjob',
-            name='service',
-            field=models.ForeignKey(to='services.Service'),
-        ),
-    ]
diff --git a/geonode/services/migrations/0027_harvestjob_details.py b/geonode/services/migrations/0027_harvestjob_details.py
deleted file mode 100644
index 011d1c5f6..000000000
--- a/geonode/services/migrations/0027_harvestjob_details.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0026_auto_20171130_0600'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='harvestjob',
-            name='details',
-            field=models.TextField(default='Resource is queued'),
-        ),
-    ]
diff --git a/geonode/services/migrations/0028_auto_20171201_0640.py b/geonode/services/migrations/0028_auto_20171201_0640.py
deleted file mode 100644
index 1cdc472d6..000000000
--- a/geonode/services/migrations/0028_auto_20171201_0640.py
+++ /dev/null
@@ -1,30 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0027_harvestjob_details'),
-    ]
-
-    operations = [
-        migrations.RemoveField(
-            model_name='servicelayer',
-            name='description',
-        ),
-        migrations.RemoveField(
-            model_name='servicelayer',
-            name='styles',
-        ),
-        migrations.RemoveField(
-            model_name='servicelayer',
-            name='title',
-        ),
-        migrations.RemoveField(
-            model_name='servicelayer',
-            name='typename',
-        ),
-    ]
diff --git a/geonode/services/migrations/0029_auto_20171203_1624.py b/geonode/services/migrations/0029_auto_20171203_1624.py
deleted file mode 100644
index d5b8134e7..000000000
--- a/geonode/services/migrations/0029_auto_20171203_1624.py
+++ /dev/null
@@ -1,25 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0028_auto_20171201_0640'),
-    ]
-
-    operations = [
-        migrations.RemoveField(
-            model_name='servicelayer',
-            name='layer',
-        ),
-        migrations.RemoveField(
-            model_name='servicelayer',
-            name='service',
-        ),
-        migrations.DeleteModel(
-            name='ServiceLayer',
-        ),
-    ]
diff --git a/geonode/services/migrations/0030_auto_20171212_0518.py b/geonode/services/migrations/0030_auto_20171212_0518.py
deleted file mode 100644
index 105208462..000000000
--- a/geonode/services/migrations/0030_auto_20171212_0518.py
+++ /dev/null
@@ -1,29 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0029_auto_20171203_1624'),
-    ]
-
-    operations = [
-        migrations.RemoveField(
-            model_name='webserviceharvestlayersjob',
-            name='service',
-        ),
-        migrations.DeleteModel(
-            name='WebServiceRegistrationJob',
-        ),
-        migrations.AlterField(
-            model_name='harvestjob',
-            name='status',
-            field=models.CharField(default=b'QUEUED', max_length=15, choices=[(b'QUEUED', b'QUEUED'), (b'CANCELLED', b'QUEUED'), (b'IN_PROCESS', b'IN_PROCESS'), (b'PROCESSED', b'PROCESSED'), (b'FAILED', b'FAILED')]),
-        ),
-        migrations.DeleteModel(
-            name='WebServiceHarvestLayersJob',
-        ),
-    ]
diff --git a/geonode/services/migrations/0031_auto_20180301_1947.py b/geonode/services/migrations/0031_auto_20180301_1947.py
deleted file mode 100644
index 8489b916b..000000000
--- a/geonode/services/migrations/0031_auto_20180301_1947.py
+++ /dev/null
@@ -1,23 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.10 on 2018-03-02 01:47
-from __future__ import unicode_literals
-
-from django.db import migrations
-import django.db.models.manager
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0030_auto_20171212_0518'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='service',
-            managers=[
-                ('objects', django.db.models.manager.Manager()),
-                ('base_objects', django.db.models.manager.Manager()),
-            ],
-        ),
-    ]
diff --git a/geonode/services/migrations/0031_service_proxy_base.py b/geonode/services/migrations/0031_service_proxy_base.py
deleted file mode 100644
index 5281d200a..000000000
--- a/geonode/services/migrations/0031_service_proxy_base.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0030_auto_20171212_0518'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='service',
-            name='proxy_base',
-            field=models.URLField(null=True, blank=True),
-        ),
-    ]
diff --git a/geonode/services/migrations/0032_auto_20180302_0430.py b/geonode/services/migrations/0032_auto_20180302_0430.py
deleted file mode 100644
index 2fb635298..000000000
--- a/geonode/services/migrations/0032_auto_20180302_0430.py
+++ /dev/null
@@ -1,20 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.9.13 on 2018-03-02 10:30
-from __future__ import unicode_literals
-
-from django.db import migrations
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0031_auto_20180301_1947'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='service',
-            managers=[
-            ],
-        ),
-    ]
diff --git a/geonode/services/migrations/0033_merge.py b/geonode/services/migrations/0033_merge.py
deleted file mode 100644
index 01aae19b6..000000000
--- a/geonode/services/migrations/0033_merge.py
+++ /dev/null
@@ -1,16 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.9.13 on 2018-03-09 05:56
-from __future__ import unicode_literals
-
-from django.db import migrations
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0031_service_proxy_base'),
-        ('services', '0032_auto_20180302_0430'),
-    ]
-
-    operations = [
-    ]
diff --git a/geonode/services/migrations/0034_auto_20180309_0917.py b/geonode/services/migrations/0034_auto_20180309_0917.py
deleted file mode 100644
index 437626507..000000000
--- a/geonode/services/migrations/0034_auto_20180309_0917.py
+++ /dev/null
@@ -1,20 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.9.13 on 2018-03-09 09:17
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0033_merge'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='harvestjob',
-            name='details',
-            field=models.TextField(blank=True, default='Resource is queued', null=True),
-        ),
-    ]
diff --git a/geonode/services/migrations/0035_auto_20180327_0846.py b/geonode/services/migrations/0035_auto_20180327_0846.py
deleted file mode 100644
index 3c7a75e5a..000000000
--- a/geonode/services/migrations/0035_auto_20180327_0846.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0034_auto_20180309_0917'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='service',
-            name='type',
-            field=models.CharField(max_length=10, choices=[(b'AUTO', 'Auto-detect'), (b'OWS', 'Paired WMS/WFS/WCS'), (b'WMS', 'Web Map Service'), (b'CSW', 'Catalogue Service'), (b'REST', 'ArcGIS REST Service'), (b'OGP', 'OpenGeoPortal'), (b'HGL', 'Harvard Geospatial Library'), (b'GN_WMS', 'GeoNode (Web Map Service)'), (b'GN_CSW', 'GeoNode (Catalogue Service)')]),
-        ),
-    ]
diff --git a/geonode/services/migrations/0036_auto_20180331_1039.py b/geonode/services/migrations/0036_auto_20180331_1039.py
deleted file mode 100644
index 2abd98cd4..000000000
--- a/geonode/services/migrations/0036_auto_20180331_1039.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0035_auto_20180327_0846'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='service',
-            name='type',
-            field=models.CharField(max_length=10, choices=[(b'AUTO', 'Auto-detect'), (b'OWS', 'Paired WMS/WFS/WCS'), (b'WMS', 'Web Map Service'), (b'CSW', 'Catalogue Service'), (b'REST_MAP', 'ArcGIS REST MapServer'), (b'REST_IMG', 'ArcGIS REST ImageServer'), (b'OGP', 'OpenGeoPortal'), (b'HGL', 'Harvard Geospatial Library'), (b'GN_WMS', 'GeoNode (Web Map Service)'), (b'GN_CSW', 'GeoNode (Catalogue Service)')]),
-        ),
-    ]
diff --git a/geonode/services/migrations/0037_auto_20180409_1238.py b/geonode/services/migrations/0037_auto_20180409_1238.py
deleted file mode 100644
index dd2c0c0fc..000000000
--- a/geonode/services/migrations/0037_auto_20180409_1238.py
+++ /dev/null
@@ -1,23 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-04-09 12:38
-from __future__ import unicode_literals
-
-from django.db import migrations
-import django.db.models.manager
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0036_auto_20180331_1039'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='service',
-            managers=[
-                ('objects', django.db.models.manager.Manager()),
-                ('base_objects', django.db.models.manager.Manager()),
-            ],
-        ),
-    ]
diff --git a/geonode/services/migrations/0038_auto_20180412_0822.py b/geonode/services/migrations/0038_auto_20180412_0822.py
deleted file mode 100644
index 3ab458f48..000000000
--- a/geonode/services/migrations/0038_auto_20180412_0822.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0037_auto_20180409_1238'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='service',
-            managers=[
-            ],
-        ),
-    ]
diff --git a/geonode/services/migrations/0039_auto_20180414_2120.py b/geonode/services/migrations/0039_auto_20180414_2120.py
deleted file mode 100644
index 49c7f1455..000000000
--- a/geonode/services/migrations/0039_auto_20180414_2120.py
+++ /dev/null
@@ -1,23 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.11 on 2018-04-14 21:20
-from __future__ import unicode_literals
-
-from django.db import migrations
-import django.db.models.manager
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('services', '0038_auto_20180412_0822'),
-    ]
-
-    operations = [
-        migrations.AlterModelManagers(
-            name='service',
-            managers=[
-                ('objects', django.db.models.manager.Manager()),
-                ('base_objects', django.db.models.manager.Manager()),
-            ],
-        ),
-    ]
diff --git a/geonode/services/migrations/24_initial.py b/geonode/services/migrations/24_initial.py
deleted file mode 100644
index 01e88cf81..000000000
--- a/geonode/services/migrations/24_initial.py
+++ /dev/null
@@ -1,92 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-from django.conf import settings
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
-        ('base', '__first__'),
-        ('layers', '__first__'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Service',
-            fields=[
-                ('resourcebase_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='base.ResourceBase')),
-                ('type', models.CharField(max_length=4, choices=[(b'AUTO', 'Auto-detect'), (b'OWS', 'Paired WMS/WFS/WCS'), (b'WMS', 'Web Map Service'), (b'CSW', 'Catalogue Service'), (b'REST', 'ArcGIS REST Service'), (b'OGP', 'OpenGeoPortal'), (b'HGL', 'Harvard Geospatial Library')])),
-                ('method', models.CharField(max_length=1, choices=[(b'L', 'Local'), (b'C', 'Cascaded'), (b'H', 'Harvested'), (b'I', 'Indexed'), (b'X', 'Live'), (b'O', 'OpenGeoPortal')])),
-                ('base_url', models.URLField(unique=True, db_index=True)),
-                ('version', models.CharField(max_length=10, null=True, blank=True)),
-                ('name', models.CharField(unique=True, max_length=255, db_index=True)),
-                ('description', models.CharField(max_length=255, null=True, blank=True)),
-                ('online_resource', models.URLField(null=True, verbose_name=False, blank=True)),
-                ('fees', models.CharField(max_length=1000, null=True, blank=True)),
-                ('access_constraints', models.CharField(max_length=255, null=True, blank=True)),
-                ('connection_params', models.TextField(null=True, blank=True)),
-                ('username', models.CharField(max_length=50, null=True, blank=True)),
-                ('password', models.CharField(max_length=50, null=True, blank=True)),
-                ('api_key', models.CharField(max_length=255, null=True, blank=True)),
-                ('workspace_ref', models.URLField(null=True, verbose_name=False, blank=True)),
-                ('store_ref', models.URLField(null=True, blank=True)),
-                ('resources_ref', models.URLField(null=True, blank=True)),
-                ('created', models.DateTimeField(auto_now_add=True)),
-                ('last_updated', models.DateTimeField(auto_now=True)),
-                ('first_noanswer', models.DateTimeField(null=True, blank=True)),
-                ('noanswer_retries', models.PositiveIntegerField(null=True, blank=True)),
-                ('external_id', models.IntegerField(null=True, blank=True)),
-                ('parent', models.ForeignKey(related_name='service_set', blank=True, to='services.Service', null=True)),
-            ],
-            options={
-                'abstract': False,
-            },
-            bases=('base.resourcebase',),
-        ),
-        migrations.CreateModel(
-            name='ServiceLayer',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('typename', models.CharField(max_length=255, verbose_name='Layer Name')),
-                ('title', models.CharField(max_length=512, verbose_name='Layer Title')),
-                ('description', models.TextField(null=True, verbose_name='Layer Description')),
-                ('styles', models.TextField(null=True, verbose_name='Layer Styles')),
-                ('layer', models.ForeignKey(to='layers.Layer', null=True)),
-                ('service', models.ForeignKey(to='services.Service')),
-            ],
-        ),
-        migrations.CreateModel(
-            name='ServiceProfileRole',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('role', models.CharField(help_text='function performed by the responsible party', max_length=255, choices=[(b'author', 'party who authored the resource'), (b'processor', 'party who has processed the data in a manner such that the resource has been modified'), (b'publisher', 'party who published the resource'), (b'custodian', 'party that accepts accountability and responsibility for the data and ensures         appropriate care and maintenance of the resource'), (b'pointOfContact', 'party who can be contacted for acquiring knowledge about or acquisition of the resource'), (b'distributor', 'party who distributes the resource'), (b'user', 'party who uses the resource'), (b'resourceProvider', 'party that supplies the resource'), (b'originator', 'party who created the resource'), (b'owner', 'party that owns the resource'), (b'principalInvestigator', 'key party responsible for gathering information and conducting research')])),
-                ('profiles', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
-                ('service', models.ForeignKey(to='services.Service')),
-            ],
-        ),
-        migrations.CreateModel(
-            name='WebServiceHarvestLayersJob',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('status', models.CharField(default=b'pending', max_length=10, choices=[(b'pending', b'pending'), (b'failed', b'failed'), (b'process', b'process')])),
-                ('service', models.OneToOneField(to='services.Service')),
-            ],
-        ),
-        migrations.CreateModel(
-            name='WebServiceRegistrationJob',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('base_url', models.URLField(unique=True)),
-                ('type', models.CharField(max_length=4, choices=[(b'AUTO', 'Auto-detect'), (b'OWS', 'Paired WMS/WFS/WCS'), (b'WMS', 'Web Map Service'), (b'CSW', 'Catalogue Service'), (b'REST', 'ArcGIS REST Service'), (b'OGP', 'OpenGeoPortal'), (b'HGL', 'Harvard Geospatial Library')])),
-                ('status', models.CharField(default=b'pending', max_length=10, choices=[(b'pending', b'pending'), (b'failed', b'failed'), (b'process', b'process')])),
-            ],
-        ),
-        migrations.AddField(
-            model_name='service',
-            name='profiles',
-            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL, through='services.ServiceProfileRole'),
-        ),
-    ]
diff --git a/geonode/static/geonode/js/search/cart.js b/geonode/static/geonode/js/search/cart.js
index f0f24100e..73659c4c0 100644
--- a/geonode/static/geonode/js/search/cart.js
+++ b/geonode/static/geonode/js/search/cart.js
@@ -127,12 +127,15 @@
       this.removeItem = function(item){
         if(this.getItemById(item.id) !== null){
           var cart = this.getCart();
-          angular.forEach(cart.items, function(cart_item, index){
+          $(`#cart-${item.id} i`).removeClass(this.getFaClass(item.id))
+	  
+	  angular.forEach(cart.items, function(cart_item, index){
             if(cart_item.id === item.id){
               cart.items.splice(index, 1);
               $cookies.remove(cart_item['uuid']);
             }
           });
+	  $(`#cart-${item.id} i`).addClass(this.getFaClass(item.id))
         }
       }
 
diff --git a/geonode/static/geonode/js/search/search.js b/geonode/static/geonode/js/search/search.js
index 64f32fffc..ce80beb76 100644
--- a/geonode/static/geonode/js/search/search.js
+++ b/geonode/static/geonode/js/search/search.js
@@ -29,16 +29,13 @@
   // Load categories, keywords, and regions
   module.load_categories = function ($http, $rootScope, $location){
         var params = typeof FILTER_TYPE == 'undefined' ? {} : {'type': FILTER_TYPE};
-        if ($location.search().hasOwnProperty('title__icontains')){
-          params['title__icontains'] = $location.search()['title__icontains'];
-        }
         $http.get(CATEGORIES_ENDPOINT, {params: params}).success(function(data){
             if($location.search().hasOwnProperty('category__identifier__in')){
                 data.objects = module.set_initial_filters_from_query(data.objects,
                     $location.search()['category__identifier__in'], 'identifier');
             }
             $rootScope.categories = data.objects;
-            if (HAYSTACK_FACET_COUNTS && $rootScope.query_data) {
+            if ( $rootScope.query_data) {
                 module.haystack_facets($http, $rootScope, $location);
             }
         });
@@ -47,16 +44,13 @@
   // Load group categories
   module.load_group_categories = function ($http, $rootScope, $location){
         var params = typeof FILTER_TYPE == 'undefined' ? {} : {'type': FILTER_TYPE};
-        if ($location.search().hasOwnProperty('name__icontains')){
-          params['name__icontains'] = $location.search()['name__icontains'];
-        }
         $http.get(GROUP_CATEGORIES_ENDPOINT, {params: params}).success(function(data){
             if($location.search().hasOwnProperty('slug')){
                 data.objects = module.set_initial_filters_from_query(data.objects,
                     $location.search()['slug'], 'identifier');
             }
             $rootScope.categories = data.objects;
-            if (HAYSTACK_FACET_COUNTS && $rootScope.query_data) {
+            if ( $rootScope.query_data) {
                 module.haystack_facets($http, $rootScope, $location);
             }
         });
@@ -64,16 +58,13 @@
 
   module.load_keywords = function ($http, $rootScope, $location){
         var params = typeof FILTER_TYPE == 'undefined' ? {} : {'type': FILTER_TYPE};
-        if ($location.search().hasOwnProperty('title__icontains')){
-          params['title__icontains'] = $location.search()['title__icontains'];
-        }
         $http.get(KEYWORDS_ENDPOINT, {params: params}).success(function(data){
             if($location.search().hasOwnProperty('keywords__slug__in')){
                 data.objects = module.set_initial_filters_from_query(data.objects,
                     $location.search()['keywords__slug__in'], 'slug');
             }
             $rootScope.keywords = data.objects;
-            if (HAYSTACK_FACET_COUNTS && $rootScope.query_data) {
+            if ($rootScope.query_data) {
                 module.haystack_facets($http, $rootScope, $location);
             }
         });
@@ -108,16 +99,13 @@
 
   module.load_t_keywords = function ($http, $rootScope, $location){
         var params = typeof FILTER_TYPE == 'undefined' ? {} : {'type': FILTER_TYPE};
-        if ($location.search().hasOwnProperty('title__icontains')){
-          params['title__icontains'] = $location.search()['title__icontains'];
-        }
         $http.get(T_KEYWORDS_ENDPOINT, {params: params}).success(function(data){
             if($location.search().hasOwnProperty('tkeywords__id__in')){
                 data.objects = module.set_initial_filters_from_query(data.objects,
                     $location.search()['tkeywords__id__in'], 'id');
             }
             $rootScope.tkeywords = data.objects;
-            if (HAYSTACK_FACET_COUNTS && $rootScope.query_data) {
+            if ($rootScope.query_data) {
                 module.haystack_facets($http, $rootScope, $location);
             }
         });
@@ -125,16 +113,13 @@
 
   module.load_regions = function ($http, $rootScope, $location){
         var params = typeof FILTER_TYPE == 'undefined' ? {} : {'type': FILTER_TYPE};
-        if ($location.search().hasOwnProperty('title__icontains')){
-          params['title__icontains'] = $location.search()['title__icontains'];
-        }
         $http.get(REGIONS_ENDPOINT, {params: params}).success(function(data){
             if($location.search().hasOwnProperty('regions__name__in')){
                 data.objects = module.set_initial_filters_from_query(data.objects,
                     $location.search()['regions__name__in'], 'name');
             }
             $rootScope.regions = data.objects;
-            if (HAYSTACK_FACET_COUNTS && $rootScope.query_data) {
+            if ($rootScope.query_data) {
                 module.haystack_facets($http, $rootScope, $location);
             }
         });
@@ -142,16 +127,13 @@
 
     module.load_owners = function ($http, $rootScope, $location){
         var params = typeof FILTER_TYPE == 'undefined' ? {} : {'type': FILTER_TYPE};
-        if ($location.search().hasOwnProperty('title__icontains')){
-            params['title__icontains'] = $location.search()['title__icontains'];
-        }
         $http.get(OWNERS_ENDPOINT, {params: params}).success(function(data){
             if($location.search().hasOwnProperty('owner__username__in')){
                 data.objects = module.set_initial_filters_from_query(data.objects,
                     $location.search()['owner__username__in'], 'identifier');
             }
             $rootScope.owners = data.objects;
-            if (HAYSTACK_FACET_COUNTS && $rootScope.query_data) {
+            if ($rootScope.query_data) {
                 module.haystack_facets($http, $rootScope, $location);
             }
         });
@@ -283,31 +265,126 @@
   * Load data from api and defines the multiple and single choice handlers
   * Syncs the browser url with the selections
   */
-  module.controller('geonode_search_controller', function($injector, $scope, $location, $http, Configs){
+  module.controller('geonode_search_controller', function($injector, $scope, cart, $location, $timeout, $http, Configs, $filter){
+	function templateHTML(index, item, props={}) {
+		return `<article resource_id="${item.id || ''}">
+		      <div class="col-lg-12 item-container">
+		        <div class="col-lg-12 profile-avatar">
+		          <div class="col-lg-4 item-thumb">
+		            <a href="${item.detail_url || ''}">
+		              <img src="${item.thumbnail_url || ''}" />
+		            </a>
+		          </div>
+			  <div class="col-lg-8 item-details">
+			    <div class="row">
+			      <div class="col-xs-10">
+			        <p class="item-meta">
+			          <span class="item-category">${item.category__gn_description || ''}</span><br>
+			         ${ !item.group ? '' :
+				  `<span class="item-category" ng-if="item.group">
+				    <a href="${item.site_url}groups/group/${item.group}/activity/">
+					<i class="fa fa-group" aria-hidden="true" style="margin-right: 8px;"></i>
+					${item.group_name || ''}</a><br>
+				   </span>`
+				 }
+			        </p>
+				<h4>
+			          ${ item.store_type !== 'remoteStore' ? '' : `<i title="Remote Service" class="fa fa-external-link fa-1" style="vertical-align:  middle;padding-right: 10px;"></i>`}
+			          ${ item.store_type !== 'dataStore'   ? '' : `<i title="Vector Data" class="fa fa-pencil-square-o fa-1" style="vertical-align:  middle;padding-right: 10px;"></i>`}
+			          ${ item.store_type !== 'coverageStore' ? '' : `<i title="Raster Data" class="fa fa-picture-o fa-1" style="vertical-align:  middle;padding-right: 10px;"></i>`}
+			          ${ item.store_type !== 'dataset'     ? '' : `<i title="File/Dataset" class="fa fa-newspaper-o fa-1" style="vertical-align:  middle;padding-right: 10px;"></i>`}
+			          ${ item.store_type !== 'map'         ? '' : `<i title="Map" class="fa fa-map-o fa-1" style="vertical-align:  middle;padding-right: 10px;"></i>`}
+			          <a target="_self" href="${item.detail_url}">${item.title || ''}</a>
+			        </h4>
+			      </div>
+			      <div class="col-xs-2">
+			        <h4>
+			          ${ !cart ? '' :
+				  `<button
+				    id="cart-${item.id}"
+		                    class="btn btn-default btn-xs pull-right"
+				    data-index="${index}"
+		                    data-toggle="tooltip"
+		                    data-placement="bottom"
+		                    title="Select"><i class="fa fa-lg ${cart.getFaClass(item.id)}"></i>
+				   </button>`}
+			         </h4>
+			      </div>
+			    </div>
+			    <p class="abstract">${ item.abstract.length > 300 ? item.abstract.substring(0, 300) +  '...' : item.abstract}</p>
+			    <div class="row">
+			      <div class="col-lg-12 item-items">
+			        <ul class="list-inline">
+			                <li><a href="${item.site_url}people/profile/${item.owner__username}"><i class="fa fa-user"></i>${item.owner_name || ''}</a></li>
+			                <li><a href="${item.detail_url}#info"><i class="fa fa-calendar-o"></i>${ $filter('date')(item.date, 'd MMM y')}</a></li>
+			                <li><a href="${item.detail_url}"><i class="fa fa-eye"></i>${item.popular_count}</a></li>
+			                <li><a href="${item.detail_url}#share"><i class="fa fa-share"></i>${item.share_count}</a></li>
+			                <li><a href="${item.detail_url}#rate"><i class="fa fa-star"></i>${item.rating}</a></li>
+			                <li>
+					  ${ item.detail_url.indexOf('/layers/') <= -1 ? '' :
+					    `<a target="_self" href="${props.newMap}?layer=${item.detail_url.substring(8)}"><i class="fa fa-map-marker"></i>Create a Map</a>`
+					  }
+			                </li>
+			                <li> 
+					  ${ item.detail_url.indexOf('/maps/') <= -1 ? '' : 
+					  `<a href="${item.site_url}maps/${item.id}/view"><i class="fa fa-map-marker"></i>View Map</a>`
+					  }
+					</li>
+			        </ul>
+			      </div>
+			    </div>
+
+			  </div>
+		        </div>
+		      </div>
+		  </article>`;
+	}
+    
     $scope.query = $location.search();
     $scope.query.limit = $scope.query.limit || CLIENT_RESULTS_LIMIT;
     $scope.query.offset = $scope.query.offset || 0;
     $scope.page = Math.round(($scope.query.offset / $scope.query.limit) + 1);
-
+    
+    let layerList = [];
     //Get data from apis and make them available to the page
     function query_api(data){
+
       $http.get(Configs.url, {params: data || {}}).success(function(data){
         setTimeout(function(){$('[ng-controller="CartList"] [data-toggle="tooltip"]').tooltip();},0);
-        $scope.results = data.objects;
-        $scope.total_counts = data.meta.total_count;
+        
+	const container = $('#explore-layer-list');
+	const props = { 
+	  newMap: container.data("newMap")
+	}
+	
+	// $scope.results = data.objects; // <-- slow code removed
+	if(container.children().length){
+	  container.empty();
+	  layerList.forEach($timeout.cancel);
+	  layerList = [];
+	}
+	for(let i=0; i < data.objects.length; i++){
+	  layerList.push($timeout(() => {
+	    container.append(templateHTML(i, data.objects[i], props) );
+	    layerList.shift();
+	  }, i*20));
+	}
+	container.on('click', 'article button', function(){
+	  $timeout( () => {
+            const item = data.objects[this.dataset.index];
+	    $(this).find('i').removeClass(cart.getFaClass(item.id));
+            cart.toggleItem(item);
+	    $(this).find('i').addClass(cart.getFaClass(item.id));
+	  }, 0);
+	});
+
+	$scope.total_counts = data.meta.total_count;
         $scope.$root.query_data = data;
-        if (HAYSTACK_SEARCH) {
           if ($location.search().hasOwnProperty('q')){
             $scope.text_query = $location.search()['q'].replace(/\+/g," ");
           }
-        } else {
-          if ($location.search().hasOwnProperty('title__icontains')){
-            $scope.text_query = $location.search()['title__icontains'].replace(/\+/g," ");
-          }
-        }
 
         //Update facet/keyword/category counts from search results
-        if (HAYSTACK_FACET_COUNTS){
             try {
                 module.haystack_facets($http, $scope.$root, $location);
                 $("#types").find("a").each(function(){
@@ -323,7 +400,6 @@
             } catch(err) {
                 // console.log(err);
             }
-        }
       });
     };
     query_api($scope.query);
@@ -343,7 +419,7 @@
       if($scope.numpages < $scope.page){
         $scope.page = 1;
         $scope.query.offset = 0;
-        query_api($scope.query);
+	query_api($scope.query);
       }
 
       // In case of no results, the number of pages is one.
@@ -538,17 +614,8 @@
     });
 
     $('#text_search_btn').click(function(){
-        if (HAYSTACK_SEARCH)
-            $scope.query['q'] = $('#text_search_input').val();
-        else
-            if (AUTOCOMPLETE_URL_RESOURCEBASE == "/autocomplete/ProfileAutocomplete/")
-                // a user profile has no title; if search was triggered from
-                // the /people page, filter by username instead
-                var query_key = 'username__icontains';
-            else
-                console.log('search key', $('#text_search_input').data());
-                var query_key = $('#text_search_input').data('query-key')||'title__icontains';
-            $scope.query[query_key] = $('#text_search_input').val();
+       $scope.query['q'] = $('#text_search_input').val();
+    
         query_api($scope.query);
     });
 
diff --git a/geonode/templates/base.html b/geonode/templates/base.html
index 607aa971e..a07fe2e4e 100644
--- a/geonode/templates/base.html
+++ b/geonode/templates/base.html
@@ -213,18 +213,6 @@
 
            {% endblock my_extra_right_tab %}
 
-            <li>
-              <div class="search">
-                <form id="search" action="{% url "search" %}" >
-                  <span class="fa fa-search"></span>
-                  {% if HAYSTACK_SEARCH %}
-                  <input id="search_input" type="text" placeholder="Search" name="q">
-                  {% else %}
-                  <input id="search_input" type="text" placeholder="Search" name="title__icontains">
-                  {% endif %}
-                </form>
-              </div>
-          </li>
             {% if not user.is_authenticated and ACCOUNT_OPEN_SIGNUP %}
             <li><a href="{% url "account_signup" %}">{% trans "Register" %}</a></li>
             {% endif %}
@@ -373,7 +361,7 @@
           {% endif %}
           {% endblock contactus %}
           <ul class="list-unstyled">
-            <li>{% trans "Powered by" %} <a href="http://geonode.org">{% trans "GeoNode" %}</a> <em>{% trans "version" %} {{ VERSION }}</em></li>
+            <li>Made possible by <a href="http://geonode.org">{% trans "GeoNode" %}</a> <em>{% trans "version" %} {{ VERSION }}</em></li>
             <li><a href="{% url "developer" %}">{% trans "Developers" %}</a> | <a href="{% url "about" %}">{% trans "About" %}</a><li>
           </ul>
           <label class="hidden">{% trans "Language" %}</label>
diff --git a/geonode/templates/search/_search_content.html b/geonode/templates/search/_search_content.html
index 2eea9b329..cb96b0173 100644
--- a/geonode/templates/search/_search_content.html
+++ b/geonode/templates/search/_search_content.html
@@ -50,7 +50,7 @@
   <div class="col-md-9">
     <div class="row">
       <div class="col-md-10"><span style="font-size: 34px;" ng-bind="total_counts + ' {{ facet_type | title }} found'"></span></div>
-      <div class="col-md-2">{% include "search/_sort_filters.html" %}</div>
+      {% comment %}     <div class="col-md-2">{% include "search/_sort_filters.html" %}</div>  {% endcomment %}
     </div>
     <div class="row">
       <div class="col-md-12 grid-spacer">
diff --git a/geonode/themes/migrations/0001_initial.py b/geonode/themes/migrations/0001_initial.py
deleted file mode 100644
index 14dc99bba..000000000
--- a/geonode/themes/migrations/0001_initial.py
+++ /dev/null
@@ -1,74 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.15 on 2018-10-15 00:01
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    initial = True
-
-    dependencies = [
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='GeoNodeThemeCustomization',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('identifier', models.CharField(editable=False, max_length=255)),
-                ('name', models.CharField(max_length=100)),
-                ('date', models.DateTimeField(auto_now_add=True)),
-                ('description', models.TextField(blank=True, null=True)),
-                ('is_enabled', models.BooleanField(default=False)),
-                ('logo', models.ImageField(blank=True, null=True, upload_to=b'img/%Y/%m')),
-                ('jumbotron_bg', models.ImageField(blank=True, null=True, upload_to=b'img/%Y/%m')),
-                ('jumbotron_welcome_hide', models.BooleanField(default=False)),
-                ('jumbotron_welcome_title', models.CharField(blank=True, max_length=255, null=True)),
-                ('jumbotron_welcome_content', models.TextField(blank=True, null=True)),
-                ('jumbotron_site_description', models.TextField(blank=True, null=True)),
-                ('body_color', models.CharField(default=b'#333333', max_length=10)),
-                ('navbar_color', models.CharField(default=b'#333333', max_length=10)),
-                ('jumbotron_color', models.CharField(default=b'#2c689c', max_length=10)),
-                ('copyright_color', models.CharField(default=b'#2c689c', max_length=10)),
-                ('contactus', models.BooleanField(default=False)),
-                ('copyright', models.TextField(blank=True, null=True)),
-                ('contact_name', models.TextField(blank=True, null=True)),
-                ('contact_position', models.TextField(blank=True, null=True)),
-                ('contact_administrative_area', models.TextField(blank=True, null=True)),
-                ('contact_street', models.TextField(blank=True, null=True)),
-                ('contact_postal_code', models.TextField(blank=True, null=True)),
-                ('contact_city', models.TextField(blank=True, null=True)),
-                ('contact_country', models.TextField(blank=True, null=True)),
-                ('contact_delivery_point', models.TextField(blank=True, null=True)),
-                ('contact_voice', models.TextField(blank=True, null=True)),
-                ('contact_facsimile', models.TextField(blank=True, null=True)),
-                ('contact_email', models.TextField(blank=True, null=True)),
-                ('partners_title', models.CharField(blank=True, default=b'Our Partners', max_length=100, null=True)),
-            ],
-            options={
-                'ordering': ('date',),
-                'verbose_name_plural': 'Themes',
-            },
-        ),
-        migrations.CreateModel(
-            name='Partner',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('logo', models.ImageField(blank=True, null=True, upload_to=b'img/%Y/%m')),
-                ('name', models.CharField(max_length=100)),
-                ('title', models.CharField(max_length=255)),
-                ('href', models.CharField(max_length=255)),
-            ],
-            options={
-                'ordering': ('name',),
-                'verbose_name_plural': 'Partners',
-            },
-        ),
-        migrations.AddField(
-            model_name='geonodethemecustomization',
-            name='partners',
-            field=models.ManyToManyField(blank=True, related_name='partners', to='geonode_themes.Partner'),
-        ),
-    ]
diff --git a/geonode/themes/migrations/0002_auto_20181015_1208.py b/geonode/themes/migrations/0002_auto_20181015_1208.py
deleted file mode 100644
index 421001c52..000000000
--- a/geonode/themes/migrations/0002_auto_20181015_1208.py
+++ /dev/null
@@ -1,149 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.15 on 2018-10-15 00:08
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('geonode_themes', '0001_initial'),
-    ]
-
-    operations = [
-        migrations.RemoveField(
-            model_name='geonodethemecustomization',
-            name='jumbotron_site_description',
-        ),
-        migrations.AddField(
-            model_name='geonodethemecustomization',
-            name='jumbotron_cta_hide',
-            field=models.BooleanField(default=False, verbose_name=b'Hide call to action'),
-        ),
-        migrations.AddField(
-            model_name='geonodethemecustomization',
-            name='jumbotron_cta_link',
-            field=models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Call to action link'),
-        ),
-        migrations.AddField(
-            model_name='geonodethemecustomization',
-            name='jumbotron_cta_text',
-            field=models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Call to action text'),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='contact_administrative_area',
-            field=models.CharField(blank=True, max_length=255, null=True),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='contact_city',
-            field=models.CharField(blank=True, max_length=255, null=True),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='contact_country',
-            field=models.CharField(blank=True, max_length=255, null=True),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='contact_delivery_point',
-            field=models.CharField(blank=True, max_length=255, null=True),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='contact_email',
-            field=models.CharField(blank=True, max_length=255, null=True),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='contact_facsimile',
-            field=models.CharField(blank=True, max_length=255, null=True),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='contact_name',
-            field=models.CharField(blank=True, max_length=255, null=True),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='contact_position',
-            field=models.CharField(blank=True, max_length=255, null=True),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='contact_postal_code',
-            field=models.CharField(blank=True, max_length=255, null=True),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='contact_street',
-            field=models.CharField(blank=True, max_length=255, null=True),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='contact_voice',
-            field=models.CharField(blank=True, max_length=255, null=True),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='contactus',
-            field=models.BooleanField(default=False, verbose_name=b'Enable contact us box'),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='date',
-            field=models.DateTimeField(auto_now_add=True, help_text=b'This will not appear anywhere.'),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='description',
-            field=models.TextField(blank=True, help_text=b'This will not appear anywhere.', null=True),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='is_enabled',
-            field=models.BooleanField(default=False, help_text=b'Enabling this theme will disable the current enabled theme (if any)'),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='jumbotron_bg',
-            field=models.ImageField(blank=True, null=True, upload_to=b'img/%Y/%m', verbose_name=b'Jumbotron background'),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='jumbotron_welcome_content',
-            field=models.TextField(blank=True, null=True, verbose_name=b'Jumbotron content'),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='jumbotron_welcome_hide',
-            field=models.BooleanField(default=False, help_text=b'Check this if the jumbotron backgroud image already contains text', verbose_name=b'Hide text in the jumbotron'),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='jumbotron_welcome_title',
-            field=models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Jumbotron title'),
-        ),
-        migrations.AlterField(
-            model_name='geonodethemecustomization',
-            name='name',
-            field=models.CharField(help_text=b'This will not appear anywhere.', max_length=100),
-        ),
-        migrations.AlterField(
-            model_name='partner',
-            name='href',
-            field=models.CharField(max_length=255, verbose_name=b'Website'),
-        ),
-        migrations.AlterField(
-            model_name='partner',
-            name='name',
-            field=models.CharField(help_text=b'This will not appear anywhere.', max_length=100),
-        ),
-        migrations.AlterField(
-            model_name='partner',
-            name='title',
-            field=models.CharField(max_length=255, verbose_name=b'Display name'),
-        ),
-    ]
diff --git a/geonode/themes/migrations/0003_remove_geonodethemecustomization_identifier.py b/geonode/themes/migrations/0003_remove_geonodethemecustomization_identifier.py
deleted file mode 100644
index 01d57d2e2..000000000
--- a/geonode/themes/migrations/0003_remove_geonodethemecustomization_identifier.py
+++ /dev/null
@@ -1,19 +0,0 @@
-# -*- coding: utf-8 -*-
-# Generated by Django 1.11.15 on 2018-10-16 02:55
-from __future__ import unicode_literals
-
-from django.db import migrations
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('geonode_themes', '0002_auto_20181015_1208'),
-    ]
-
-    operations = [
-        migrations.RemoveField(
-            model_name='geonodethemecustomization',
-            name='identifier',
-        ),
-    ]
diff --git a/geonode/themes/migrations/__init__.py b/geonode/themes/migrations/__init__.py
deleted file mode 100644
index e69de29bb..000000000
diff --git a/geonode/upload/migrations/24_initial.py b/geonode/upload/migrations/24_initial.py
deleted file mode 100644
index 89adb077d..000000000
--- a/geonode/upload/migrations/24_initial.py
+++ /dev/null
@@ -1,50 +0,0 @@
-# -*- coding: utf-8 -*-
-from __future__ import unicode_literals
-
-from django.db import migrations, models
-import datetime
-from django.utils.timezone import now
-from django.conf import settings
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
-        ('layers', '__first__'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Upload',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('import_id', models.BigIntegerField(null=True)),
-                ('state', models.CharField(max_length=16)),
-                ('date', models.DateTimeField(default=now, verbose_name=b'date')),
-                ('upload_dir', models.CharField(max_length=100, null=True)),
-                ('name', models.CharField(max_length=64, null=True)),
-                ('complete', models.BooleanField(default=False)),
-                ('session', models.TextField(null=True)),
-                ('metadata', models.TextField(null=True)),
-                ('mosaic_time_regex', models.CharField(max_length=128, null=True)),
-                ('mosaic_time_value', models.CharField(max_length=128, null=True)),
-                ('mosaic_elev_regex', models.CharField(max_length=128, null=True)),
-                ('mosaic_elev_value', models.CharField(max_length=128, null=True)),
-                ('layer', models.ForeignKey(to='layers.Layer', null=True)),
-                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True)),
-            ],
-            options={
-                'ordering': ['-date'],
-            },
-        ),
-        migrations.CreateModel(
-            name='UploadFile',
-            fields=[
-                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
-                ('file', models.FileField(upload_to=b'uploads')),
-                ('slug', models.SlugField(blank=True)),
-                ('upload', models.ForeignKey(blank=True, to='upload.Upload', null=True)),
-            ],
-        ),
-    ]
